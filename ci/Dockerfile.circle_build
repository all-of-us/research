# To build and deploy:
# $ docker build -f Dockerfile.circle_build -t allofustest/workbench:buildimage-X.Y.Z .
# Update BOTH the api and ui versions of allofustest/workbench:buildimage-X.Y.Z
# in .circleci/circle.yml by incrementing the numbers. Using the new values, run:
# $ docker push allofustest/workbench:buildimage-X.Y.Z
# Include your changes to circle.yml in the PR that uses the build image.

FROM circleci/openjdk:8-jdk-browsers

USER circleci

RUN cd && \
  wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-162.0.1-linux-x86_64.tar.gz -O gcloud.tgz && \
  tar -xf gcloud.tgz && \
  ./google-cloud-sdk/install.sh  --quiet && \
  ~/google-cloud-sdk/bin/gcloud components install app-engine-java && \
  rm -rf gcloud.tgz

RUN cd && \
  wget https://nodejs.org/dist/v6.11.1/node-v6.11.1-linux-x64.tar.xz -O node.tar.xz && \
  tar -xJf node.tar.xz && \
  mv node-v6.11.1-linux-x64 node && \
  rm -rf node.tar.xz

RUN sudo apt-get install gettext ruby mysql-client

ENV PATH=/home/circleci/node/bin:/home/circleci/google-cloud-sdk/bin:$PATH

# It never makes sense for Gradle to run a daemon within a docker container.
ENV GRADLE_OPTS="-Dorg.gradle.daemon=false"
