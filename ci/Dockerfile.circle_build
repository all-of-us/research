# To build and deploy, from this directory:
# $ docker build -f Dockerfile.circle_build -t allofustest/workbench:buildimage-X.Y.Z .
# Test out the new image with:
# $ docker run -it allofustest/workbench:buildimage-X.Y.Z /bin/bash
# Update all mentions of allofustest/workbench:buildimage-X.Y.Z in
# .circleci/circle.yml by incrementing the numbers. Using the new values, run:
# $ docker login  # interactive prompts
# $ docker push allofustest/workbench:buildimage-X.Y.Z
# For permission to push, request to be added to the DockerHub repository.
# Include your changes to circle.yml in the PR that uses the build image.

# Note: we depend on dockerize being installed on this image.
FROM circleci/openjdk:8-jdk-browsers

USER circleci

RUN cd && \
  wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-162.0.1-linux-x86_64.tar.gz -O gcloud.tgz && \
  tar -xf gcloud.tgz && \
  ./google-cloud-sdk/install.sh  --quiet && \
  ~/google-cloud-sdk/bin/gcloud components install app-engine-java && \
  rm -rf gcloud.tgz

RUN cd && \
  wget https://nodejs.org/dist/v6.11.1/node-v6.11.1-linux-x64.tar.xz -O node.tar.xz && \
  tar -xJf node.tar.xz && \
  mv node-v6.11.1-linux-x64 node && \
  rm -rf node.tar.xz

RUN sudo apt-get update
RUN sudo apt-get install gettext ruby mysql-client python-pip
RUN sudo pip install --upgrade pip
RUN sudo pip install --upgrade pylint

ENV PATH=/home/circleci/node/bin:/home/circleci/google-cloud-sdk/bin:$PATH

RUN npm install -g yarn

# It never makes sense for Gradle to run a daemon within a docker container.
ENV GRADLE_OPTS="-Dorg.gradle.daemon=false"

RUN curl https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 > /tmp/cloud_sql_proxy \
  && sudo mv /tmp/cloud_sql_proxy /usr/local/bin && sudo chmod +x /usr/local/bin/cloud_sql_proxy

RUN sudo apt-get install gradle
