/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.pmiops.workbench.api;

import org.pmiops.workbench.model.EmptyResponse;
import org.pmiops.workbench.model.RecentResource;
import org.pmiops.workbench.model.RecentResourceRequest;
import org.pmiops.workbench.model.RecentResourceResponse;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-12-26T14:53:13.438-06:00")

@Api(value = "UserMetrics", description = "the UserMetrics API")
public interface UserMetricsApi {

    @ApiOperation(value = "", notes = "Deletes entry from recent resource", response = EmptyResponse.class, authorizations = {
        @Authorization(value = "aou_oauth", scopes = {
            
            })
    }, tags={ "userMetrics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully deleted", response = EmptyResponse.class) })
    
    @RequestMapping(value = "/v1/workspaces/{workspaceNamespace}/{workspaceId}/user-recent-resources/delete",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<EmptyResponse> deleteRecentResource(@ApiParam(value = "The Workspace namespace",required=true ) @PathVariable("workspaceNamespace") String workspaceNamespace,@ApiParam(value = "The Workspace ID (a.k.a. the workspace's Firecloud name)",required=true ) @PathVariable("workspaceId") String workspaceId,@ApiParam(value = "request object for updating recent resource" ,required=true )  @Valid @RequestBody RecentResourceRequest recentResourceRequest);


    @ApiOperation(value = "", notes = "Returns the resources accessed by user order by access time desc", response = RecentResourceResponse.class, authorizations = {
        @Authorization(value = "aou_oauth", scopes = {
            
            })
    }, tags={ "userMetrics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A list of resources order by last access time desc order", response = RecentResourceResponse.class) })
    
    @RequestMapping(value = "/v1/workspaces/user-recent-resources",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<RecentResourceResponse> getUserRecentResources();


    @ApiOperation(value = "", notes = "Add/update user recent resource", response = RecentResource.class, authorizations = {
        @Authorization(value = "aou_oauth", scopes = {
            
            })
    }, tags={ "userMetrics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully added/updated", response = RecentResource.class) })
    
    @RequestMapping(value = "/v1/workspaces/{workspaceNamespace}/{workspaceId}/user-recent-resources/update",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<RecentResource> updateRecentResource(@ApiParam(value = "The Workspace namespace",required=true ) @PathVariable("workspaceNamespace") String workspaceNamespace,@ApiParam(value = "The Workspace ID (a.k.a. the workspace's Firecloud name)",required=true ) @PathVariable("workspaceId") String workspaceId,@ApiParam(value = "request object for updating recent resource" ,required=true )  @Valid @RequestBody RecentResourceRequest recentResourceRequest);

}
