# Endpoints in this API are intended to be used by researchers in notebooks; make sure they
# are extra-well documented and designed and that we do not break backwards compatibility!

# For separate validation (with some false positives), do:
#     ./project.rb validate-swagger
swagger: '2.0'
info:
  version: "0.1.0"
  title: "AllOfUs Client API"
  description: "The API used by AllOfUs workbench clients (including both notebooks and our UI.)"
  termsOfService: "http://www.pmi-ops.org/terms_of_service.html"
  contact:
    name: "developer_help@pmi-ops.org"
  license:
    name: "MIT"
host: "api.pmi-ops.org"
securityDefinitions:
  # Establish the fact that *some endpoints* are OAuth protected
  # by defining an `aou_oauth` security mode, which we'll assing
  # to any protected endpoints below.
  aou_oauth:
    # TODO: Vet/fix this token and/or authorization URL to work in practice.
    # These are currently included simply to satisfy the Swagger specification,
    # as this is not directly used to dictate oauth details (just used to
    # annotate which methods require oauth).
    authorizationUrl: ""
    tokenUrl: ""
    type: oauth2
    flow: accessCode
schemes:
  - "https"
produces:
  - "application/json"
# Establish the fact that all endpoints are protected: this annotation
# ensures that client libraries know to send bearer tokens when calling
security:
  - aou_oauth: []

## Common Path Parameters
parameters:
  workspaceNamespace:
    in: path
    name: workspaceNamespace
    type: string
    description: The Workspace namespace
    required: true
  workspaceId:
    in: path
    name: workspaceId
    type: string
    description: The Workspace ID (a.k.a. the workspace's Firecloud name)
    required: true

paths:

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/materializeCohort:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - cohorts
      description: Materializes a cohort for a given CDR version to specified output
      operationId: "materializeCohort"
      parameters:
       - in: body
         name: request
         description: cohort materialization request
         schema:
           $ref: "#/definitions/MaterializeCohortRequest"
      responses:
        200:
          description: The results of materializing the cohort
          schema:
            $ref: "#/definitions/MaterializeCohortResponse"

definitions:

  MaterializeCohortRequest:
    type: object
    properties:
      cohortName:
        description: >
         The name of a cohort that is to be evaluated. Either this or cohortSpec should be specified
        type: string
      cohortSpec:
        description: >
          JSON representation of a cohort to be evaluated (using the same format used for saved
          cohorts). Either this or cohortName should be specified
        type: string
      statusFilter:
        description: >
          An array of status values; participants with these statuses will be included.
          Defaults to [NOT_REVIEWED, INCLUDED, NEEDS_FURTHER_REVIEW] -- everything but EXCLUDED.
          Only valid for use with cohortName (cohorts saved in the database.)
        type: array
        items:
          $ref: "#/definitions/CohortStatus"
      cdrVersionName:
        description: >
          The name of a CDR version to use when evaluating the cohort; if none is specified,
          the CDR version currently associated with the workspace will be used
        type: string
      pageToken:
        description: >
          Pagination token retrieved from a previous call to materializeCohort; used for
          retrieving additional pages of results. If this is specified, all other fields on
          MaterializeCohortRequest apart from pageSize must match the values specified
          on the request that generated this token.
        type: string
      pageSize:
        description: >
          Maximum number of results to return in a response. Defaults to 1000.
        type: integer
        format: int32
      fieldSet:
        description: >
          Specification defining what data to return for participants in the cohort. Defaults to
          just participant IDs.
        $ref: "#/definitions/FieldSet"
      # TODO: add output information

  MaterializeCohortResponse:
    type: object
    properties:
      results:
        description: >
          An array of JSON dictionaries representing results to the cohort materialization.
          (In Java, this is represented as Map<String, Object>[]. In Python clients, this is a
          list[object] where each object is a dictionary. In Typescript clients, this is an
          Array<any> where each object is a dictionary.)
        type: array
        items:
          type: object
      nextPageToken:
        description: >
          Pagination token that can be used in a subsequent call to MaterializeCohortRequest to
          retrieve more results. If not set, there are no more results to retrieve.
        type: string

  FieldSet:
    type: object
    description: >
      A specification for fields to retrieve about participants in a cohort.
      Exactly one of the properties below should be specified.
    properties:
      tableQuery:
        description: >
          A query specifying how to pull data out of a single table.
        $ref: "#/definitions/TableQuery"

  TableQuery:
    type: object
    description: >
      A specification for pulling data from a single table.
    properties:
      tableName:
        description: >
          The name of a table containing a person_id column to retrieve data from (e.g. person, observation);
          should be in the OMOP CDM 5.2 schema.
        externalDocs:
          description: OMOP CDM 5.2 schema definition
          url: https://github.com/OHDSI/CommonDataModel/blob/v5.2.0/PostgreSQL/OMOP%20CDM%20ddl%20-%20PostgreSQL.sql                          
        type: string
      columns:
        description: >
          An array of columns to retrieve from the table, taken from the table specified above.
          Defaults to all columns.
        type: array
        items:
          type: string
      orderBy:
        description: >
          An array of columns to sort the resulting data by, taken from the table specified above,
          each one optionally followed by " DESC" for descending sort order. (Default varies by table.)
        type: array
        items:
          type: string

  CohortStatus:
    type: string
    description: possible values indicating whether participants are in or out of the cohort
    enum: [EXCLUDED, INCLUDED, NEEDS_FURTHER_REVIEW, NOT_REVIEWED]
