# A subset of the FireCloud API spec that we use to generate Java client libraries. The
# original API spec can be found here:
# https://github.com/broadinstitute/firecloud-orchestration/blob/develop/src/main/resources/swagger/api-docs.yaml
# WorkspaceResponse and its children are not in the current FC API spec and can be found in the
# Rawls spec here:
# https://github.com/broadinstitute/rawls/blob/develop/core/src/main/resources/swagger/rawls.yaml#L5034

swagger: '2.0'

info:
  title: FireCloud
  description: |
    Genome analysis execution service.
  version: "0.1"
  license:
    name: BSD
    url: http://opensource.org/licenses/BSD-3-Clause
  termsOfService: https://github.com/broadinstitute/firecloud-orchestration

host: "api.firecloud.org"
schemes:
  - "https"
basePath: /

produces:
  - application/json

security:
  - googleoauth:
      - openid
      - email
      - profile
      - https://www.googleapis.com/auth/devstorage.full_control

securityDefinitions:
  googleoauth:
    type: oauth2
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    flow: implicit
    scopes:
      openid: open id authorization
      email: email authorization
      profile: profile authorization
      https://www.googleapis.com/auth/devstorage.full_control: GCS storage
      https://www.googleapis.com/auth/cloud-billing: GCS billing

##########################################################################################
## PATHS
##########################################################################################
paths:
  /status:
    get:
      operationId: status
      tags:
        - status
      summary: |
        An orchestrated status check for underlying systems: Agora, Thurloe, Elasticsearch, Rawls
      responses:
        200:
          description: All systems OK.
          schema:
            $ref: '#/definitions/SystemStatus'
        500:
          description: Problem with one or more systems. See response for details.
          schema:
            $ref: '#/definitions/SystemStatus'
      security: []
  /api/billing:
    post:
      responses:
        204:
          description: Successfully Created Billing Project in FireCloud and Google
        400:
          description: FireCloud billing user must be an admin of the billing account
          schema:
            $ref: '#/definitions/ErrorReport'
        403:
          description: You must be an admin of the google billing account
          schema:
            $ref: '#/definitions/ErrorReport'
        409:
          description: project already exists in FireCloud or google
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: body
          description: create project request
          name: createProjectRequest
          required: true
          schema:
            $ref: '#/definitions/CreateRawlsBillingProjectFullRequest'
      tags:
        - Billing
      consumes:
        - application/json
      summary: create billing project in FireCloud and google
      operationId: createBillingProjectFull
      security:
        - googleoauth:
          - openid
          - email
          - profile
          - https://www.googleapis.com/auth/cloud-billing
  /api/billing/{projectId}/members:
    get:
      tags:
        - Billing
      summary: list members of billing project the caller owns
      operationId: listBillingProjectMembers
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/BillingProjectMember'
        403:
          description: You must be a project owner to view the members of a project
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      security:
        - googleoauth:
            - openid
            - email
            - profile
  /api/billing/{projectId}/{role}/{email}:
      put:
        responses:
          200:
            description: Successfully Added User To Billing Project
          403:
            description: You must be a project owner to add a user to a billing project
            schema:
              $ref: '#/definitions/ErrorReport'
          404:
            description: User not found
            schema:
              $ref: '#/definitions/ErrorReport'
          500:
            description: FireCloud Internal Error
            schema:
              $ref: '#/definitions/ErrorReport'
        parameters:
          - in: path
            description: Project ID
            name: projectId
            required: true
            type: string
          - in: path
            description: role of user for project
            name: role
            required: true
            type: string
            enum: ["user", "owner"]
          - in: path
            description: email of user or group to add
            name: email
            required: true
            type: string
        tags:
          - Billing
        summary: add user to billing project the caller owns
        operationId: addUserToBillingProject
        security:
          - googleoauth:
              - openid
              - email
              - profile
      delete:
        responses:
          '200':
            description: Successfully Removed User From Billing Project
          '403':
            description: You must be a project owner to add a user to a billing project
            schema:
              $ref: '#/definitions/ErrorReport'
          '404':
            description: User not found
            schema:
              $ref: '#/definitions/ErrorReport'
          '500':
            description: Rawls Internal Error
            schema:
              $ref: '#/definitions/ErrorReport'
        description: remove user or group from billing project the caller owns
        parameters:
          - in: path
            description: Project ID
            name: projectId
            required: true
            type: string
          - in: path
            description: role of user for project
            name: role
            required: true
            type: string
            enum: ["user", "owner"]
          - in: path
            description: email of user or group to remove
            name: email
            required: true
            type: string
        tags:
          - billing
        summary: remove user or group from billing project the caller owns
        operationId: removeUserFromBillingProject
        security:
          - googleoauth:
              - openid
              - email
              - profile

  /api/user/billing/{projectName}:
    delete:
      tags:
        - Billing
      summary: delete billing project
      description: >
        Immediately delete the Billing Project and all of its resources, as well as the underlying Google Project.
        Requires that there are no Workspaces associated with this Project.
      operationId: deleteBillingProject
      parameters:
        - in: path
          description: Name of the billing project
          name: projectName
          required: true
          type: string
      responses:
        200:
          description: Successfully delete billing project
        400:
          description: Project cannot be deleted because it contains workspaces.
          schema:
            $ref: '#/definitions/ErrorReport'
        403:
          description: You must be a project owner to delete billing project
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      security:
        - googleoauth:
            - openid
            - email
            - profile

  /api/nih/status:
    get:
      tags:
        - Nih
      operationId: nihStatus
      summary: Get the current NIH status for a user
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/NihStatus'
        404:
          description: linkedNihUsername key missing from status
        500:
          description: Internal server error retrieving NIH status

  /api/profile/billing:
    get:
      tags:
        - Profile
      operationId: billing
      summary: List billing projects for a user
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillingProjectMembership'
        404:
          description: User Not Found
        500:
          description: Internal Server Error

  /api/profile/billing/{projectName}:
    get:
      tags:
        - billing
      operationId: billingProjectStatus
      parameters:
        - name: projectName
          description: Name of the billing project
          required: true
          type: string
          in: path
      description: billing project status
      summary: billing project status
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BillingProjectStatus'
        404:
          description: Project Not Found
        500:
          description: Internal Server Error

  /api/workspaces:
    get:
      tags:
      - Workspaces
      operationId: listWorkspaces
      summary: |
        Lists workspaces.
      parameters:
        - name: fields
          description: >
            When specified, include only these keys in the response payload and exclude other keys.
            Accepts a comma-delimited list of values. To include a nested key, specify the key's path
            using a dot delimiter; for example, to include {"workspace": {"attributes": {}}}, specify
            "workspace.attributes". Legal values are any first-level key in the response, any first-level key
            inside the {"workspace": {}} object, and any first-level key inside the {"workspace": {"attributes": {}}}
            object.
            If omitted, will return the full response payload.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
          in: query
      produces:
        - application/json
        - text/plain
      responses:
        200:
          description: List of workspaces.
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkspaceResponse'
    post:
      tags:
        - Workspaces
      consumes:
        - application/json
      operationId: createWorkspace
      summary: Create workspace
      parameters:
        - name: workspace
          description: New workspace information
          required: true
          in: body
          schema:
            type: object
            $ref: '#/definitions/WorkspaceIngest'
      responses:
        201:
          description: Successful Request
          schema:
            $ref: '#/definitions/Workspace'
        403:
          description: Unable to create bucket for workspace
        409:
          description: Workspace by that name already exists
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}:
    get:
      tags:
        - Workspaces
      operationId: getWorkspace
      summary: Get workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: fields
          description: >
            When specified, include only these keys in the response payload and exclude other keys.
            Accepts a comma-delimited list of values. To include a nested key, specify the key's path
            using a dot delimiter; for example, to include {"workspace": {"attributes": {}}}, specify
            "workspace.attributes". Legal values are any first-level key in the response, any first-level key
            inside the {"workspace": {}} object, and any first-level key inside the {"workspace": {"attributes": {}}}
            object.
            If omitted, will return the full response payload.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
          in: query
      responses:
        200:
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceResponse'
        404:
          description: Workspace does not exist
        500:
          description: Internal Server Error
    delete:
      tags:
        - Workspaces
      operationId: deleteWorkspace
      summary: Delete workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        202:
          description: Request Accepted
        403:
          description: User does not have correct permissions to delete a published workspace
        404:
          description: Workspace does not exist
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/acl:
    get:
      tags:
        - Workspaces
      operationId: getWorkspaceAcl
      summary: Get workspace ACL
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceACL'
        400:
          description: Can't retrieve ACL for workspace
        404:
          description: Workspace not found
        500:
          description: Internal Server Error
    patch:
      tags:
        - Workspaces
      consumes:
        - application/json
      operationId: updateWorkspaceACL
      summary: Update workspace ACL
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - in: query
          description: true to invite unregistered users, false to ignore
          name: inviteUsersNotFound
          required: true
          default: false
          type: boolean
        - name: aclUpdates
          description: Series of ACL updates for workspace
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkspaceACLUpdate'
          in: body
      responses:
        200:
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceACLUpdateResponseList'
        400:
          description: Can't set ACL for workspace
        404:
          description: Workspace not found
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/clone:
    post:
      tags:
        - Workspaces
      consumes:
        - application/json
      operationId: cloneWorkspace
      summary: Clone Workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: workspace
          description: Cloned workspace information
          required: true
          in: body
          schema:
            $ref: '#/definitions/WorkspaceRequestClone'
      responses:
        201:
          description: Successful Request
          schema:
            $ref: '#/definitions/Workspace'
        400:
          description: Unable to create resources for workspace
        404:
          description: Source workspace not found
        409:
          description: Destination workspace already exists
        500:
          description: Internal Server Error

  /api/staticNotebooks/convert:
    post:
      tags:
        - Static Notebooks
      operationId: convertNotebook
      produces:
        - text/html
      summary: Convert a Notebook ipynb file to a static HTML representation
      description: Convert a Notebook ipynb file to a static HTML representation
      parameters:
        - name: notebook
          description: Notebook ipynb file
          required: true
          in: body
          schema:
            type: object
      responses:
        200:
          description: Success
          schema:
            type: string
        500:
          description: Internal Error

  /me:
    get:
      tags:
        - Profile
      operationId: me
      summary: Returns registration and activation status for the current user
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Me'
        401:
          description: Unauthorized. User is not allowed in FireCloud or has not signed in.
        403:
          description: Forbidden. User is registered in FireCloud, but not activated.
        404:
          description: Not Found. User is authenticated to Google but not a FireCloud member.
        500:
          description: Internal Server Error determining user status.
        503:
          description: Service Unavailable. Could not reach underlying services to determine user status.

  /register/profile:
      post:
        tags:
          - Profile
        consumes:
          - application/json
        operationId: setProfile
        summary: Sets a profile object in the user profile service for the currently logged-in user.
        parameters:
        - name: profile
          description: A complete profile
          in: body
          schema:
            $ref: '#/definitions/Profile'
        responses:
          200:
            description: OK
          400:
            description: Bad request
          500:
            description: Internal server error

  /api/groups:
      get:
        responses:
          200:
            description: Successfully listed group membership
            schema:
              type: array
              items:
                $ref: '#/definitions/ManagedGroupAccessResponse'
          500:
            description: FireCloud Internal Error
            schema:
              $ref: '#/definitions/ErrorReport'
        tags:
          - Groups
        summary: get the list of the groups that the caller is a member of
        operationId: getGroups
        security:
          - googleoauth:
            - openid
            - email
            - profile

  /api/groups/{groupName}:
    get:
      responses:
        200:
          description: Successfully loaded group
          schema:
            $ref: '#/definitions/ManagedGroupWithMembers'
        403:
          description: You must be an admin of this group in order to view members
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: Group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
      tags:
        - Groups
      summary: view the members in a group
      operationId: getGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile
    post:
      responses:
        201:
          description: Successfully created group
          schema:
            $ref: '#/definitions/ManagedGroupWithMembers'
        409:
          description: Group already exists
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
      tags:
        - Groups
      summary: create a new group
      operationId: createGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/groups/{groupName}/{role}/{email}:
    put:
      responses:
        204:
          description: Successfully Added User To Group
        403:
          description: You must be an admin of this group in order to add members
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
        - in: path
          description: role of user for group
          name: role
          required: true
          type: string
          enum: ["member", "admin"]
        - in: path
          description: email of user or group to add
          name: email
          required: true
          type: string
      tags:
        - Groups
      summary: add a user to a group the caller owns
      operationId: addUserToGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile
    delete:
      responses:
        204:
          description: Successfully Removed User From Group
        403:
          description: You must be an admin of this group in order to remove members
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
        - in: path
          description: role of user for group
          name: role
          required: true
          type: string
          enum: ["member", "admin"]
        - in: path
          description: email of user or group to add
          name: email
          required: true
          type: string
      tags:
        - Groups
      summary: remove a user from a group the caller owns
      operationId: removeUserFromGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/proxyGroup/{email}:
    get:
      tags:
        - Profile
      operationId: getProxyGroup
      summary: Returns the proxy group email for the current user
      parameters:
        - in: path
          description: User email whose proxy group to retrieve
          name: email
          required: true
          type: string
      responses:
        200:
          description: user proxy group
          schema:
            type: string
        404:
          description: Group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'

  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions:
    post:
      tags:
        - Submissions
      summary: |
        Create a submission.
      operationId: createSubmission
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          type: string
        - name: submissionRequest
          in: body
          description: Submission Request
          required: true
          schema:
            $ref: '#/definitions/SubmissionRequest'
      responses:
        201:
          description: Successful Request
          schema:
            $ref: '#/definitions/SubmissionResponse'
        400:
          description: Expression eval failed or entities are not of type required
            by method config
        404:
          description: Method Configuration or Entity not found
        409:
          description: Method Configuration failed to resolve input expressions with
            the supplied Entity
        500:
          description: Internal Error

  /api/methods:
    get:
      tags:
        - methodRepository
      summary: |
        Lists Method Repository methods.
      operationId: listMethodRepositoryMethods
      parameters:
        - name: namespace
          in: query
          description: Namespace of method.
          type: string
        - name: name
          in: query
          description: Name of method.
          type: string
        - name: snapshotId
          in: query
          description: Snapshot ID of method.
          type: integer
          format: int32
        - name: snapshotComment
          in: query
          description: Snapshot comment of AgoraEntity
          type: string
        - name: synopsis
          in: query
          description: Synopsis of method.
          type: string
        - name: documentation
          in: query
          description: Documentation of method.
          type: string
        - name: owner
          in: query
          description: Owner of method.
          type: string
        - name: payload
          in: query
          description: Payload of method in WDL.
          type: string
        - name: entityType
          in: query
          description: Type of Method - Task or Workflow
          type: string
      responses:
        200:
          description: List of methods
          schema:
            type: array
            items:
              $ref: '#/definitions/MethodResponse'
        400:
          description: Invalid arguments
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorReport'
    post:
      tags:
        - methodRepository
      summary: Add a Method.
      operationId: createMethod
      description: |
        Inserts a method into the method repository and
        gives the owner full access permissions. Must supply a namespace
        name, payload, and entityType. Cannot supply a snapshotId
      parameters:
        - name: methodQuery
          in: body
          description: Method Query
          required: true
          schema:
            $ref: '#/definitions/MethodQuery'
      responses:
        201:
          description: Method successfully added.
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Malformed input.
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Internal error.
          schema:
            $ref: '#/definitions/ErrorReport'

  /api/methods/{namespace}/{name}/{snapshotId}:
    post:
      tags:
        - methodRepository
      summary: Create a new snapshot of an existing Method.
      operationId: createMethodSnapshot
      description: |
        Inserts a new snapshot of the method into the method repository and
        copies access permissions from previous snapshot, optionally redacting
        the source snapshot. Documentation, synopsis, and payload are the only
        arguments considered for the new snapshot; everything else is copied
        from the source.
      parameters:
        - name: namespace
          in: path
          description: Method Namespace
          required: true
          type: string
        - name: name
          in: path
          description: Method Name
          required: true
          type: string
        - name: snapshotId
          in: path
          description: Method snapshot ID
          required: true
          type: string
        - name: redact
          in: query
          description: Should the source method be redacted?
          type: boolean
          default: false
        - name: methodQuery
          in: body
          description: Method Query
          required: true
          schema:
            $ref: '#/definitions/MethodQuery'
      responses:
        200:
          description: Method successfully copied.
          schema:
            $ref: '#/definitions/MethodResponse'
        206:
          description: Method successfully copied, but error while redacting.
          schema:
            $ref: '#/definitions/ErrorReport'
        400:
          description: Malformed input.
          schema:
            $ref: '#/definitions/ErrorReport'
        403:
          description: Forbidden to create copy.
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: Source snapshot not found.
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Internal error.
          schema:
            $ref: '#/definitions/ErrorReport'

  /api/inputsOutputs:
    post:
      tags:
        - methodRepository
      summary: Get information about a method's inputs and outputs
      operationId: getMethodIO
      parameters:
        - name: methodId
          in: body
          description: Method ID
          required: true
          schema:
            $ref: '#/definitions/MethodID'
      responses:
        200:
          description: Method Configuration inputs and outputs
          schema:
            $ref: '#/definitions/MethodIO'
        400:
          description: Method WDL can't be parsed
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: No Such Method
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorReport'

  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs:
    post:
      tags:
        - methodConfigurations
      summary: Create a Method Configuration in a workspace
      operationId: createWorkspaceMethodConfig
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          type: string
        - in: body
          name: newMethodConfigIngest
          description: Method Configuration contents
          required: true
          schema:
            $ref: '#/definitions/MethodConfiguration'
      responses:
        201:
          description: Successful Request
          schema:
            $ref: '#/definitions/ValidatedMethodConfiguration'
        404:
          description: Workspace not found
        409:
          description: Method Configuration already exists
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/{configNamespace}/{configName}:
    delete:
      tags:
        - methodConfigurations
      summary: Delete a method configuration in a workspace
      operationId: deleteWorkspaceMethodConfig
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          type: string
        - name: configNamespace
          in: path
          description: Configuration Namespace
          required: true
          type: string
        - name: configName
          in: path
          description: Configuration Name
          required: true
          type: string
      responses:
        200:
          description: Successful request
        404:
          description: Workspace or Method Configuration not found
        500:
          description: Internal Server Error

##########################################################################################
## PARAMETERS
##########################################################################################
parameters:
  workspaceNamespaceParam:
    name: workspaceNamespace
    description: Workspace Namespace
    required: true
    type: string
    in: path
  workspaceNameParam:
    name: workspaceName
    description: Workspace Name
    required: true
    type: string
    in: path

##########################################################################################
## DEFINITIONS
##########################################################################################
definitions:

  BillingProjectMember:
    required:
      - email
      - role
    type: object
    properties:
      email:
        type: string
        description: the email of the user
      role:
        type: string
        description: the role of the user in the project
  BillingProjectMembership:
    description: ''
    required:
      - projectName
      - role
      - status
    type: object
    properties:
      projectName:
        type: string
        description: the name of the project to create
      role:
        type: string
        description: the role of the current user in the project
      creationStatus:
        type: string
        enum: ["Creating", "Ready", "Error"]

  BillingProjectStatus:
    description: a billing project status
    required:
      - projectName
      - creationStatus
    type: object
    properties:
      projectName:
        type: string
        description: the name of the billing project
      creationStatus:
        type: string
        enum: ["Creating", "AddingToPerimeter", "Ready", "Error"]

  CreateRawlsBillingProjectFullRequest:
    description: ''
    required:
      - projectName
      - billingAccount
    type: object
    properties:
      projectName:
        type: string
        description: the name of the project to create
      billingAccount:
        type: string
        description: the id of the billing account to use, must start with 'billingAccounts/'
      highSecurityNetwork:
        type: boolean
        description: Optional, false if not specified. If true, spin up all compute in a VPC network.
      enableFlowLogs:
        type: boolean
        description: Optional, false if not specified. If true, enable flow logs within the high security network. Requires highSecurityNetwork = true.
      privateIpGoogleAccess:
        type: boolean
        description: Optional, false if not specified. If true, it configures the VPC network to only allow access to GCP APIs that are protected by the project's service perimeter and routes all allowed API traffic through a narrow IP range. Requires highSecurityNetwork = true.
      servicePerimeter:
        type: string
        description: The fully qualified name of the GCP service perimeter to put this project into in the form accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME]. Caller must have the add_project action for this service perimeter in Sam.

  Enabled:
    type: object
    properties:
      google:
        type: boolean
        description: User enabled via Google?
      ldap:
        type: boolean
        description: User enabled in LDAP?
      allUsersGroup:
        type: boolean
        description: User is a member of the "All Users" group?

  ErrorReport:
    description: ''
    required:
      - source
      - message
      - causes
      - stackTrace
    type: object
    properties:
      source:
        type: string
        description: service causing error
      message:
        type: string
        description: what went wrong
      statusCode:
        type: integer
        description: HTTP status code
      causes:
        type: array
        description: errors triggering this one
        items:
          $ref: '#/definitions/ErrorReport'
      stackTrace:
        type: array
        description: stack trace
        items:
          $ref: '#/definitions/StackTraceElement'

  ManagedGroupRef:
    description: a reference to a group that can be managed by users
    type: object
    required:
      - membersGroupName
    properties:
      membersGroupName:
        type: string

  Me:
    type: object
    properties:
      userInfo:
        $ref: '#/definitions/UserInfo'
      enabled:
        $ref: '#/definitions/Enabled'

  NihStatus:
    required:
      - linkedNihUsername
    type: object
    properties:
      linkedNihUsername:
        type: string
        description: The user's NIH username
      datasetPermissions:
        type: array
        description: Array of FireCloud dataset permissions
        items:
          type: object
      linkExpireTime:
        type: integer
        description: The FireCloud-calculated expiration time, in Epoch seconds
        format: int64
        default: 0

  Profile:
      type: object
      properties:
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        title:
          type: string
          description: User's title
        contactEmail:
          type: string
          description: User's contact email (if different from account email)
        institute:
          type: string
          description: User's home institution
        institutionalProgram:
          type: string
          description: User's institutional program
        programLocationCity:
          type: string
          description: User's program location city
        programLocationState:
          type: string
          description: User's program location state
        programLocationCountry:
          type: string
          description: User's program location country
        pi:
          type: string
          description: Principal Investigator
        nonProfitStatus:
          type: string
          description: User's program non-profit status
      required:
        - firstName
        - lastName
        - title
        - institute
        - institutionalProgram
        - programLocationCity
        - programLocationState
        - programLocationCountry
        - pi
        - nonProfitStatus

  StackTraceElement:
      description: ''
      required:
        - className
        - methodName
        - fileName
        - lineNumber
      type: object
      properties:
        className:
          type: string
          description: class name
        methodName:
          type: string
          description: method name
        fileName:
          type: string
          description: source file name
        lineNumber:
          type: integer
          description: line number

  UserInfo:
    type: object
    properties:
      userSubjectId:
        type: string
        description: Subject ID (from Google)
      userEmail:
        type: string
        description: User's email

  # Core workspace data model object. Used by Get and List workspace. This schema is similar to, but not exactly the
  # same, as the model used by Create and Clone workspace. The differences are not (currently) meaningful
  # for any AoU workbench use case, so we've edited the YAML to merge these schemas for our own code simplicity.
  #
  # The Terra App Services team plans to clean this up with ticket AS-21.
  Workspace:
    description: ''
    required:
      - namespace
      - name
      - workspaceId
      - authorizationDomain
      - bucketName
      - createdDate
      - lastModified
      - createdBy
      - attributes
      - accessLevels
      - authDomainACLs
      - isLocked
    type: object
    properties:
      namespace:
        type: string
        description: The namespace the workspace belongs to
      name:
        type: string
        description: The name of the workspace
      authorizationDomain:
        type: array
        items:
          $ref: '#/definitions/ManagedGroupRef'
        description: The list of groups to form the Authorization Domain (empty if no Authorization Domain is set)
      workspaceId:
        type: string
        description: A UUID associated with the workspace
      bucketName:
        type: string
        description: The name of the bucket associated with the workspace
      createdDate:
        type: string
        format: date-time
        description: 'The date the workspace was created in yyyy-MM-ddTHH:mm:ss.SSSZZ format'
      lastModified:
        type: string
        format: date-time
        description: 'The date the workspace was last modified in yyyy-MM-ddTHH:mm:ss.SSSZZ format'
      createdBy:
        type: string
        description: The user who created the workspace
      attributes:
        type: object
        description: Map[String, Attribute]
      accessLevels:
        type: object
        description: Map[String, RawlsGroupRef]
      authDomainACLs:
         type: object
         description: Map[String, RawlsGroupRef]
      isLocked:
        type: boolean
        description: Can the Workspace currently be modified?

  WorkspaceAccessLevel:
    description: 'The level of access a user or group has on a Workspace. NoAccess, Read, Write, Owner, ProjectOwner'
    properties:
      name:
        type: string
        description: Workspace Access Level

  WorkspaceIngest:
    required:
      - namespace
      - name
      - attributes
    type: object
    properties:
      namespace:
        type: string
        description: New workspace namespace
      name:
        type: string
        description: New workspace name
      attributes:
        type: object
        additionalProperties:
          type: string
        description: Map of attributes
      authorizationDomain:
        type: array
        items:
          $ref: '#/definitions/ManagedGroupRef'
        description: The list of groups to form the Authorization Domain (empty if no Authorization Domain is set)

  WorkspaceRequestClone:
    description: ''
    required:
      - namespace
      - name
      - attributes
    properties:
      namespace:
        type: string
        description: The namespace (billing project) the workspace belongs to
      name:
        type: string
        description: The name of the workspace
      authorizationDomain:
        type: array
        items:
          $ref: '#/definitions/ManagedGroupRef'
        description: The list of groups in the Authorization Domain (empty if no AD is set)
      attributes:
        type: object
        additionalProperties:
          type: string
      copyFilesWithPrefix:
        type: string
        description: Used for clone operations only; the prefix for files to copy between source and destination workspace buckets

  # The response object returned from Get or List workspace.
  WorkspaceResponse:
    description: ''
    properties:
      accessLevel:
        type: string
      canShare:
        type: boolean
      catalog:
        type: boolean
      workspace:
        $ref: '#/definitions/Workspace'
      workspaceSubmissionStats:
        $ref: '#/definitions/WorkspaceSubmissionStats'
      owners:
        type: array
        items:
          type: string

  WorkspaceSubmissionStats:
    description: Statistics about submissions in a workspace
    required:
      - runningSubmissionsCount
    properties:
      lastSuccessDate:
        type: string
        format: date-time
        description: The date of the last successful submission
      lastFailureDate:
        type: string
        format: date-time
        description: The date of the last failed submission
      runningSubmissionsCount:
        type: integer
        description: Count of all the running submissions

  WorkspaceACL:
    description: ''
    required:
      - acl
    type: object
    properties:
      acl:
        type: object
        additionalProperties:
          $ref: '#/definitions/WorkspaceAccessEntry'
        description: Map[String, WorkspaceAccessEntry]

  WorkspaceACLUpdate:
    description: ''
    required:
      - email
      - accessLevel
    type: object
    properties:
      email:
        type: string
        description: email address of the user or group whose permissions will be changed
      accessLevel:
        type: string
        description: The access level to grant to this user or group (OWNER, READER, WRITER, NO ACCESS)
      canShare:
        type: boolean
        description: Set to true if you want this user to be able to share the workspace with other users, only meaningful for readers and writers, default false
      canCompute:
        type: boolean
        description: Set to true if you want this user to be able to launch compute in this workspace, may not be true for readers, default false for reader, true otherwise
  WorkspaceACLUpdateResponse:
    description: ''
    required:
      - subjectId
      - accessLevel
    type: object
    properties:
      subjectId:
        type: string
        description: id of the user or group whose permissions will be changed
      accessLevel:
        type: string
        description: The access level granted to this user or group (OWNER, READER, WRITER, NO ACCESS)

  WorkspaceACLUpdateResponseList:
    description: ''
    required:
      - usersUpdated
      - invitesSent
      - invitesUpdated
      - usersNotFound
    type: object
    properties:
      usersUpdated:
        type: array
        description: the users or groups who were updated
        items:
          $ref: '#/definitions/WorkspaceACLUpdateResponse'
      invitesSent:
        type: array
        description: the list of invites that were sent
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'
      invitesUpdated:
        type: array
        description: the list of invites that were updated
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'
      usersNotFound:
        type: array
        description: the users or groups who were not found
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'

  WorkspaceAccessEntry:
    description: ''
    required:
      - accessLevel
      - pending
      - canShare
      - canCompute
    type: object
    properties:
      accessLevel:
        type: string
        description: The access level granted to this user or group (OWNER, READER, WRITER, NO ACCESS)
      pending:
        type: boolean
        description: The status of the users access
      canShare:
        type: boolean
        description: True if the user can share the workspace with others, false otherwise
      canCompute:
        type: boolean
        description: True if the user can launch compute in this workspace, false otherwise

  ManagedGroupAccessResponse:
    description: an element of a list of groups a user has access to
    type: object
    required:
      - groupName
      - groupEmail
      - role
    properties:
      groupName:
        type: string
      groupEmail:
        type: string
      role:
        type: string

  ManagedGroupWithMembers:
    description: a group with all of its members
    type: object
    required:
      - membersGroup
      - adminsGroup
      - membersEmails
      - adminsEmails
    properties:
      groupEmail:
        type: string
      membersEmails:
        type: array
        items:
          type: string
      adminsEmails:
        type: array
        items:
          type: string

  RawlsGroupShort:
    type: object
    description: a reference to a group
    properties:
      groupName:
        type: string
        description: 'the name of the group'
      groupEmail:
        type: string
        description: 'the email associated with the group'

  SystemStatus:
    description: report status of systems Orchestration calls out to
    type: object
    required:
      - ok
      - systems
    properties:
      ok:
        type: boolean
        description: whether any system(s) need attention
        example: false
      systems:
        type: object
        description: Map[String, SubsystemStatus]
        example:
          Agora:
            ok: true
          Google:
            ok: true
          Consent:
            ok: false
            messages:
              - "ClusterHealth is RED"
          Rawls:
            ok: true
          Ontology:
            ok: true
          Search:
            ok: true
          Thurloe:
            ok: false
            messages:
              - "Thurloe misbehavior message"

  Submission:
    type: object
    properties:
      submissionId:
        type: string
        description: SubmissionRequest unique identifier
      submissionDate:
        type: string
        description: SubmissionRequest date
        format: date-time
      submitter:
        type: string
        description: user that created the submission
      methodConfigurationNamespace:
        type: string
        description: Method configuration namespace
      methodConfigurationName:
        type: string
        description: Method configuration name
      workflows:
        type: array
        description: Status of Workflow(s)
        items:
          $ref: '#/definitions/Workflow'
      status:
        $ref: '#/definitions/SubmissionStatus'
      cost:
        type: number
        description: The compute cost of this submission
        format: float
      useCallCache:
        type: boolean
        description: Whether or not to read from cache for this submission
      deleteIntermediateOutputFiles:
        type: boolean
        description: Whether or not to delete intermediate output files when the
          workflow completes. See Cromwell docs for more information.
      workflowFailureMode:
        type: string
        description: What happens after a task fails. Choose from ContinueWhilePossible
          and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell
          docs for more information.
        default: NoNewCalls
        enum:
          - NoNewCalls
          - ContinueWhilePossible
    description: ""

  SubmissionStatus:
    type: string
    description: submission status
    enum:
      - Accepted
      - Evaluating
      - Submitting
      - Submitted
      - Aborting
      - Aborted
      - Done

  Workflow:
    type: object
    properties:
      workflowId:
        type: string
        description: Workflow unique identifier
      status:
        $ref: '#/definitions/WorkflowStatus'
      statusLastChangedDate:
        type: string
        description: Status last-changed date
        format: date-time
      messages:
        type: array
        description: List of messages about this workflow
        items:
          type: string
      cost:
        type: number
        description: The run cost of this workflow
        format: float
    description: ""

  WorkflowStatus:
    type: string
    description: workflow status
    enum:
      - Queued
      - Launching
      - Submitted
      - Running
      - Failed
      - Succeeded
      - Aborting
      - Aborted
      - Unknown

  SubmissionRequest:
    required:
      - methodConfigurationName
      - methodConfigurationNamespace
      - useCallCache
    type: object
    properties:
      methodConfigurationNamespace:
        type: string
        description: Namespace of the method configuration to execute.
      methodConfigurationName:
        type: string
        description: Name of the method configuration to execute.
      entityType:
        type: string
        description: Type of root entity for expression. Optional if the method
          configuration has no root entity.
      entityName:
        type: string
        description: Name of root entity for expression. Optional if the method
          configuration has no root entity.
      expression:
        type: string
        description: Expression that resolves to one or more entities matching the
          entity type in the method configuration. Optional if the method configuration
          has no root entity.
      useCallCache:
        type: boolean
        description: Whether or not to read from cache for this submission.
      deleteIntermediateOutputFiles:
        type: boolean
        description: Whether or not to delete intermediate output files when the
          workflow completes. See Cromwell docs for more information.
      useReferenceDisks:
        type: boolean
        description: Whether or not to use pre-built disks for common genome references
      workflowFailureMode:
        type: string
        description: What happens after a task fails. Choose from ContinueWhilePossible
          and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell
          docs for more information.
        default: NoNewCalls
        enum:
          - NoNewCalls
          - ContinueWhilePossible
    description: If the referenced method configuration takes no root entity, do
      not define `entityType`, `entityName` and `expression`.

  SubmissionResponse:
    required:
      - submissionId
    type: object
    properties:
      submissionId:
        type: string
        description: Submission Id

  MethodConfiguration:
    required:
      - deleted
      - inputs
      - methodConfigVersion
      - methodRepoMethod
      - name
      - namespace
      - outputs
      - prerequisites
      - rootEntityType
    type: object
    properties:
      namespace:
        type: string
        description: Method configuration namespace
      name:
        type: string
        description: Method configuration name
      rootEntityType:
        type: string
        description: Method configuration root entity type
      inputs:
        type: object
        additionalProperties:
          type: string
        description: Input map - Map[string, string]
      outputs:
        type: object
        additionalProperties:
          type: string
        description: Output map - Map[string, string]
      prerequisites:
        type: object
        additionalProperties:
          type: string
        description: Prerequisites map - Map[string, string]
      methodRepoMethod:
        type: object
        additionalProperties:
          type: string
        description: Method ID - Map
      methodConfigVersion:
        type: integer
        description: Version number, incremented on edit
        format: int32
      deleted:
        type: boolean
        description: Is this config marked as deleted?
        default: false

  ValidatedMethodConfiguration:
    required:
      - extraInputs
      - invalidInputs
      - invalidOutputs
      - methodConfiguration
      - missingInputs
      - validInputs
      - validOutputs
    type: object
    properties:
      validInputs:
        type: array
        items:
          type: string
      invalidInputs:
        type: object
        additionalProperties:
          type: object
      missingInputs:
        type: array
        items:
          type: string
      extraInputs:
        type: array
        items:
          type: string
      validOutputs:
        type: array
        items:
          type: string
      invalidOutputs:
        type: object
        additionalProperties:
          type: object
      methodConfiguration:
        $ref: '#/definitions/MethodConfiguration'
    description: Information about the validity of a method configuration's expressions
      relative to the method itself

  MethodResponse:
    required:
      - managers
      - name
      - namespace
      - snapshotId
    type: object
    properties:
      managers:
        type: array
        description: List of Owners.
        items:
          type: string
      namespace:
        type: string
        description: Namespace which contains AgoraEntity.
        default: YOUR_NAMESPACE
      name:
        type: string
        description: Name of the AgoraEntity.
        default: BWA
      snapshotId:
        type: integer
        description: SnapshotId of AgoraEntity
        format: int32
      snapshotComment:
        type: string
        description: Snapshot comment of AgoraEntity
        default: Improved spline reticulation
      synopsis:
        type: string
        description: Synopsis which contains AgoraEntity.
        default: Quickly aligns short nucleotide sequences.
      documentation:
        type: string
        description: Documentation of the AgoraEntity. MUST BE REQUESTED EXPLICITLY.
        default: |
          BWA is a software package for mapping low-divergent sequences
          against a large reference genome, such as the human genome.
          It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.
      createDate:
        type: string
        description: Timestamp of creation
      url:
        type: string
        description: URL where resource can be accessed.
      payload:
        type: string
        description: Payload of method -- must be in WDL format. MUST BE REQUESTED
          EXPLICITLY.
        default: |
          task wc {File in_file command { cat ${in_file} | wc -l } output { Int count = read_int(stdout()) }}
      entityType:
        type: string
        description: Type of the AgoraEntity -- Task or Workflow.
        default: Task

  MethodQuery:
    type: object
    properties:
      namespace:
        type: string
        description: Namespace which contains AgoraEntity.
        default: YOUR_NAMESPACE
      name:
        type: string
        description: Name of the AgoraEntity.
        default: BWA
      synopsis:
        type: string
        description: Synopsis which contains AgoraEntity.
        default: Quickly aligns short nucleotide sequences.
      snapshotComment:
        type: string
        description: Snapshot comment of AgoraEntity
        default: Improved spline reticulation
      documentation:
        type: string
        description: Documentation of the AgoraEntity.
        default: |
          BWA is a software package for mapping low-divergent sequences
          against a large reference genome, such as the human genome.
          It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.
      payload:
        type: string
        description: Payload of method -- must be in WDL format
        default: |
          task wc {File in_file command { cat ${in_file} | wc -l } output { Int count = read_int(stdout()) }}
      entityType:
        type: string
        description: Type of the AgoraEntity -- Task or Workflow.
        default: Task

  MethodID:
    type: object
    properties:
      methodNamespace:
        type: string
        description: Method namespace
      methodName:
        type: string
        description: Method name
      methodVersion:
        type: integer
        description: Method version
        format: int32
        default: 0

  MethodIO:
    type: object
    properties:
      inputs:
        type: array
        items:
          $ref: '#/definitions/MethodInput'
      outputs:
        type: array
        items:
          $ref: '#/definitions/MethodOutput'

  MethodInput:
    type: object
    properties:
      inputType:
        type: string
      name:
        type: string
      optional:
        type: boolean

  MethodOutput:
    type: object
    properties:
      outputType:
        type: string
      name:
        type: string
