swagger: '2.0'
info:
  version: "0.1.0"
  title: "AllOfUs Workbench API"
  description: "The API for the AllOfUs workbench."
  termsOfService: "http://www.pmi-ops.org/terms_of_service.html"
  contact:
    name: "developer_help@pmi-ops.org"
  license:
    name: "MIT"
host: "api.pmi-ops.org"
securityDefinitions:
  # Establish the fact that *some endpoints* are OAuth protected
  # by defining an `aou_oauth` security mode, which we'll assing
  # to any protected endpoints below.
  aou_oauth:
    type: oauth2
    flow: accessCode
schemes:
  - "https"
produces:
  - "application/json"
 # Establish the fact that all endpoints are protected: this annotation
# ensures that client libraries know to send bearer tokens when calling
security:
  - aou_oauth: []
##########################################################################################
## PATHS
##########################################################################################
paths:
   # User methods ########################################################################

  /api/v1/me:
    get:
      tags:
        - profile
      description: Returns the user's profile information
      operationId: getMe
      responses:
        "200":
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"

  /api/v1/sendBugReport:
    post:
      tags:
        - bugReport
      description: Sends an email to developers about a user reported bug
      operationId: sendBugReport
      parameters:
        - in: body
          name: bugReport
          description: user reported bug
          required: true
          schema:
            $ref: "#/definitions/BugReport"
      responses:
        "200":
          description: Success message
          schema:
            $ref: "#/definitions/BugReport"

  /api/v1/register:
    post:
      tags:
        - profile
      description: Registers a profile for the user in AllOfUs and Firecloud
      operationId: register
      parameters:
        - in: body
          name: registrationRequest
          description: registration request
          schema:
            $ref: "#/definitions/RegistrationRequest"
      responses:
        "200":
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"

  # Billing projects #####################################################################

  /api/v1/billingProjects:
    get:
      tags:
        - Profile
      operationId: getBillingProjects
      summary: List billing projects for a user
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillingProjectMembership'
        404:
          description: User Not Found
        500:
          description: Internal Server Error

  # Workspaces ###########################################################################

  /api/v1/workspaces:
    get:
      tags:
        - workspaces
      description: Returns all workspaces that a user has access to
      operationId: getWorkspaces
      responses:
        "200":
          description: A list of workspace definitions.
          schema:
            $ref: "#/definitions/WorkspaceListResponse"
    post:
      tags:
        - workspaces
      description: Creates a workspace
      operationId: createWorkspace
      parameters:
        - in: body
          name: workspace
          description: workspace definition
          schema:
            $ref: "#/definitons/Workspace"
      responses:
        "200":
          description: The workspace that was created.
          schema:
            $ref: "#/definitions/Workspace"
  /api/v1/workspaces/{workspaceNamespace}/{workspaceId}:
    get:
      tags:
        - workspaces
      description: Returns the workspace definition with the specified ID and namespace
      operationId: getWorkspace
      parameters:
        - in: path
          name: workspaceNamespace
          type: string
          required: true
          description: namespace of the workspace containing the cohort definition
        - in: path
          name: workspaceId
          type: string
          required: true
          description: ID of the workspace containing the cohort definition
      responses:
        "200":
          description: A workspace definition
          schema:
            $ref: "#/definitions/Workspace"
    patch:
      tags:
        - workspaces
      description: >
        Modifies the workspace definition with the specified ID and namespace;
        fields that are omitted will not be modified
      operationId: updateWorkspace
      parameters:
        - in: path
          name: workspaceNamespace
          type: string
          required: true
          description: namespace of the workspace containing the cohort definition
        - in: path
          name: workspaceId
          type: string
          required: true
          description: ID of the workspace containing the cohort definition
        - in: body
          name: workspace
          description: workspace definition
          schema:
            $ref: "#/definitions/Workspace"
      responses:
        "200":
          description: The updated workspace definition
          schema:
            $ref: "#/definitions/Workspace"
    delete:
      tags:
        - workspaces
      description: Deletes the workspace definition with the specified ID and namespace
      operationId: deleteWorkspace
      parameters:
        - in: path
          name: workspaceNamespace
          type: string
          required: true
          description: namespace of the workspace containing the cohort definition
        - in: path
          name: workspaceId
          type: string
          required: true
          description: ID of the workspace containing the cohort definition


  # Cohorts ##############################################################################

  /api/v1/workspaces/{workspaceNamespace}/{workspaceId}/cohorts:
    get:
      tags:
        - cohorts
      description: Returns all cohort definitions in a workspace
      operationId: "getCohortsInWorkspace"
      parameters:
       - in: path
         name: workspaceNamespace
         type: string
         required: true
         description: namespace containing the workspace to retrieve cohort definitions from
       - in: path
         name: workspaceId
         type: string
         required: true
         description: ID of the workspace to retrieve cohort definitions from.
      responses:
        "200":
          description: A list of cohort definitions.
          schema:
            $ref: "#/definitions/CohortListResponse"
    post:
      tags:
        - cohorts
      description: Creates a cohort definition in a workspace.
      operationId: "createCohort"
      parameters:
        - in: path
          name: workspaceNamespace
          type: string
          required: true
          description: namespace containing the workspace to create a cohort definition in
        - in: path
          name: workspaceId
          type: string
          required: true
          description: ID of the workspace to create a cohort definition in
        - in: body
          name: cohort
          description: cohort definition
          schema:
            $ref: "#/definitions/Cohort"
      responses:
        "200":
          description: The cohort definition that was created.
          schema:
            $ref: "#/definitions/Cohort"

  /api/v1/workspaces/{workspaceNamespace}/{workspaceId}/cohorts/{cohortId}:
    get:
      tags:
        - cohorts
      description: Returns the cohort definition with the specified ID
      operationId: "getCohort"
      parameters:
        - in: path
          name: workspaceNamespace
          type: string
          required: true
          description: namespace of the workspace containing the cohort definition
        - in: path
          name: workspaceId
          type: string
          required: true
          description: ID of the workspace containing the cohort definition
        - in: path
          name: cohortId
          type: string
          required: true
          description: ID of the workspace containing the cohort definition
      responses:
        "200":
          description: A cohort definition
          schema:
            $ref: "#/definitions/Cohort"
    patch:
      tags:
        - cohorts
      description: >
        Modifies the cohort definition with the specified ID; fields that are omitted
        will not be modified
      operationId: "updateCohort"
      parameters:
        - in: path
          name: workspaceNamespace
          type: string
          required: true
          description: namespace of the workspace containing the cohort definition
        - in: path
          name: workspaceId
          type: string
          required: true
          description: ID of the workspace containing the cohort definition
        - in: path
          name: cohortId
          type: string
          required: true
          description: ID of the workspace containing the cohort definition
        - in: body
          name: cohort
          description: cohort definition
          schema:
            $ref: "#/definitions/Cohort"
      responses:
        "200":
          description: The updated cohort definition
          schema:
            $ref: "#/definitions/Cohort"
    delete:
      tags:
        - cohorts
      description: Deletes the cohort definition with the specified ID
      operationId: "deleteCohort"
      parameters:
        - in: path
          name: workspaceNamespace
          type: string
          required: true
          description: namespace of the workspace containing the cohort definition
        - in: path
          name: workspaceId
          type: string
          required: true
          description: ID of the workspace containing the cohort definition
        - in: path
          name: cohortId
          type: string
          required: true
          description: ID of the workspace containing the cohort definition

  # Cohort Builder #######################################################################
  /api/v1/cohort-builder/criteria/{type}/{parentId}:
    get:
      tags:
        - cohortBuilder
      description: Returns builder criteria tree with the specified criteria type and parentId
      operationId: "getCriteriaByTypeAndParentId"
      parameters:
              - in: path
                name: type
                type: string
                required: true
                description: the specific type of criteria to get
              - in: path
                name: parentId
                type: integer
                format: int64
                required: true
                description: fetch children of parentId
      responses:
              "200":
                description: A collection of criteria
                schema:
                  $ref: "#/definitions/CriteriaListResponse"

  /api/v1/cohort-builder/search:
    post:
      tags:
        - cohortBuilder
      description: Searches for subjects based on criteria, criteria specific parameters, and modifiers.
      operationId: "searchSubjects"
      parameters:
        - in: body
          name: request
          description: object of parameters by which to perform the search
          schema:
            $ref: "#/definitions/SearchRequest"
          required: true
      responses:
        "200":
          description: A collection of subjects
          schema:
            $ref: "#/definitions/SubjectListResponse"

##########################################################################################
## DEFINITIONS
##########################################################################################
definitions:
  # Mirrors BillingProjectMembership from fireCloud.yaml
  BillingProjectMembership:
    description: ''
    required:
      - projectName
      - role
      - status
    type: object
    properties:
      projectName:
        type: string
        description: the name of the project
      role:
        type: string
        description: the role of the current user in the project
      status:
        type: string
        enum: ["Creating", "Ready", "Error"]
      message:
        type: string
        description: informational message about the project

  DataAccessLevel:
    type: string
    description: levels of access to data in the curated data repository
    enum: &DATA_ACCESS_LEVEL [unregistered, registered, protected]

  WorkspaceListResponse:
    type: object
    required:
     - items
    properties:
      items:
        type: "array"
        items:
           $ref: "#/definitions/Workspace"

  Workspace:
    type: object
    required:
     - name
    properties:
      id:
        type: string
      name:
        type: string
      namespace:
        type: string
      description:
        type: string
      cdrVersionId:
        type: string
      creator:
        type: string
      dataAccessLevel:
        type: string
        enum: *DATA_ACCESS_LEVEL
      creationTime:
        type: string
        format: date-time
      lastModifiedTime:
        type: string
        format: date-time

  CohortListResponse:
    type: object
    required:
     - items
    properties:
      items:
        type: "array"
        items:
           $ref: "#/definitions/Cohort"

  Cohort:
    type: object
    required:
      - name
      - criteria
      - type
    properties:
      id:
        type: string
      name:
        type: string
      criteria:
        description: >
          Internal representation of the cohort definition. Clients should not depend directly
          on this, but instead call client functions to issue a SQL query for the cohort.
        type: string
      type:
        type: string
      description:
        type: string
      creator:
        type: string
      creationTime:
        type: string
        format: date-time
      lastModifiedTime:
        type: string
        format: date-time

  BugReport:
    type: object
    required:
      - shortDescription
      - reproSteps
      - contactEmail
    properties:
      shortDescription:
        description: A short description of the bug
        type: string
      reproSteps:
        description: Steps to reproduce the bug
        type: string
      contactEmail:
        description: The email with which to contact the bug reporter.
        type: string

  Profile:
    type: object
    required:
      - email
      - enabledInFireCloud
      - dataAccessLevel
    properties:
      email:
        description: Google email address that the user signs in with
        type: string
      contactEmail:
        description: email address that can be used to contact the user
        type: string
      enabledInFireCloud:
        description: true if the user is enabled in FireCloud, false if they are not
        type: boolean
      freeTierBillingProjectName:
        description: name of the AllOfUs free tier billing project created for this user
        type: string
      dataAccessLevel:
        description: what level of data access the user has
        type: string
        enum: *DATA_ACCESS_LEVEL
      fullName:
        description: the user's full name
        type: string
      givenName:
        description: the user's given name (e.g. Alice)
        type: string
      familyName:
        description: the user's family  name (e.g. Jones)
        type: string
      phoneNumber:
        description: the user's phone number
        type: string

  RegistrationRequest:
    type: object
    required:
      - contactEmail
      - fullName
      - givenName
      - familyName
    properties:
      contactEmail:
        description: email address that can be used to contact the user
        type: string
      fullName:
        description: the user's full name
        type: string
      givenName:
        description: the user's given name (e.g. Alice)
        type: string
      familyName:
        description: the user's family  name (e.g. Jones)
        type: string
      phoneNumber:
        description: the user's phone number
        type: string

  CriteriaListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Criteria"

  Criteria:
    type: object
    required:
      - id
      - type
      - code
      - name
      - group
      - selectable
    properties:
      id:
        description: id of the criteria
        type: integer
        format: int64
      type:
        description: type of criteria
        type: string
      code:
        description: code that identifies this criteria
        type: string
      name:
        description: description of criteria
        type: string
      count:
        description: est. count in the cdr
        type: integer
        format: int64
      group:
        description: specifies if child or parent
        type: boolean
      selectable:
        description: specifies if user can search with
        type: boolean
      domainId:
        description: clue to determine which tables to search
        type: string

  SearchRequest:
    type: object
    required:
      - type
      - searchParameters
      - modifiers
    properties:
      type:
        description: type of criteria
        type: string
      searchParameters:
        description: criteria by category code
        type: "array"
        items:
          $ref: "#/definitions/SearchParameter"
      modifiers:
        description: criteria by operation or predicate
        type: "array"
        items:
          $ref: "#/definitions/Modifier"
    example:
      {
        type: "ICD9",
        searchParameters: [
          { code: "E9293", domainId: "Condition" },
          { code: "E979-E979.9", domainId: null }
        ],
        modifiers: [
          { name: "age_at_event", operator: "GTE >=", operands: [ "Arg1", "Arg2" ] }
        ]
      }

  SearchParameter:
    type: object
    required:
      - code
      - domainId
    properties:
      code:
        description: The Code of the Criteria within its Category Tree
        type: string
      domainId:
        description: The Domain ID of the Criteria if applicable
        type: string
    examples:
      leafExample:
        code: "E9293"
        domainId: "Condition"
      parentExample:
        code: "E979-E979.9"
        domainId: null

  Modifier:
    type: object
    required:
      - name
      - operator
      - values
    properties:
      name:
        type: string
      operator:
        type: string
      operands:
        type: "array"
        items:
          type: string
    example:
      name: "age_at_event"
      operator: "GTE >="
      operands: [ "Arg1", "Arg2" ]

  SubjectListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Subject"
    example:
      [ 
        { val: "12345,1,5" },
        { val: "67890,2,1" }
      ]

  Subject:
    type: object
    required:
      - val
    properties:
      val:
        description: A String of Subject ID, Gender Code, Ethnicity Code
        type: string
    example:
      val: "12345,1,5"
