# This file is for endpoints we do NOT intend to generate client libraries for
# and advertise to notebook developers. Endpoints we DO want notebook developers to use should
# go in client_api.yaml.

# This file references parameters, paths, and definitions specified in
# client_api.yaml; the two files get merged together into a merged.yaml file at build time.

# If validation fails, gradle:generateApi fails claiming this file does not exist.
# For separate validation (with some false positives), do:
#     ./project.rb validate-swagger
swagger: '2.0'
info:
  version: "0.1.0"
  title: "AllOfUs Workbench API"
  description: "The API for the AllOfUs workbench."
  termsOfService: "http://www.pmi-ops.org/terms_of_service.html"
  contact:
    name: "developer_help@pmi-ops.org"
  license:
    name: "BSD"
host: "api.pmi-ops.org"
securityDefinitions:
  # Establish the fact that *some endpoints* are OAuth protected
  # by defining an `aou_oauth` security mode, which we'll assing
  # to any protected endpoints below.
  aou_oauth:
    # TODO: Vet/fix this token and/or authorization URL to work in practice.
    # These are currently included simply to satisfy the Swagger specification,
    # as this is not directly used to dictate oauth details (just used to
    # annotate which methods require oauth).
    authorizationUrl: ""
    tokenUrl: ""
    type: oauth2
    flow: accessCode
schemes:
  - "https"
produces:
  - "application/json"
# Establish the fact that all endpoints are protected: this annotation
# ensures that client libraries know to send bearer tokens when calling
security:
  - aou_oauth: []

# Throughout, we use integer/int64 in preference to string/date-time because Swagger's
# date formatting is inconsistent between server and client. Time values are stored as
# milliseconds since the UNIX epoch.

##########################################################################################
## PATHS
##########################################################################################

## Common Path Parameters
parameters:
  userId:
    in: path
    name: userId
    type: integer
    format: int64
    required: true
  conceptSetId:
    in: path
    name: conceptSetId
    type: integer
    format: int64
    required: true
    description: Concept set ID
  dataSetId:
    in: path
    name: dataSetId
    type: integer
    format: int64
    required: true
    description: Data set ID

paths:
  /v1/status:
    get:
      tags:
        - status
      description: Returns the status of the various services and integrations
      operationId: getStatus
      security: []
      responses:
        200:
          description: A map of system name to status.
          schema:
            $ref: "#/definitions/StatusResponse"


  /v1/config:
    get:
      tags:
        - config
      description: Returns some server configuration data.
      operationId: getConfig
      security: []
      responses:
        200:
          description: Configuration data
          schema:
            $ref: "#/definitions/ConfigResponse"

  /v1/featured-workspace-config:
    get:
      tags:
        - featured-workspaces-config
      description: Returns the featured workspaces config
      operationId: getFeaturedWorkspacesConfig
      security: []
      responses:
        200:
          description: List of featured workspaces
          schema:
            $ref: "#/definitions/FeaturedWorkspacesConfigResponse"

  /v1/status-alert:
    get:
      tags:
        - status-alert
      description: Returns status alert information if any exists.
      operationId: getStatusAlert
      responses:
        200:
          description: >
            A status alert information object.
          schema:
            $ref: "#/definitions/StatusAlert"
    post:
      tags:
        - status-alert
      description: Pushes new status alert information to all users
      operationId: postStatusAlert
      parameters:
        - in: body
          name: statusAlert
          description: the new status alert to use
          schema:
            $ref: "#/definitions/StatusAlert"
      responses:
        200:
          description: >
            A status alert information object.
          schema:
            $ref: "#/definitions/StatusAlert"

    # User methods ########################################################################

  /v1/profile:
    get:
      tags:
        - profile
      description: Returns the user's profile information
      operationId: getMe
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"
    patch:
      tags:
        - profile
      consumes:
        - application/json
      description: Updates a users profile
      operationId: updateProfile
      parameters:
        - in: body
          name: updatedProfile
          description: the new profile to use
          schema:
            $ref: "#/definitions/Profile"
      responses:
        204:
          description: Request received.
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - profile
      description: Deletes the user's profile and gsuite account, does not clean up in firecloud.
      operationId: deleteProfile
      responses:
        204:
          description: Request Received.


  # TODO(dmohs): If the username is not present in the query string, this responds with 500 Server
  # Error. It should respond with 400 Bad Request.
  /v1/is-username-taken:
    get:
      tags:
        - profile
      description: Checks to see if the given username is not available.
      operationId: isUsernameTaken
      security: []
      parameters:
        - in: query
          name: username
          type: string
          required: true
      responses:
        200:
          description: The answer.
          schema:
            $ref: "#/definitions/UsernameTakenResponse"

  /v1/update-contact-email:
    post:
      tags:
        - profile
      consumes:
        - application/json
      description: Only for accounts that have not logged in yet, update contact email.
      operationId: updateContactEmail
      security: []
      parameters:
        - in: body
          name: updateContactEmailRequest
          schema:
            $ref: "#/definitions/UpdateContactEmailRequest"
      responses:
        200:
          description: Contact Email Updated
        400:
          description: Invalid contact email address
        403:
          description: Unable to process this request
        500:
          description: Internal Server Error

  /v1/resend-welcome-email:
    post:
      tags:
        - profile
      consumes:
        - application/json
      description: Resend welcome email
      operationId: resendWelcomeEmail
      security: []
      parameters:
        - in: body
          name: resendWelcomeEmail
          schema:
            $ref: "#/definitions/ResendWelcomeEmailRequest"
      responses:
        200:
          description: Welcome Email sent.
        500:
          description: Internal Server Error

  /v1/invitation-key-verification:
    post:
      tags:
        - profile
      consumes:
        - application/json
      description: Verifies invitation key.
      operationId: invitationKeyVerification
      security: []
      parameters:
        - in: body
          name: invitationVerificationRequest
          schema:
            $ref: "#/definitions/InvitationVerificationRequest"
      responses:
        200:
          description: Invitation Key verified.
        400:
          description: Error occurred while verifying Invitation Key.
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/google-account:
    post:
      tags:
        - profile
      consumes:
        - application/json
      description: Creates an account in the researchallofus.org domain.
      operationId: createAccount
      security: []
      parameters:
        - in: body
          name: createAccountRequest
          schema:
            $ref: "#/definitions/CreateAccountRequest"
      responses:
        200:
          description: Account created successfully.
          schema:
            $ref: "#/definitions/Profile"
        400:
          description: Error occurred while creating account.
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/beta-access:
    post:
      tags:
        - profile
      description: Request betaAccess.
      operationId: requestBetaAccess
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"



  /v1/update-nih-token:
    post:
      tags:
        - profile
      consumes:
        - application/json
      description: Updates a users NIH token
      operationId: updateNihToken
      parameters:
        - in: body
          name: token
          description: the token retrieved from NIH
          schema:
            $ref: "#/definitions/NihToken"
      responses:
        200:
          description: The user's updated profile.
          schema:
            $ref: "#/definitions/Profile"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/page-visits:
    post:
      tags:
        - profile
      consumes:
        - application/json
      description: Updates a users page visits
      operationId: updatePageVisits
      parameters:
        - in: body
          name: pageVisit
          description: the users pageVisits
          schema:
            $ref: "#/definitions/PageVisit"
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/account/submit-data-use-agreement:
    post:
      tags:
        - profile
      description: Submits consent to the data use agreement for researchers.
      operationId: submitDataUseAgreement
      parameters:
        - in: query
          name: dataUseAgreementSignedVersion
          description: Version \# of the Data Use Agreement that was signed.
          type: integer
          required: true
        - in: query
          name: initials
          description: Initials of the user on the form.
          type: string
          required: true
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"

  /v1/account/sync-training-status:
    post:
      tags:
        - profile
      summary: Sync compliance training status
      description: Retrieves moodleId(either from DB or call from Moodle API)
        and gets Training status on the basis of that
      operationId: syncComplianceTrainingStatus
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"
        404:
          description: User not found
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/account/sync-era-commons-status:
    post:
      tags:
        - profile
      summary: Sync eRA Commons status
      description: Retrieves and stores the current user's NIH / eRA Commons
        linkage status, fetched via the FireCloud API.
      operationId: syncEraCommonsStatus
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"
        404:
          description: User not found
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/account/sync-two-factor-auth-status:
    post:
      tags:
        - profile
      summary: Sync two factor auth status
      description: Syncs a user's 2FA status from google
      operationId: syncTwoFactorAuthStatus
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"
        404:
          description: User not found
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  # TODO: add demographic survey response data
  /v1/account/submit-demographic-survey:
    post:
      tags:
        - profile
      description: Submits demographic survey responses.
      operationId: submitDemographicsSurvey
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"

  /v1/auth-domain/{groupName}:
    post:
      tags:
        - authDomain
      description: This endpoint will create the registered auth domain.
      operationId: "createAuthDomain"
      parameters:
        - in: path
          name: groupName
          description: groupName
          required: true
          type: string
      responses:
        200:
          description: Successfully created group
          schema:
            $ref: "#/definitions/EmptyResponse"

  /v1/auth-domain/users:
    post:
      tags:
        - authDomain
      consumes:
        - application/json
      responses:
        204:
          description: Successfully Updated User In Group
        403:
          description: You must be an admin of this group in order to enable/disable members
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - in: body
          name: request
          description: Request containing user email to update and a disabled status to update the user to.
          schema:
            $ref: "#/definitions/UpdateUserDisabledRequest"
      summary: enable/disable a user to an auth domain if you have ID verification authority
      operationId: updateUserDisabledStatus

  /v1/user/{term}:
    get:
      tags:
        - user
      description: Returns user information matching search terms
      operationId: user
      responses:
        200:
          description: The user information matching supplied search terms
          schema:
            $ref: "#/definitions/UserResponse"
      parameters:
        - in: path
          name: term
          description: String to find in user's name or email address. Search is a case-insensitive substring match.
          required: true
          type: string
        - in: query
          name: pageToken
          description: >
            Pagination token retrieved from a previous call to user; used for retrieving additional pages of results.
          type: string
          required: false
        - in: query
          name: pageSize
          description: >
            Maximum number of results to return in a response. Defaults to 10.
          type: integer
          required: false
        - in: query
          name: sortOrder
          description: Sort order, either 'asc' or 'desc'. Defaults to 'asc' on the user's email.
          type: string
          required: false

  /v1/user/billingAccounts:
    get:
      tags:
        - user
      description: Returns a list of billing accounts the caller can set a workspace's billing account to
      operationId: listBillingAccounts
      responses:
        200:
          description: List of billing accounts
          schema:
            $ref: "#/definitions/WorkbenchListBillingAccountsResponse"

  # Notebook clusters ####################################################################

  /v1/admin/security/clusters/{billingProjectId}/delete-clusters:
    post:
      summary: Delete specified (or all if no specified list) clusters in a project
      description: >
        An admin gated endpoint that deletes given clusters in a given billing project.
      operationId: deleteClustersInProject
      tags:
        - cluster
      parameters:
        - in: path
          name: billingProjectId
          description: The unique identifier of the Google Billing Project containing the clusters
          required: true
          type: string
        - in: body
          name: clustersToDelete
          description: A list of names of clusters to delete. To delete all clusters, use an empty object, without
            providing a list property at all (e.g., {}) An empty list will delete no clusters.
          required: true
          schema:
            $ref: '#/definitions/ListClusterDeleteRequest'
      responses:
        200:
          description: Clusters deleted
          schema:
            type: array
            items:
              $ref: '#/definitions/ListClusterResponse'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/clusters/{billingProjectId}/{workspaceFirecloudName}:
    get:
      summary: List available notebook clusters
      description: >
        Returns the clusters available to the current user in the given billing project.
        Currently there is a single default cluster supported per billing project
        and this cluster should always either exist or be in the process of being
        initialized. In a future where researchers have more control over cluster
        creation, this endpoint would be extended to return all clusters.
      operationId: listClusters
      tags:
        - cluster
      parameters:
        - in: path
          name: billingProjectId
          description: The unique identifier of the Google Billing Project containing the clusters
          required: true
          type: string
        - in: path
          name: workspaceFirecloudName
          description: The firecloudName of the workspace whose notebook we're looking at
          required: true
          type: string
      responses:
        200:
          description: The users cluster
          schema:
            $ref: '#/definitions/DefaultClusterResponse'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/clusters/{clusterNamespace}/{clusterName}:
    delete:
      summary: Delete a cluster by name.
      operationId: deleteCluster
      tags:
        - cluster
      parameters:
        - in: path
          name: clusterNamespace
          description: clusterNamespace
          required: true
          type: string
        - in: path
          name: clusterName
          description: clusterName
          required: true
          type: string
      responses:
        200:
          description: Deletion success
          schema:
            $ref: '#/definitions/EmptyResponse'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/clusters/{clusterNamespace}/{clusterName}/localize:
    post:
      summary: >
        Localize files from a workspace to notebook cluster. As a side-effect,
        JSON workspace environment files will also be localized to the cluster.
      description: Localize notebook files to the corresponding notebook cluster.
      operationId: localize
      tags:
        - cluster
      consumes:
        - application/json
      parameters:
        - in: path
          name: clusterNamespace
          description: clusterNamespace
          required: true
          type: string
        - in: path
          name: clusterName
          description: clusterName
          required: true
          type: string
        - in: body
          name: body
          description: Localization request.
          schema:
            $ref: '#/definitions/ClusterLocalizeRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ClusterLocalizeResponse'
        404:
          description: Cluster or Workspace not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  # Billing projects #####################################################################

  /v1/billingProjects:
    get:
      tags:
        - profile
      operationId: getBillingProjects
      summary: List billing projects for a user
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillingProjectMembership'
        404:
          description: User Not Found
        500:
          description: Internal Server Error

  # Workspaces ###########################################################################

  /v1/workspaces:
    get:
      tags:
        - workspaces
      description: Returns all workspaces that a user has access to
      operationId: getWorkspaces
      responses:
        200:
          description: A list of workspace definitions.
          schema:
            $ref: "#/definitions/WorkspaceResponseListResponse"
    post:
      tags:
        - workspaces
      consumes:
        - application/json
      description: Creates a workspace
      operationId: createWorkspace
      parameters:
        - in: body
          name: workspace
          description: workspace definition
          schema:
            $ref: "#/definitions/Workspace"
      responses:
        200:
          description: The workspace that was created.
          schema:
            $ref: "#/definitions/Workspace"

  /v1/workspaces/published:
    get:
      tags:
        - workspaces
      description: Returns a list of published workspaces
      operationId: getPublishedWorkspaces
      responses:
        200:
          description: A list of workspace definitions.
          schema:
            $ref: "#/definitions/WorkspaceResponseListResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    get:
      tags:
        - workspaces
      description: Returns the workspace definition with the specified ID and namespace
      operationId: getWorkspace
      responses:
        200:
          description: A workspace response containing workspace and access level
          schema:
            $ref: "#/definitions/WorkspaceResponse"
    patch:
      tags:
        - workspaces
      consumes:
        - application/json
      description: >
        Modifies the workspace definition with the specified ID and namespace;
        fields that are omitted will not be modified
      operationId: updateWorkspace
      parameters:
        - in: body
          name: workspace
          description: workspace definition
          schema:
            $ref: "#/definitions/UpdateWorkspaceRequest"
      responses:
        200:
          description: The updated workspace definition
          schema:
            $ref: "#/definitions/Workspace"
    delete:
      tags:
        - workspaces
      description: Deletes the workspace definition with the specified ID and namespace
      operationId: deleteWorkspace
      responses:
        202:
          description: Workspace deletion request accepted
          schema:
            $ref: '#/definitions/EmptyResponse'

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/share:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - workspaces
      consumes:
        - application/json
      description: >
        Shares a workspace with the given users and permissions. Note that the entire ACL must
        be provided to this method (including all existing users and roles), not just the additional
        roles desired. Clients should first fetch existing ACLs via the getFirecloudWorkspaceUserRoles
        method, make any changes desired, then pass the final list to this method.

      operationId: shareWorkspace
      parameters:
        - in: body
          name: body
          description: users to share the workspace with
          schema:
            $ref: "#/definitions/ShareWorkspaceRequest"
      responses:
        200:
          description: Successful share response
          schema:
            $ref: "#/definitions/WorkspaceUserRolesResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/duplicate:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - workspaces
      consumes:
        - application/json
      description: >
        Duplicate an existing workspace, with given modifications to workspace metadata. Caller will own
        the newly duplicated workspace, and must have read access to the source workspace. In
        addition to workspace metadata, the following will also be duplicated:
          - the associated Firecloud workspace
          - cohorts, along with reviews and annotations
          - notebooks located in the default notebook directory for this workspace
      operationId: cloneWorkspace
      parameters:
        - in: body
          name: body
          schema:
            $ref: "#/definitions/CloneWorkspaceRequest"
      responses:
        200:
          description: Successful duplicate response
          schema:
            $ref: "#/definitions/CloneWorkspaceResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/userRoles:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    get:
      tags:
        - workspaces
      description: Returns the user roles for all collaborators on a workspace
      operationId: getFirecloudWorkspaceUserRoles
      responses:
        200:
          description: A list of workspace collaborators
          schema:
            $ref: '#/definitions/WorkspaceUserRolesResponse'

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/publish:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - workspaces
      description: >
        Makes a workspace public to all AoU registered users.
        Requires FEATURED_WORKSPACE_ADMIN authority.
      operationId: publishWorkspace
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/EmptyResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/unpublish:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - workspaces
      description: >
        Makes a workspace public to all AoU registered users.
        Requires FEATURED_WORKSPACE_ADMIN authority.
      operationId: unpublishWorkspace
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/EmptyResponse"

  /v1/admin/workspaces/review:
    get:
      tags:
        - workspaces
      description: >
        Returns workspaces that need research purpose review. Requires
        REVIEW_RESEARCH_PURPOSE authority.
      operationId: getWorkspacesForReview
      responses:
        200:
          description: A list of workspaces
          schema:
            $ref: "#/definitions/WorkspaceListResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/notebook-list:
    get:
      summary: Get details of Python files from google Bucket directory notebook
      description: >
        Returns list of name and path of python files from google bucket,
        directory notebook.
      operationId: getNoteBookList
      tags:
        - workspaces
      parameters:
        - in: path
          name: workspaceNamespace
          description: workspaceNamespace
          required: true
          type: string
        - in: path
          name: workspaceId
          description: workspaceId
          required: true
          type: string
      responses:
        200:
          description: List of files
          schema:
            type: array
            items:
              $ref: '#/definitions/FileDetail'
        404:
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/admin/unsafe-self-bypass-access-requirement:
    post:
      tags:
        - profile
      consumes:
        - application/json
      description: >
        Updates the given user to bypass the request access requirement
      parameters:
        - in: body
          name: bypassed
          schema:
            $ref: '#/definitions/AccessBypassRequest'
          description: >
            Whether the requirement should be bypassed or not. Defaults to
            true, so an empty body  will cause the requirement to be bypassed.
      operationId: unsafeSelfBypassAccessRequirement
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/EmptyResponse"
        403:
          description: Self bypass is disallowed in this environment
          schema:
            $ref: "#/definitions/ErrorResponse"
        400:
          description: No module exists with name submitted
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/admin/users/{userId}/bypass-access-requirement:
    post:
      tags:
        - profile
      consumes:
        - application/json
      description: >
        Updates the given user to bypass the request access requirement,
        e.g. "eraCommons", or "twoFactorAuth"
      parameters:
        - $ref: '#/parameters/userId'
        - in: body
          name: bypassed
          schema:
            $ref: '#/definitions/AccessBypassRequest'
          description: >
            Whether the requirement should be bypassed or not. Defaults to
            true, so an empty body  will cause the requirement to be bypassed.
      operationId: bypassAccessRequirement
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/EmptyResponse"
        403:
          description: User doesn't have the ACCESS_CONTROL_ADMIN authority
          schema:
            $ref: "#/definitions/ErrorResponse"
        400:
          description: No module exists with name submitted
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/admin/users/{userId}:
    get:
      tags:
        - profile
      description: >
        Returns a user's profile for review.  Requires ACCESS_CONTROL_ADMIN authority.
      parameters:
        - $ref: '#/parameters/userId'
      operationId: getUser
      responses:
        200:
          description: A user's profile
          schema:
            $ref: "#/definitions/Profile"
        403:
          description: User doesn't have the ACCESS_CONTROL_ADMIN authority
          schema:
            $ref: "#/definitions/ErrorResponse"


  /v1/admin/users/list:
    get:
      tags:
        - profile
      description: >
        Returns a list of profiles for users to be reviewed. Requires
        ACCESS_CONTROL_ADMIN authority.
      operationId: getAllUsers
      responses:
        200:
          description: A list of users
          schema:
            $ref: "#/definitions/UserListResponse"
        403:
          description: User doesn't have the ACCESS_CONTROL_ADMIN authority
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/admin/workspaces/{workspaceNamespace}/{workspaceId}/review:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - workspaces
      consumes:
        - application/json
      description: Sets a research purpose review result.
      operationId: reviewWorkspace
      parameters:
        - in: body
          name: review
          description: result of the research purpose review
          schema:
            $ref: "#/definitions/ResearchPurposeReviewRequest"
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/EmptyResponse"

  /v1/admin/clusters/updateConfig:
    post:
      summary: Sets default cluster creation request parameters for a user.
      description: >
        Clusters are created with a default machine configuration. Setting this
        override changes that configuration for subsequent cluster creations.
        This change only takes effect after a new cluster creation, e.g. due to
        standard cluster expiration (~2w) or via manual reset. Requires
        DEVELOPER authority.
      operationId: updateClusterConfig
      tags:
        - cluster
      parameters:
        - in: body
          name: body
          description: Cluster config update request.
          schema:
            $ref: "#/definitions/UpdateClusterConfigRequest"
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/EmptyResponse"

  /v1/admin/sumo/egressEvent:
    post:
      tags:
        - sumoLogic
      description: >
        Registers an egress event detected by SumoLogic with the Workbench. Forwards the event
        to Stackdriver for recording and potential alerting.
      operationId: logEgressEvent
      security: []
      parameters:
        - in: body
          name: request
          description: Egress event request
          schema:
            $ref: "#/definitions/EgressEventRequest"
        - in: header
          name: X-API-KEY
          description: >
            Semi-secret API key sent by SumoLogic. This will be checked against the set of valid
            API keys stored in the per-environment credentials bucket.
          required: true
          type: string
      responses:
        204:
          description: The egress event was successfully handled.

  # Cron ############################################################################

  # Note: all requests tagged as "cron" must have the header X-Appengine-Cron:
  # true, which app engine itself only sets when invoking as a cronjob.
  # See https://cloud.google.com/appengine/docs/standard/java/config/cron#securing_urls_for_cron
  # and o.p.w.interceptors.CronInterceptor which implements the header check.

  /v1/cron/auditBigQuery:
    get:
      security: []
      tags:
        - offlineAudit
        - cron
      description: >
        Endpoint meant to be called offline to trigger BigQuery auditing; may be
        slow to execute. Only executable via App Engine cronjob.
      operationId: auditBigQuery
      responses:
        200:
          description: Audit was successful.
          schema:
            $ref: "#/definitions/AuditBigQueryResponse"

  /v1/cron/checkClusters:
    get:
      security: []
      tags:
        - offlineCluster
        - cron
      description: >
        Endpoint meant to be called offline to trigger cluster checks and
        cleanup. Enforces upgrades for older cluster deployments. May be slow to
        execute. Only executable via App Engine cronjob.
      operationId: checkClusters
      responses:
        200:
          description: Clusters were checked and handled successfully.
          schema:
            $ref: "#/definitions/CheckClustersResponse"

  /v1/cron/bulkSyncComplianceTrainingStatus:
    get:
      security: []
      tags:
        - offlineUser
        - cron
      description: sync moodle badge/training status for all users.
      operationId: bulkSyncComplianceTrainingStatus
      responses:
        204:
          description: The user table is updated with training status.
        404:
          description: User not found while retrieving  badge.
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/cron/bulkSyncEraCommonsStatus:
    get:
      security: []
      tags:
        - offlineUser
        - cron
      description: sync eRA Commons linkage status for all users.
      operationId: bulkSyncEraCommonsStatus
      responses:
        204:
          description: All users' eRA Commons statuses were updated.
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/cron/bulkSyncTwoFactorAuthStatus:
    get:
      security: []
      tags:
        - offlineUser
        - cron
      description: sync 2FA status for all users
      operationId: bulkSyncTwoFactorAuthStatus
      responses:
        204:
          description: All users' 2FA statuses were updated.
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/cron/bulkAuditProjectAccess:
    get:
      security: []
      tags:
        - offlineUser
        - cron
      description: Audits project access for all users
      operationId: bulkAuditProjectAccess
      responses:
        204:
          description: All users' project access were audited.
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/cron/exportToRdr:
    get:
      security: []
      tags:
        - offlineRdrExport
        - cron
      description: Send workbench data to RDR
      operationId: exportData
      responses:
        204:
          description: All modified/created workspaces and users were exported
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  # Billing ##############################################################################

  /v1/cron/bufferBillingProjects:
    get:
      security: []
      tags:
        - offlineBilling
        - cron
      description: If the AoU Billing Project buffer is not full, refill with one or more billing projects.
      operationId: bufferBillingProjects
      responses:
        204:
          description: No Error
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/cron/syncBillingProjectStatus:
    get:
      security: []
      tags:
        - offlineBilling
        - cron
      description: Fetch a BillingProjectBufferEntry that is in the CREATING state and check its status on Firecloud
      operationId: syncBillingProjectStatus
      responses:
        204:
          description: No Error
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/cron/cleanBillingBuffer:
    get:
      security: []
      tags:
        - offlineBilling
        - cron
      description: Find BillingProjectBufferEntries that have failed during the creation or assignment step and set their statuses to ERROR
      operationId: cleanBillingBuffer
      responses:
        204:
          description: No Error
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/cron/checkFreeTierBillingUsage:
    get:
      security: []
      tags:
        - offlineBilling
        - cron
      description: Find and alert users that have exceeded their free tier billing usage
      operationId: checkFreeTierBillingUsage
      responses:
        204:
          description: No Error
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/cron/billingProjectGarbageCollection:
    get:
      security: []
      tags:
        - offlineBilling
        - cron
      description: Trigger a bulk transfer of ownership of billing projects associated with deleted workspaces
      operationId: billingProjectGarbageCollection
      responses:
        204:
          description: Billing Project Garbage Collection was successful.
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/monitoring/billingProjectBufferStatus:
    get:
      tags:
        - monitoring
      description: Return statistics about the billing buffer.
      operationId: getBillingProjectBufferStatus
      responses:
        200:
          description: No Error
          schema:
            $ref: '#/definitions/BillingProjectBufferStatus'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/cron/monitoring/updateGaugeMetrics:
    get:
      tags:
        - offlineMonitoring
        - cron
      description: Trigger recording of all gauge metrics
      operationId: updateGaugeMetrics
      security: []
      responses:
        204:
          description: No content
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  # Notebooks ############################################################################

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/rename:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - workspaces
      consumes:
        - application/json
      description: Renames specified notebook
      operationId: "renameNotebook"
      parameters:
        - in: body
          name: NotebookRename
          description: new name for notebook
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              newName:
                type: string
      responses:
        200:
          description: Successful rename
          schema:
            $ref: "#/definitions/FileDetail"


  /v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/{notebookName}/duplicate:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - workspaces
      description: Duplicates specified notebook
      operationId: "cloneNotebook"
      parameters:
        - in: path
          name: notebookName
          required: true
          type: string
      responses:
        200:
          description: Successful duplicate
          schema:
            $ref: "#/definitions/FileDetail"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/{notebookName}/copy:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
      - in: path
        name: notebookName
        required: true
        type: string
    post:
      tags:
        - workspaces
      description: Copy specified notebook in path to specified workspace in body
      operationId: "copyNotebook"
      parameters:
        - in: body
          name: copyNotebookRequest
          required: true
          schema:
            $ref: '#/definitions/CopyRequest'
      responses:
        200:
          description: Successful copy
          schema:
            $ref: "#/definitions/FileDetail"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/{notebookName}/delete:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    delete:
      tags:
        - workspaces
      description: Deletes specified notebook
      operationId: "deleteNotebook"
      parameters:
        - in: path
          name: notebookName
          required: true
          type: string
      responses:
        200:
          description: Successful delete
          schema:
            $ref: "#/definitions/EmptyResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/{notebookName}/readonly:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - workspaces
      description: Get the HTML for a read only view of the notebook
      operationId: "readOnlyNotebook"
      parameters:
        - in: path
          name: notebookName
          required: true
          type: string
      responses:
        200:
          description: HTML Read Only version of the notebook
          schema:
            $ref: '#/definitions/ReadOnlyNotebookResponse'

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/{notebookName}/lockingMetadata:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    get:
      tags:
        - workspaces
      summary: Get the locking metadata for a notebook
      description: |
        Get the locking metadata for a notebook, if available.  If the notebook is not locked
        (e.g. at first creation) this may be empty.  Additionally, the caller of this endpoint
        may not have the appropriate permissions to determine who is locking this notebook.
        When this is the case, the lastLockedBy field is set to UNKNOWN.
      operationId: "getNotebookLockingMetadata"
      parameters:
        - in: path
          name: notebookName
          required: true
          type: string
      responses:
        200:
          description: The locking metadata fields for the notebook
          schema:
            $ref: '#/definitions/NotebookLockingMetadataResponse'

  # Cohort Reviews #######################################################################

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/cohort-reviews:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    get:
      tags:
        - cohortReview
      description: Returns all cohort reviews in a workspace
      operationId: "getCohortReviewsInWorkspace"
      responses:
        200:
          description: A list of cohort definitions.
          schema:
            $ref: "#/definitions/CohortReviewListResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/cohort-reviews/{cohortReviewId}:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
      - in: path
        name: cohortReviewId
        type: integer
        format: int64
        required: true
        description: specifies which cohort review
    patch:
      tags:
        - cohortReview
      consumes:
        - application/json
      description: >
        Modifies the cohort review with the specified ID; fields that are omitted
        will not be modified
      operationId: "updateCohortReview"
      parameters:
        - in: body
          name: cohortReview
          description: cohort review
          schema:
            $ref: "#/definitions/CohortReview"
      responses:
        200:
          description: The updated cohort review
          schema:
            $ref: "#/definitions/CohortReview"
    delete:
      tags:
        - cohortReview
      description: Deletes the cohort review with the specified ID
      operationId: "deleteCohortReview"
      responses:
        202:
          description: ACCEPTED
          schema:
            $ref: '#/definitions/EmptyResponse'

  # Cohorts ##############################################################################

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/cohorts:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    get:
      tags:
        - cohorts
      description: Returns all cohort definitions in a workspace
      operationId: "getCohortsInWorkspace"
      responses:
        200:
          description: A list of cohort definitions.
          schema:
            $ref: "#/definitions/CohortListResponse"
    post:
      tags:
        - cohorts
      consumes:
        - application/json
      description: Creates a cohort definition in a workspace.
      operationId: "createCohort"
      parameters:
        - in: body
          name: cohort
          description: cohort definition
          schema:
            $ref: "#/definitions/Cohort"
      responses:
        200:
          description: The cohort definition that was created.
          schema:
            $ref: "#/definitions/Cohort"
        400:
          description: 'Bad Request. Cohort name already exists'

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/cohorts/duplicate:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - cohorts
      description: Creates a duplicate of the cohort specified by cohortId
      operationId: "duplicateCohort"
      parameters:
        - in: body
          name: DuplicateCohortRequest
          description: Duplicate Cohort Request
          schema:
            $ref: '#/definitions/DuplicateCohortRequest'
      responses:
        200:
          description: The cohort definition that was created.
          schema:
            $ref: "#/definitions/Cohort"
        400:
          description: 'Bad Request. Cohort name already exists'

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/cohorts/{cohortId}:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
      - $ref: '#/parameters/cohortId'
    get:
      tags:
        - cohorts
      description: Returns the cohort definition with the specified ID
      operationId: "getCohort"
      responses:
        200:
          description: A cohort definition
          schema:
            $ref: "#/definitions/Cohort"
    patch:
      tags:
        - cohorts
      consumes:
        - application/json
      description: >
        Modifies the cohort definition with the specified ID; fields that are omitted
        will not be modified
      operationId: "updateCohort"
      parameters:
        - in: body
          name: cohort
          description: cohort definition
          schema:
            $ref: "#/definitions/Cohort"
      responses:
        200:
          description: The updated cohort definition
          schema:
            $ref: "#/definitions/Cohort"
    delete:
      tags:
        - cohorts
      description: Deletes the cohort definition with the specified ID
      operationId: "deleteCohort"
      responses:
        202:
          description: ACCEPTED
          schema:
            $ref: '#/definitions/EmptyResponse'

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/materializeCohort:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - cohorts
      consumes:
        - application/json
      description: >
        Materializes a cohort for a given CDR version to specified output.
      operationId: "materializeCohort"
      parameters:
        - in: body
          name: request
          description: cohort materialization request
          schema:
            $ref: "#/definitions/MaterializeCohortRequest"
      responses:
        200:
          description: The results of materializing the cohort
          schema:
            $ref: "#/definitions/MaterializeCohortResponse"

  ######### USER RECENT RESOURCES ########################################
  /v1/workspaces/user-recent-resources:
    get:
      tags:
        - userMetrics
      description: Returns the resources accessed by user order by access time desc
      operationId: getUserRecentResources
      responses:
        200:
          description: A list of resources order by last access time desc order
          schema:
            $ref: "#/definitions/RecentResourceResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/user-recent-resources/update:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - userMetrics
      consumes:
        - application/json
      description: Add/update user recent resource
      operationId: updateRecentResource
      parameters:
        - in: body
          name: RecentResourceRequest
          description: request object for updating recent resource
          required: true
          schema:
            # this is currently only ever used by Notebooks because other
            # resources are stored in our db, and therefore cache ops are
            # done for them in the backend
            $ref: "#/definitions/RecentResourceRequest"
      responses:
        200:
          description: Successfully added/updated
          schema:
            $ref: "#/definitions/RecentResource"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/user-recent-resources/delete:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    delete:
      tags:
        - userMetrics
      description: Deletes entry from recent resource
      operationId: deleteRecentResource
      parameters:
        - in: body
          name: RecentResourceRequest
          description: request object for updating recent resource
          required: true
          schema:
            $ref: "#/definitions/RecentResourceRequest"
      responses:
        200:
          description: Successfully deleted
          schema:
            $ref: "#/definitions/EmptyResponse"

  ######### USER RECENT WORKSPACES ############################################################
  /v1/workspaces/user-recent-workspaces:
    get:
      tags:
        - workspaces
      description: Returns the workspaces edited by the user in descending order of update time
      operationId: getUserRecentWorkspaces
      responses:
        200:
          description: A list of workspaces order by last-updated time in descending order
          schema:
            $ref: "#/definitions/RecentWorkspaceResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/user-recent-workspaces/update:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - workspaces
      description: Add/update user recent workspaces
      operationId: updateRecentWorkspaces
      responses:
        200:
          description: Successfully added/updated
          schema:
            $ref: "#/definitions/RecentWorkspaceResponse"


  # Concept sets ##############################################################################

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/concept-sets:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    get:
      tags:
        - conceptSets
      description: Returns all concept sets in a workspace
      operationId: "getConceptSetsInWorkspace"
      responses:
        200:
          description: A list of concept sets.
          schema:
            $ref: "#/definitions/ConceptSetListResponse"
    post:
      tags:
        - conceptSets
      consumes:
        - application/json
      description: Creates a concept set in a workspace.
      operationId: "createConceptSet"
      parameters:
        - in: body
          name: request
          description: create concept set request
          schema:
            $ref: "#/definitions/CreateConceptSetRequest"
      responses:
        200:
          description: The concept set that was created.
          schema:
            $ref: "#/definitions/ConceptSet"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/survey-concept-sets/{surveyName}:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
      - in: path
        name: surveyName
        type: string
        required: true
    get:
      tags:
        - conceptSets
      description: Returns all survey concept sets in a workspace
      operationId: "getSurveyConceptSetsInWorkspace"
      responses:
        200:
          description: A list of concept sets of type surveys.
          schema:
            $ref: "#/definitions/ConceptSetListResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/concept-sets/{conceptSetId}:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
      - $ref: '#/parameters/conceptSetId'
    get:
      tags:
        - conceptSets
      description: Returns the concept set definition with the specified ID
      operationId: "getConceptSet"
      responses:
        200:
          description: A concept set definition
          schema:
            $ref: "#/definitions/ConceptSet"
    patch:
      tags:
        - conceptSets
      consumes:
        - application/json
      description: >
        Modifies the name or description of the concept set with the specified ID;
        fields that are omitted will not be modified
      operationId: "updateConceptSet"
      parameters:
        - in: body
          name: conceptSet
          description: concept set definition
          schema:
            $ref: "#/definitions/ConceptSet"
      responses:
        200:
          description: The updated concept set.
          schema:
            $ref: "#/definitions/ConceptSet"
    delete:
      tags:
        - conceptSets
      description: Deletes the concept set with the specified ID
      operationId: "deleteConceptSet"
      responses:
        202:
          description: ACCEPTED
          schema:
            $ref: '#/definitions/EmptyResponse'

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/concept-sets/{conceptSetId}/concepts:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
      - $ref: '#/parameters/conceptSetId'
    post:
      tags:
        - conceptSets
      consumes:
        - application/json
      description: >
        Adds or removes concepts from the concept set.
      operationId: "updateConceptSetConcepts"
      parameters:
        - in: body
          name: request
          description: update concept set request
          schema:
            $ref: "#/definitions/UpdateConceptSetRequest"
      responses:
        200:
          description: The updated concept set.
          schema:
            $ref: "#/definitions/ConceptSet"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/concept-sets/{conceptSetId}/copy:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
      - in: path
        name: conceptSetId
        required: true
        type: string
    post:
      tags:
        - conceptSets
      description: Copy specified concept set in path to specified workspace in body
      operationId: "copyConceptSet"
      parameters:
        - in: body
          name: copyConceptSetRequest
          required: true
          schema:
            $ref: '#/definitions/CopyRequest'
      responses:
        200:
          description: Successful copy
          schema:
            $ref: "#/definitions/ConceptSet"

  # Concepts ###############################################################################

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/domainInfo:
    get:
      tags:
        - concepts
      description: >
        Returns information on the domains of data in the workspace's CDR version along
        with participant and concept counts
      operationId: "getDomainInfo"
      parameters:
        - $ref: '#/parameters/workspaceNamespace'
        - $ref: '#/parameters/workspaceId'
      responses:
        200:
          description: information on the domains
          schema:
            $ref: "#/definitions/DomainInfoResponse"

  ### Surveys #############################################
  /v1/workspaces/{workspaceNamespace}/{workspaceId}/surveyInfo:
    get:
      tags:
        - concepts
      description: >
        Returns survey information in the workspace's CDR version along with participant and
        question count
      operationId: "getSurveyInfo"
      parameters:
        - $ref: '#/parameters/workspaceNamespace'
        - $ref: '#/parameters/workspaceId'
      responses:
        200:
          description: information about the surveys
          schema:
            $ref: "#/definitions/SurveysResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/searchSurveys:
    post:
      tags:
        - concepts
      description: >
        Searches for surveys in criteria table by synonyms or survey name
      operationId: "searchSurveys"
      parameters:
        - $ref: '#/parameters/workspaceNamespace'
        - $ref: '#/parameters/workspaceId'
        - in: body
          name: request
          description: survey search request
          schema:
            $ref: "#/definitions/SearchSurveysRequest"
      responses:
        200:
          description: collection of survey questions
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SurveyQuestions"

  ### Data set ############################################
  /v1/workspaces/{workspaceNamespace}/{workspaceId}/data-set/generateCode/{kernelType}:
    post:
      tags:
        - dataSet
      description: >
        Given a Data Set, return the SQL query built from it.
      operationId: "generateCode"
      parameters:
        - $ref: '#/parameters/workspaceNamespace'
        - $ref: '#/parameters/workspaceId'
        - in: path
          name: kernelType
          required: true
          type: string
        - in: body
          name: dataSet
          required: true
          schema:
            $ref: "#/definitions/DataSetRequest"
      responses:
        200:
          description: >
            A SQL query for each domain in the Data Set
          schema:
            $ref: "#/definitions/DataSetCodeResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/data-sets:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    get:
      tags:
        - dataSet
      description: Returns all data sets in a workspace
      operationId: "getDataSetsInWorkspace"
      responses:
        200:
          description: A list of data sets.
          schema:
            $ref: "#/definitions/DataSetListResponse"
    post:
      tags:
        - dataSet
      description: >
        Creates Data Set
      operationId: "createDataSet"
      parameters:
        - $ref: '#/parameters/workspaceNamespace'
        - $ref: '#/parameters/workspaceId'
        - in: body
          name: dataSetRequest
          required: true
          schema:
            $ref: "#/definitions/DataSetRequest"
      responses:
        200:
          description: Data set has been created successfully
          schema:
            $ref: "#/definitions/DataSet"
        400:
          description: Invalid data set request
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Data Set with the same name already exists
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/{workspaceNamespace}/{workspaceId}/data-sets/{dataSetId}:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
      - $ref: '#/parameters/dataSetId'
    get:
      tags:
        - dataSet
      operationId: "getDataSet"
      responses:
        200:
          description: The data set with the specified ID
          schema:
            $ref: "#/definitions/DataSet"
    patch:
      tags:
        - dataSet
      consumes:
        - application/json
      operationId: "updateDataSet"
      parameters:
        - in: body
          name: dataSet
          description: data set definition
          schema:
            $ref: "#/definitions/DataSetRequest"
      responses:
        200:
          description: The updated data set.
          schema:
            $ref: "#/definitions/DataSet"
        409:
          description: Data Set with the same name already exists
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - dataSet
      description: Deletes the data set with the specified ID
      operationId: "deleteDataSet"
      responses:
        202:
          description: ACCEPTED
          schema:
            $ref: '#/definitions/EmptyResponse'

  /v1/{workspaceNamespace}/{workspaceId}/data-sets/dataSetByResourceId:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      parameters:
        - in: body
          name: resourceType
          required: true
          schema:
            $ref: "#/definitions/ResourceType"
        - in: query
          name: id
          type: integer
          format: int64
          required: true
      tags:
        - dataSet
      operationId: "getDataSetByResourceId"
      responses:
        200:
          description: A list of data sets containg cohort/concept Id passed.
          schema:
            $ref: "#/definitions/DataSetListResponse"

  /v1/cdrVersionId/{cdrVersionId}/domain/{domain}/domainValue/{domainValue}/dataDictionaryEntry:
    get:
      parameters:
        - in: path
          name: cdrVersionId
          type: integer
          format: int64
          required: true
        - in: path
          name: domain
          required: true
          type: string
        - in: path
          name: domainValue
          type: string
          required: true
      tags:
        - dataSet
      operationId: "getDataDictionaryEntry"
      responses:
        200:
          description: Detailed definition of a given domain value for the specified CDR Version
          schema:
            $ref: "#/definitions/DataDictionaryEntry"

  /v1/{workspaceNamespace}/{workspaceId}/data-set/markDirty:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      parameters:
        - in: body
          name: markDataSetRequest
          schema:
            $ref: "#/definitions/MarkDataSetRequest"
      tags:
        - dataSet
      operationId: "markDirty"
      responses:
        200:
          description: Mark all dataset with cohort/concept id as dirty
          schema:
            type: boolean
            default: false

  /v1/{workspaceNamespace}/{workspaceId}/data-set/exportToNotebook:
    post:
      tags:
        - dataSet
      description: >
        Exports a data set query to a notebook
      operationId: "exportToNotebook"
      parameters:
        - $ref: '#/parameters/workspaceNamespace'
        - $ref: '#/parameters/workspaceId'
        - in: body
          name: dataSetExportRequest
          required: true
          schema:
            $ref: "#/definitions/DataSetExportRequest"
      responses:
        200:
          description: Data set has been exported correctly
          schema:
            $ref: "#/definitions/EmptyResponse"
        400:
          description: Invalid data set request
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/data-set/preview:
    post:
      tags:
        - dataSet
      description: >
        Preview data set
      operationId: "previewDataSetByDomain"
      parameters:
        - $ref: '#/parameters/workspaceNamespace'
        - $ref: '#/parameters/workspaceId'
        - in: body
          name: dataSetPreviewRequest
          required: true
          schema:
            $ref: "#/definitions/DataSetPreviewRequest"
      responses:
        200:
          description: >
            A SQL query for each domain in the Data Set
          schema:
            $ref: "#/definitions/DataSetPreviewResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/data-set/domainValues/{domain}:
    get:
      tags:
        - dataSet
      description: >
        Returns all column names/values for a given domain.
      operationId: "getValuesFromDomain"
      parameters:
        - $ref: '#/parameters/workspaceNamespace'
        - $ref: '#/parameters/workspaceId'
        - in: path
          name: domain
          required: true
          type: string
      responses:
        200:
          description: the values/column names in the domain.
          schema:
            $ref: "#/definitions/DomainValuesResponse"


  ##########################################################################################
  # Endpoints for task in cloud task queue
  # Note: all requests tagged as "cloudTask" must have the header X-AppEngine-QueueName:
  # to the queue name, which app engine itself only sets (and overrides internally) when invoking
  # cloud task. See
  # https://cloud.google.com/tasks/docs/creating-appengine-handlers#reading_app_engine_task_request_headers
  # and o.p.w.interceptors.CloudTaskInterceptor which implements the header check.
  #########################################################################################

  # Using body parameter ref ArrayOfLong instead of defining array of type long here because of
  # bug in swagger version 2.3.0 https://github.com/swagger-api/swagger-codegen/issues/6745.2.2.3
  /v1/cloudTask/exportResearcherData:
    post:
      tags:
        - cloudTaskRdrExport
        - cloudTask
      security: []
      description: >
        Task handler which handle request from cloud task queue rdrQueueTest to send Researcher data
      operationId: "exportResearcherData"
      consumes:
        - application/json
      parameters:
        - in: body
          name: researcherIds
          required: true
          description: The IDs of Users to be exported to Rdr.
          schema:
            $ref: "#/definitions/ArrayOfLong"
      responses:
        200:
          description: >
            A SQL query for each domain in the Data Set

  /v1/cloudTask/exportWorkspaceData:
    post:
      tags:
        - cloudTaskRdrExport
        - cloudTask
      security: []
      description: >
        Task handler which handle request from cloud task queue rdrQueueTest to send Workspace data
      operationId: "exportWorkspaceData"
      parameters:
        - in: body
          name: researchIds
          required: true
          description: The IDs of workspace to be exported to Rdr.
          schema:
            $ref: "#/definitions/ArrayOfLong"
      responses:
        200:
          description: >
            A SQL query for each domain in the Data Set

# Institution endpoints, for Verified Institutional Affiliation

  /v1/institutions:
    get:
      tags:
        - institution
      description: >
        Gets a list of all Institutions.
      operationId: "getInstitutions"
      responses:
        200:
          description: >
            A list of all Institutions
          schema:
            $ref: "#/definitions/GetInstitutionsResponse"
    post:
      tags:
        - institution
      description: >
        Create an Institution.
        Requires INSTITUTION_ADMIN authority.
      operationId: "createInstitution"
      parameters:
        - in: body
          name: institutionToCreate
          required: true
          description: The Institution to be created by this operation.
          schema:
            $ref: "#/definitions/Institution"
      responses:
        200:
          description: >
            The Institution created by this operation.
          schema:
            $ref: "#/definitions/Institution"

  /v1/institutions/{shortName}:
    parameters:
      - in: path
        name: shortName
        required: true
        type: string
    get:
      tags:
        - institution
      description: >
        Gets the Institution corresponding to the shortName ID.
      operationId: "getInstitution"
      responses:
        200:
          description: >
            The Institution corresponding to the shortName ID.
          schema:
            $ref: "#/definitions/Institution"
    delete:
      tags:
        - institution
      description: >
        Deletes the Institution corresponding to the shortName ID.
        Requires INSTITUTION_ADMIN authority.
      operationId: "deleteInstitution"
      responses:
        204:
          description: >
            Successful deletion of the Institution corresponding to the shortName ID.
    patch:
      tags:
        - institution
      description: >
        Updates an Institution.
        Requires INSTITUTION_ADMIN authority.
      operationId: "updateInstitution"
      parameters:
        - in: body
          name: institutionToUpdate
          required: true
          description: The Institution to update.
          schema:
            $ref: "#/definitions/Institution"
      responses:
        200:
          description: >
            The updated Institution.
          schema:
            $ref: "#/definitions/Institution"

##########################################################################################
## DEFINITIONS
##########################################################################################
definitions:
  StatusResponse:
    type: object
    required:
      - firecloudStatus
      - notebooksStatus
    properties:
      firecloudStatus:
        type: boolean
        default: false
      notebooksStatus:
        type: boolean
        default: false

  ConfigResponse:
    type: object
    required:
      - gsuiteDomain
    properties:
      # This should be gSuiteDomain, but the Swagger-Codegen-generated server code causes the JSON
      # response to have the keys "gsuiteDomain" and "gSuiteDomain". This weirdness is a workaround.
      gsuiteDomain:
        type: string
        description: G-Suite domain containing user accounts.
      projectId:
        type: string
        description: The cloud project in which this app is running.
      firecloudURL:
        type: string
        description: The Firecloud URL to use for REST requests.
      publicApiKeyForErrorReports:
        type: string
        description: |
          Stackdriver API key for error reporting, scoped to a particular
          domain. If unset, Stackdriver error reporting should be disabled.
      enableComplianceTraining:
        type: boolean
        default: false
        description: Whether the compliance training access module is enabled.
      enableDataUseAgreement:
        type: boolean
        default: false
        description: Whether the data use agreement access module is enabled.
      enableEraCommons:
        type: boolean
        default: false
        description: Whether the eRA Commons access module is enabled.
      unsafeAllowSelfBypass:
        type: boolean
        default: false
        description: Whether a user is allowed to self-bypass. Only enabled in test environments.
      defaultFreeCreditsDollarLimit:
        type: number
        format: double
        description: The default dollar amount of free credits alloted to each user
      enableBillingLockout:
        type: boolean
        default: false
        description: Feature flag for billing lockout and upgrade
      enableNewAccountCreation:
        type: boolean
        default: false
        description: Feature flag for collecting new demographics & TOS acknowledgement on user creation.

  FeaturedWorkspacesConfigResponse:
    type: object
    properties:
      featuredWorkspacesList:
        type: "array"
        items:
          $ref: "#/definitions/FeaturedWorkspace"

  # Mirrors BillingProjectMembership from fireCloud.yaml
  BillingProjectMembership:
    description: ''
    required:
      - projectName
      - role
      - status
    type: object
    properties:
      projectName:
        type: string
        description: the name of the project
      role:
        type: string
        description: the role of the current user in the project
      status:
        $ref: "#/definitions/BillingProjectStatus"

  DataDictionaryEntry:
    type: object
    properties:
      cdrVersionId:
        type: integer
        format: int64
      definedTime:
        type: integer
        format: int64
      relevantOmopTable:
        type: string
      fieldName:
        type: string
      omopCdmStandardOrCustomField:
        type: string
      description:
        type: string
      fieldType:
        type: string
      dataProvenance:
        type: string
      sourcePpiModule:
        type: string
      transformedByRegisteredTierPrivacyMethods:
        type: boolean
        default: false

  BillingProjectStatus:
    type: string
    description: >
      Initialization status of a Firecloud billing project for use with Workbench.
    enum: &BILLING_PROJECT_STATUS [none, pending, ready, error]

  EmailVerificationStatus:
    type: string
    description: stage of email verification
    enum: &EMAIL_VERIFICATION_STATUS [unverified, pending, subscribed]

  EmptyResponse:
    type: object
    properties:
      additionalInfo:
        type: string

  VerifyEmailRequest:
    type: object
    properties:
      emailToVerify:
        type: string
      username:
        type: string

  # Authorities are a tool used to add discrete permissions to users. We currently
  # define the following authorities:
  #   1) REVIEW_RESEARCH_PURPOSE: This authority allows the user to review workspaces where
  #      the user has requested review to approve or reject.
  #   2) DEVELOPER: *Grants all other authorities* as well as some internal-only
  #      administrative endpoints, including group management and cluster
  #      management. Intended to be granted for devops needs, e.g. for oncall.
  #   3) ACCESS_CONTROL_ADMIN: This is actually basically a user admin authority, for people
  #      to perform actions on a user's enabled status and manual verification.
  #   4) FEATURED_WORKSPACE_ADMIN: Allows a user to publish workspaces
  #   5) COMMUNICATIONS_ADMIN: Allows a user to post a Status Alert banner
  #   6) SECURITY_ADMIN: Allows a user to respond to egress alerts by deleting all clusters in a project
  #   7) INSTITUTION_ADMIN: Allows a user to create, delete, and update Institute entities
  Authority:
    type: string
    description: actions a user can have authority/permission to perform
    enum: [
      # Note: Swagger trims any common prefix from enum values' corresponding
      # Java fields by default; this has no side-effect currently as there is
      # no common prefix. https://github.com/swagger-api/swagger-codegen/issues/4261
      REVIEW_RESEARCH_PURPOSE,
      DEVELOPER,
      ACCESS_CONTROL_ADMIN,
      FEATURED_WORKSPACE_ADMIN,
      COMMUNICATIONS_ADMIN,
      SECURITY_ADMIN,
      INSTITUTION_ADMIN
    ]

  PageVisit:
    type: object
    properties:
      userId:
        type: integer
        format: int64
      page:
        type: string
      firstVisit:
        type: integer
        format: int64

  WorkspaceListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Workspace"

  WorkspaceResponseListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/WorkspaceResponse"

  Workspace:
    type: object
    required:
      - name
    properties:
      id:
        type: string
      etag:
        type: string
        description: >
          Entity tag for optimistic concurrency control. To be set during a
          read-modify-write to ensure that the client has not attempted to
          modify a changed resource.
      name:
        type: string
      namespace:
        type: string
      cdrVersionId:
        type: string
      creator:
        type: string
      billingAccountName:
        type: string
      googleBucketName:
        type: string
      dataAccessLevel:
        $ref: "#/definitions/DataAccessLevel"
      researchPurpose:
        $ref: "#/definitions/ResearchPurpose"
      billingStatus:
        $ref: "#/definitions/BillingStatus"
      creationTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      published:
        type: boolean
        default: false

  UserRole:
    type: object
    required:
      - email
      - role
    properties:
      email:
        type: string
      givenName:
        type: string
      familyName:
        type: string
      role:
        $ref: "#/definitions/WorkspaceAccessLevel"

  ShareWorkspaceRequest:
    type: object
    required:
      - items
    properties:
      workspaceEtag:
        type: string
        description: >
          Associated workspace etag retrieved via reading the workspaces API. If provided,
          validates that the workspace (and its user roles) has not been modified since this
          etag was retrieved.
      items:
        type: "array"
        items:
          $ref: "#/definitions/UserRole"

  WorkspaceUserRolesResponse:
    type: object
    properties:
      workspaceEtag:
        type: string
        description: >
          Updated workspace etag after the share request has been applied.
      items:
        type: "array"
        items:
          $ref: "#/definitions/UserRole"

  CopyRequest:
    type: object
    required:
      - toWorkspaceName
      - toWorkspaceNamespace
      - newName
    properties:
      toWorkspaceName:
        type: string
      toWorkspaceNamespace:
        type: string
      newName:
        type: string

  CloneWorkspaceRequest:
    type: object
    required:
      - workspace
    properties:
      includeUserRoles:
        type: boolean
        default: false
        description: >
          Whether to duplicate the user roles (sharing settings) on the workspace.
          By default, duplicate follows the behavior of CreateWorkspace - it is
          shared solely with the creator as an OWNER. If true, all user roles
          are also copied onto the new workspace in addition to the caller
          becoming an OWNER.
      workspace:
        $ref: "#/definitions/Workspace"
        description: >
          Workspace metadata to be applied to the cloned workspace upon creation. The following
          workspace fields are accepted:
            - name (required)
            - namespace (required)
            - researchPurpose (required)
            - description: defaults to the cloned workspace description
            - cdrVersionId defaults to the cloned workspace CDR version

          All other fields will be ignored and are generated server-side or are copied from the
          cloned workspace.

  CloneWorkspaceResponse:
    type: object
    properties:
      workspace:
        $ref: "#/definitions/Workspace"
        description: The newly created workspace duplicate.

  UpdateWorkspaceRequest:
    type: object
    required:
      - workspace
    properties:
      workspace:
        $ref: "#/definitions/Workspace"

  WorkspaceAccessLevel:
    type: string
    description: levels of access to workspace, NO ACCESS is akin to removing a user from a workspace ACL.
    enum: [NO ACCESS, READER, WRITER, OWNER]

  WorkspaceActiveStatus:
    type: string
    description: Status of workspace
    enum: [ACTIVE, DELETED, PENDING_DELETION_POST_1PPW_MIGRATION]

  ResearchPurpose:
    type: object
    required:
      - diseaseFocusedResearch
      - methodsDevelopment
      - controlSet
      - ancestry
      - commercialPurpose
      - population
      - reviewRequested
      - socialBehavioral
      - populationHealth
      - ethics
      - educational
      - otherPurpose
      - scientificApproach
      - intendedStudy
      - anticipatedFindings
      - drugDevelopment
    properties:
      additionalNotes:
        type: string
      approved:
        type: boolean
        default: null
      ancestry:
        type: boolean
        default: false
      anticipatedFindings:
        type: string
      commercialPurpose:
        type: boolean
        default: false
      controlSet:
        type: boolean
        default: false
      diseaseFocusedResearch:
        type: boolean
        default: false
      diseaseOfFocus:
        type: string
      drugDevelopment:
        type: boolean
        default: false
      educational:
        type: boolean
        default: false
      intendedStudy:
        type: string
      scientificApproach:
        type: string
      methodsDevelopment:
        type: boolean
        default: false
      otherPopulationDetails:
        type: string
      otherPurpose:
        type: boolean
        default: false
      otherPurposeDetails:
        type: string
      population:
        type: boolean
        default: false
      ethics:
        type: boolean
        default: false
      populationDetails:
        type: array
        items:
          $ref: "#/definitions/SpecificPopulationEnum"
      populationHealth:
        type: boolean
        default: false
      reasonForAllOfUs:
        type: string
      reviewRequested:
        type: boolean
        default: false
      socialBehavioral:
        type: boolean
        default: false
      timeRequested:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      timeReviewed:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      disseminateResearchFindingList:
        type: array
        items:
          $ref: "#/definitions/DisseminateResearchEnum"
      otherDisseminateResearchFindings:
        type: string
      researchOutcomeList:
        type: array
        items:
          $ref: "#/definitions/ResearchOutcomeEnum"

  SpecificPopulationEnum:
    type: string
    description: Short parsable descriptions of specific population categories
    enum: [
      RACE_ETHNICITY,
      AGE_GROUPS,
      SEX,
      GENDER_IDENTITY,
      SEXUAL_ORIENTATION,
      GEOGRAPHY,
      DISABILITY_STATUS,
      ACCESS_TO_CARE,
      EDUCATION_LEVEL,
      INCOME_LEVEL,
      OTHER,
      RACE_ASIAN,
      RACE_AA,
      RACE_HISPANIC,
      RACE_AIAN,
      RACE_MENA,
      RACE_NHPI,
      RACE_MORE_THAN_ONE,
      AGE_CHILDREN,
      AGE_ADOLESCENTS,
      AGE_OLDER,
      AGE_OLDER_MORE_THAN_75
    ]

  DisseminateResearchEnum:
    type: string
    description: Represents how researchers plan to to disseminate thier research findings.
    enum: [
      PUBLICATION_PEER_REVIEWED_JOURNALS,
      PRESENATATION_SCIENTIFIC_CONFERENCES,
      PRESS_RELEASE,
      PUBLICATION_COMMUNITY_BASED_BLOG,
      PUBLICATION_PERSONAL_BLOG,
      SOCIAL_MEDIA,
      PRESENTATION_ADVISORY_GROUPS,
      OTHER
    ]

  ResearchOutcomeEnum:
    type: string
    description: Represents antipicated outcomes from the research
    enum: [
      PROMOTE_HEALTHY_LIVING,
      IMPROVE_HEALTH_EQUALITY_UBR_POPULATIONS,
      IMPROVED_RISK_ASSESMENT,
      DECREASE_ILLNESS_BURDEN,
      PRECISION_INTERVENTION,
      NONE_APPLY
    ]

  ResearchPurposeReviewRequest:
    description: Approve or reject a workspace's research purpose.
    type: object
    required:
      - approved
    properties:
      approved:
        type: boolean
        default: false

  ClusterConfig:
    properties:
      masterDiskSize:
        description: Master persistent disk size in GB.
        type: integer
        format: int32
      machineType:
        description: GCE machine type, e.g. n1-standard-2.
        type: string

  UpdateClusterConfigRequest:
    description: >
      Request to update the default cluster configuration for a given user.
      Fields of the config may be omitted, in which case a default will be used.
      Set clusterConfig to null to clear it.
    type: object
    required:
      - userEmail
    properties:
      userEmail:
        type: string
      clusterConfig:
        $ref: "#/definitions/ClusterConfig"

  AccessModule:
    type: string
    enum: [
      DATA_USE_AGREEMENT,
      COMPLIANCE_TRAINING,
      BETA_ACCESS,
      ERA_COMMONS,
      TWO_FACTOR_AUTH
    ]

  AccessBypassRequest:
    type: object
    required:
      - isBypassed
    properties:
      moduleName:
        $ref: "#/definitions/AccessModule"
      isBypassed:
        type: boolean
        default: false

  CohortReviewListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/CohortReview"

  WorkbenchListBillingAccountsResponse:
    type: object
    required:
      - billingAccounts
    properties:
      billingAccounts:
        type: "array"
        items:
          $ref: "#/definitions/BillingAccount"

  BillingAccount:
    description: >
      See https://cloud.google.com/billing/reference/rest/v1/billingAccounts#BillingAccount
      for documentation on name, displayName, and isOpen.
    type: object
    required:
      - isFreeTier
      - name
      - displayName
      - isOpen
    properties:
      isFreeTier:
        description: Returns true if this is the billing account used for free tier
        type: boolean
      name:
        type: string
      displayName:
        type: string
      isOpen:
        type: boolean

  CohortListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Cohort"

  Cohort:
    type: object
    required:
      - name
      - criteria
      - type
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: string
        description: >
          Entity tag for optimistic concurrency control. To be set during a
          read-modify-write to ensure that the client has not attempted to
          modify a changed resource.
      name:
        type: string
      criteria:
        description: >
          Internal representation of the cohort definition. Clients should not depend directly
          on this, but instead call client functions to issue a SQL query for the cohort.
        type: string
      type:
        type: string
      description:
        type: string
      creator:
        type: string
      creationTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.

  MaterializeCohortRequest:
    type: object
    properties:
      cohortName:
        description: >
          The name of a cohort that is to be evaluated. Either this or cohortSpec should be specified
        type: string
      cohortSpec:
        description: >
          JSON representation of a cohort to be evaluated (using the same format used for saved
          cohorts). Either this or cohortName should be specified
        type: string
      statusFilter:
        description: >
          An array of status values; participants with these statuses will be included.
          Defaults to [NOT_REVIEWED, INCLUDED, NEEDS_FURTHER_REVIEW] -- everything but EXCLUDED.
          Only valid for use with cohortName (cohorts saved in the database.)
        type: array
        items:
          $ref: "#/definitions/CohortStatus"
      cdrVersionName:
        description: >
          The name of a CDR version to use when evaluating the cohort; if none is specified,
          the CDR version currently associated with the workspace will be used
        type: string
      pageToken:
        description: >
          Pagination token retrieved from a previous call to materializeCohort; used for
          retrieving additional pages of results. If this is specified, all other fields on
          MaterializeCohortRequest apart from pageSize must match the values specified
          on the request that generated this token.
        type: string
      pageSize:
        description: >
          Maximum number of results to return in a response. Defaults to 1000.
        type: integer
        format: int32
      fieldSet:
        description: >
          Specification defining what data to return for participants in the cohort. Defaults to
          just participant IDs.
        $ref: "#/definitions/FieldSet"

  FieldSet:
    type: object
    description: >
      A specification for fields to retrieve about participants in a cohort.
      Exactly one of the properties below should be specified.
    properties:
      tableQuery:
        description: >
          A query specifying how to pull data out of a single table. Either this or annotationQuery
          should be set (not both.)
        $ref: "#/definitions/TableQuery"
      annotationQuery:
        description: >
          A query specifying how to retrieve annotation values created about participants in a
          cohort during cohort review. Either this or tableQuery should be set (not both.)
        $ref: "#/definitions/AnnotationQuery"

  MaterializeCohortResponse:
    type: object
    required:
      - results
    properties:
      results:
        description: >
          An array of JSON dictionaries representing results to the cohort materialization.
          (In Java, this is represented as Map<String, Object>[]. In Python clients, this is a
          list[object] where each object is a dictionary. In Typescript clients, this is an
          Array<any> where each object is a dictionary.) Keys in the dictionaries will be the
          columns selected in the field set provided in the request, and the values will
          be the values of those columns.
        type: array
        items:
          type: object
      nextPageToken:
        description: >
          Pagination token that can be used in a subsequent call to MaterializeCohortRequest to
          retrieve more results. If not set, there are no more results to retrieve.
        type: string

  ConceptSetListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/ConceptSet"

  ConceptSet:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: string
        description: >
          Entity tag for optimistic concurrency control. To be set during a
          read-modify-write to ensure that the client has not attempted to
          modify a changed resource.
      name:
        type: string
      domain:
        description: >
          Domain corresponding to an OMOP table that can contain rows for the concepts in this
          concept set. Note that the Domain values RACE, GENDER, and ETHNICITY are not allowed
          here; it makes sense to specify concepts in these domains in cohort criteria, but
          there isn't much value in having concept sets defined for them.
        $ref: "#/definitions/Domain"
      survey:
        description: >
          Survey
        $ref: "#/definitions/Surveys"
      description:
        type: string
      creator:
        type: string
      creationTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      participantCount:
        type: integer
        format: int32
        description: >
          Count of participants in the CDR version for the workspace containing this
          concept set that match the specified concept set
      concepts:
        description: "Concepts in the concept set, in conceptName order."
        type: array
        items:
          $ref: "#/definitions/Concept"

  CreateConceptSetRequest:
    type: object
    required:
      - conceptSet
    properties:
      conceptSet:
        description: Concept set to be created; concepts is ignored
        $ref: "#/definitions/ConceptSet"
      addedIds:
        type: array
        description: The IDs of concepts to be added to the concept set.
        items:
          type: integer
          format: int64

  UpdateConceptSetRequest:
    type: object
    required:
      - etag
    properties:
      etag:
        type: string
        description: >
          Etag of the concept set being modified.
          Validates that the concept set has not been modified since this
          etag was retrieved.
      addedIds:
        type: array
        description: >
          The IDs of concepts to be added to the concept set.
        items:
          type: integer
          format: int64
      removedIds:
        type: array
        description: >
          The IDs of concepts to be removed from the concept set.
        items:
          type: integer
          format: int64

  DataSetRequest:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      description:
        type: string
      etag:
        type: string
        description: >
          Entity tag for optimistic concurrency control. To be set during a
          read-modify-write to ensure that the client has not attempted to
          modify a changed resource.
      workspaceId:
        type: integer
        format: int64
      includesAllParticipants:
        type: boolean
        default: false
        description: >
          Whether to include all participants or filter by cohorts
      prePackagedConceptSet:
        $ref: "#/definitions/PrePackagedConceptSetEnum"
      conceptSetIds:
        type: array
        description: >
          The ids of all concept sets in the data set
        items:
          type: integer
          format: int64
      cohortIds:
        type: array
        description: >
          The ids of all cohorts in the data set
        items:
          type: integer
          format: int64
      domainValuePairs:
        type: array
        description: >
          All the selected domain/value pairs in the data set
        items:
          $ref: "#/definitions/DomainValuePair"

  PrePackagedConceptSetEnum:
    type: string
    enum:
      - None
      - Demographics
      - Survey
      - Both

  DataSetExportRequest:
    type: object
    required:
      - dataSetRequest
      - notebookName
      - newNotebook
    properties:
      dataSetRequest:
        $ref: "#/definitions/DataSetRequest"
      notebookName:
        type: string
      newNotebook:
        type: boolean
        default: false
      kernelType:
        $ref: "#/definitions/KernelTypeEnum"

  MarkDataSetRequest:
    type: object
    properties:
      id:
        type: integer
        format: int64
      resourceType:
        $ref: "#/definitions/ResourceType"

  ResourceType:
    type: string
    enum:
      - NOTEBOOK
      - COHORT
      - COHORT_REVIEW
      - CONCEPT_SET
      - DATASET
      - WORKSPACE

  KernelTypeEnum:
    type: string
    enum:
      - Python
      - R

  DomainValuePair:
    type: object
    properties:
      domain:
        description: >
          Domain corresponding to an OMOP table.
        $ref: "#/definitions/Domain"
      value:
        type: string

  DataSet:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      etag:
        type: string
        description: >
          Entity tag for optimistic concurrency control. To be set during a
          read-modify-write to ensure that the client has not attempted to
          modify a changed resource.
      includesAllParticipants:
        type: boolean
        default: false
      description:
        type: string
      workspaceId:
        type: integer
        format: int64
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      conceptSets:
        type: array
        description: >
          All concept sets in the data set
        items:
          $ref: '#/definitions/ConceptSet'
      cohorts:
        type: array
        description: >
          All cohorts in the data set
        items:
          $ref: "#/definitions/Cohort"
      domainValuePairs:
        type: array
        description: >
          All the selected domain/value pairs in the data set
        items:
          $ref: "#/definitions/DomainValuePair"
      prePackagedConceptSet:
        $ref: "#/definitions/PrePackagedConceptSetEnum"

  DataSetListResponse:
    type: object
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/DataSet"


  DataSetCodeResponse:
    type: object
    properties:
      kernelType:
        $ref: "#/definitions/KernelTypeEnum"
      code:
        type: string
        description: The code required to generate the query for the data set.

  DataSetQuery:
    type: object
    required:
      - domain
      - query
    properties:
      domain:
        description: >
          Domain corresponding to an OMOP table that can contain rows for the concepts in this
          concept set. Note that the Domain values RACE, GENDER, and ETHNICITY are not allowed
          here; it makes sense to specify concepts in these domains in cohort criteria, but
          there isn't much value in having concept sets defined for them.
        $ref: "#/definitions/Domain"
      query:
        type: string
        description: >
          The parameterized BigQuery SQL string to fetch the domain-specific subset of the data set from the CDR.
      namedParameters:
        type: array
        description: >
          The set of named parameters to use for the SQL query.
        items:
          $ref: "#/definitions/NamedParameterEntry"

  NamedParameterEntry:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
      value:
        $ref: "#/definitions/NamedParameterValue"

  NamedParameterValue:
    type: object
    required:
      - name
      - parameterType
      - parameterValue
    properties:
      name:
        type: string
      parameterType:
        description: >
          Should be any parameter allowed by bigquery, with the exception of struct. The list of
          parameter types can be found here: https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types
        type: string
      arrayType:
        type: string
      parameterValue:
        type: object
        description: Can be any value

  DataSetPreviewRequest:
    type: object
    required:
      - domain
    properties:
      domain:
        $ref: "#/definitions/Domain"
      includesAllParticipants:
        type: boolean
        default: false
        description: >
          Whether to include all participants or filter by cohorts
      prePackagedConceptSet:
        $ref: "#/definitions/PrePackagedConceptSetEnum"
      conceptSetIds:
        type: array
        description: >
          The ids of all concept sets in the data set
        items:
          type: integer
          format: int64
      cohortIds:
        type: array
        description: >
          The ids of all cohorts in the data set
        items:
          type: integer
          format: int64
      values:
        type: array
        description: >
          All the selected values in the data set
        items:
          type: string


  DataSetPreviewResponse:
    type: object
    properties:
      domain:
        $ref: "#/definitions/Domain"
      values:
        type: "array"
        items:
          $ref: "#/definitions/DataSetPreviewValueList"

  DataSetPreviewValueList:
    type: object
    properties:
      value:
        type: string
        description: Value selected by user which will act as column header in preview table
      queryValue:
        type: "array"
        items:
          type: string

  DomainInfoResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/DomainInfo"

  ValueSet:
    type: object
    properties:
      domain:
        description: >
          Domain corresponding to an OMOP table.
        $ref: "#/definitions/Domain"
      survey:
        description: >
          Survey corresponding to an OMOP table.
        $ref: "#/definitions/Surveys"
      values:
        $ref: "#/definitions/DomainValuesResponse"

  DomainValuesResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/DomainValue"

  DomainValue:
    type: object
    description: >
      Domain values map to various column names in OMOP.
    required:
      - value
    properties:
      value:
        description: The user facing display name for the value.
        type: string

  ReadOnlyNotebookResponse:
    type: object
    properties:
      html:
        type: string

  SurveysResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/SurveyModule"

  SearchSurveysRequest:
    type: object
    required:
      - standardConceptFilter
    properties:
      query:
        type: string
        description: >
          A query string that can be used to match a subset of the name (case-insensitively),
          the entire code value (case-insensitively), or the concept ID. If not specified, all
          concepts are returned.
      standardConceptFilter:
        description: >
          STANDARD_CONCEPTS if only standard concepts should be returned,
          NON_STANDARD_CONCEPTS if only non-standard
          concepts should be returned; defaults to ALL_CONCEPTS, meaning both
          standard and non-standard concepts will be returned.
        $ref: "#/definitions/StandardConceptFilter"
      surveyName:
        description: The name of the survey clicked
        type: string
      maxResults:
        type: integer
        format: int32
        description: The maximum number of results returned. Defaults to 20.
      pageNumber:
        type: integer
        default: 0
        description: By default it returns the first page and then its next pages from that on.

  SurveyQuestions:
    type: object
    properties:
      question:
        type: string
      conceptId:
        type: integer
        format: int64
      countValue:
        description: Count of participants matching this concept in the CDR
        type: integer
        format: int64

  CreateAccountRequest:
    type: object
    properties:
      profile:
        $ref: '#/definitions/Profile'
      invitationKey:
        type: string
      termsOfServiceVersion:
        type: integer
        format: int32
        description: >
          Optional version of the TOS that the user has acknowledged during the sign-up flow. If null, the system
          assumes that the user has not acknowledged any TOS during sign-up.

  DuplicateCohortRequest:
    type: object
    properties:
      originalCohortId:
        type: integer
        format: int64
      newName:
        type: string

  InvitationVerificationRequest:
    type: object
    required:
      - invitationKey
    properties:
      invitationKey:
        type: string
        description: Invitation key for verification

  ResendWelcomeEmailRequest:
    type: object
    required:
      - username
      - creationNonce
    properties:
      username:
        type: string
        description: Username of account to resend welcome email to
      creationNonce:
        type: string
        description: The nonce returned from the account creation API.

  UpdateContactEmailRequest:
    type: object
    required:
      - contactEmail
      - username
      - creationNonce
    properties:
      contactEmail:
        type: string
        description: Email to update contact email
      username:
        type: string
        description: Username for account.
      creationNonce:
        type: string
        description: The nonce returned from the account creation API.

  NihToken:
    required:
      - jwt
    type: object
    properties:
      jwt:
        type: string
        description: the encoded/signed JWT

  Profile:
    type: object
    required:
      - username
      - dataAccessLevel
    properties:
      userId:
        description: researchallofus userId
        type: integer
        format: int64
      username:
        description: researchallofus username
        type: string
      creationNonce:
        description: >
          A value which can be used to secure API calls during the account
          creation flow, prior to account login.
        type: string
      contactEmail:
        description: email address that can be used to contact the user
        type: string
      contactEmailFailure:
        description: Whether or not contact email could be added to verification list
        type: boolean
        default: false
      firstSignInTime:
        type: integer
        format: int64
      dataAccessLevel:
        description: what level of data access the user has
        $ref: "#/definitions/DataAccessLevel"
      degrees:
        type: array
        items:
          $ref: '#/definitions/Degree'
      givenName:
        description: the user's given name (e.g. Alice)
        type: string
      familyName:
        description: the user's family  name (e.g. Jones)
        type: string
      phoneNumber:
        description: the user's phone number
        type: string
      professionalUrl:
        description: the link to the user's professional url
        type: string
      currentPosition:
        description: the user's curent position (job title)
        type: string
      organization:
        description: the user's current organization
        type: string
      authorities:
        description: authorities granted to this user
        type: "array"
        items:
          $ref: "#/definitions/Authority"
      pageVisits:
        description: pages user has visited
        type: "array"
        items:
          $ref: "#/definitions/PageVisit"
      demographicSurveyCompletionTime:
        type: integer
        format: int64
        description: Timestamp when the user completed a demographic survey in milliseconds since the UNIX epoch.
      disabled:
        type: boolean
        default: false
      emailVerificationStatus:
        $ref: "#/definitions/EmailVerificationStatus"
      aboutYou:
        type: string
      areaOfResearch:
        type: string
      institutionalAffiliations:
        type: "array"
        items:
          $ref: "#/definitions/InstitutionalAffiliation"
      demographicSurvey:
        $ref: "#/definitions/DemographicSurvey"
      idVerificationCompletionTime:
        type: integer
        format: int64
        description: Timestamp when the user completes identity verification.
      idVerificationBypassTime:
        type: integer
        format: int64
        description: Timestamp when the user is bypassed for completing identity verification
      twoFactorAuthCompletionTime:
        type: integer
        format: int64
        description: Timestamp when the user completed two factor authentication in milliseconds since the UNIX epoch.
      twoFactorAuthBypassTime:
        type: integer
        format: int64
        description: Timestamp when the user was bypassed for completing two factor authentication in milliseconds since the UNIX epoch.
      eraCommonsLinkedNihUsername:
        type: string
        description: The user's NIH username
      eraCommonsLinkExpireTime:
        type: integer
        description: The FireCloud-calculated expiration time
        format: int64
        default: 0
      eraCommonsCompletionTime:
        type: integer
        format: int64
        description: Timestamp when the user completed era commons linking.
      eraCommonsBypassTime:
        type: integer
        format: int64
        description: Timestamp when the user was bypassed for completing era commons linking.
      complianceTrainingCompletionTime:
        type: integer
        format: int64
        description: Timestamp when a user completed compliance training.
      complianceTrainingBypassTime:
        type: integer
        format: int64
        description: Timestamp when a user was bypassed for completing compliance training
      betaAccessBypassTime:
        type: integer
        format: int64
        description: Timestamp when a user was bypassed for beta access
      betaAccessRequestTime:
        type: integer
        format: int64
        description: Timestamp when the user requests beta access.
      emailVerificationCompletionTime:
        type: integer
        format: int64
        description: Timestamp when a user completed email verification
      emailVerificationBypassTime:
        type: integer
        format: int64
        description: Timestamp when a user was bypassed for completing email verification
      dataUseAgreementCompletionTime:
        type: integer
        format: int64
        description: Timestamp when a user completed the data use agreement.
      dataUseAgreementBypassTime:
        type: integer
        format: int64
        description: Timestamp when a user was bypassed for completing the data use agreement.
      dataUseAgreementSignedVersion:
        type: integer
        format: int32
        description: Version of the data use agreement that the user last signed.
      address:
        $ref: '#/definitions/Address'
      freeTierUsage:
        type: number
        format: double
      freeTierDollarQuota:
        type: number
        format: double
      latestTermsOfServiceVersion:
        type: integer
        format: int32
        description: >
          Version of the terms of service that the user last acknowledged. May be null if the user has never
          acknowledged the Terms of Service.
      latestTermsOfServiceTime:
        type: integer
        format: int64
        description: >
          Timestamp when the user last acknowledged the terms of service. May be null if the user has never
          acknowledged the Terms of Service.

  InstitutionalAffiliation:
    type: object
    properties:
      institution:
        type: string
      role:
        type: string
      nonAcademicAffiliation:
        $ref: '#/definitions/NonAcademicAffiliation'
        type: string
      other:
        type: string

  DemographicSurvey:
    type: object
    properties:
      race:
        type: array
        items:
          $ref: '#/definitions/Race'
      ethnicity:
        $ref: '#/definitions/Ethnicity'
      identifiesAsLgbtq:
        type: boolean
      lgbtqIdentity:
        type: string
      genderIdentityList:
        type: array
        items:
          $ref: '#/definitions/GenderIdentity'
      sexAtBirth:
        type: array
        items:
          $ref: '#/definitions/SexAtBirth'
      yearOfBirth:
        type: number
      education:
        $ref: '#/definitions/Education'
      disability:
        type: boolean
        default: false

  Address:
    type: object
    properties:
      streetAddress1:
        type: string
      streetAddress2:
        type: string
      zipCode:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string

  StackTraceElement:
    description: ''
    required:
      - className
      - methodName
      - fileName
      - lineNumber
    properties:
      className:
        type: string
        description: class name
      methodName:
        type: string
        description: method name
      fileName:
        type: string
        description: source file name
      lineNumber:
        type: integer
        description: line number

  ClusterStatus:
    type: string
    enum: &CLUSTERSTATUS
      - Creating
      - Running
      - Updating
      - Error
      - Stopping
      - Stopped
      - Starting
      - Deleting
      - Deleted
      - Unknown

  Cluster:
    description: A Firecloud notebook cluster.
    required:
      - clusterName
      - clusterNamespace
      - status
    properties:
      clusterName:
        type: string
        description: The user-supplied name for the cluster
      clusterNamespace:
        type: string
        description: The Google Project used to create the cluster
      status:
        $ref: "#/definitions/ClusterStatus"
      createdDate:
        type: string
        description: The date and time the cluster was created, in ISO-8601 format

  FileDetail:
    type: object
    required:
      - name
      - path
      - lastModifiedTime
    properties:
      name:
        type: string
        description: File Name
      path:
        type: string
        description: The path is in format of gs://bucket-name/name
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.

  DefaultClusterResponse:
    type: object
    required:
      - defaultCluster
    properties:
      defaultCluster:
        $ref: "#/definitions/Cluster"

  ListClusterResponse:
    description: Limited set of responses for a cluster. This is a subset of options in a full cluster, copied from the Leonardo swagger
    required:
      - clusterName
      - googleProject
      - status
      - createdDate
      - labels
      - dateAccessed
    properties:
      clusterName:
        type: string
        description: The user-supplied name for the cluster
      googleProject:
        type: string
        description: The Google Project used to create the cluster
      status:
        $ref: "#/definitions/ClusterStatus"
      createdDate:
        type: string
        description: The date and time the cluster was created, in ISO-8601 format
      labels:
        type: object
        description: The labels to be placed on the cluster. Of type Map[String,String]
      dateAccessed:
        type: string
        description: |
          The date and time the cluster was last accessed, in ISO-8601 format.
          Date accessed is defined as the last time the cluster was created, modified, or accessed via the proxy.

  ListClusterDeleteRequest:
    type: object
    properties:
      clustersToDelete:
        type: array
        items:
          type: string

  ClusterLocalizeRequest:
    type: object
    required:
      - workspaceNamespace
      - workspaceId
      - notebookNames
      - playgroundMode
    properties:
      workspaceNamespace:
        type: string
        description: Workspace namespace from which to source notebooks
      workspaceId:
        type: string
        description: Workspace from which to source notebooks
      notebookNames:
        type: array
        description: >
          Names of notebooks to localize. This is just the basename (no gs://
          needed). This is interpreted as relative to the /notebooks directory
          within the provided workspace's Google Cloud Storage bucket.
        items:
          type: string
      playgroundMode:
        type: boolean
        default: false
        description: Set to true if playgroundMode needed

  ClusterLocalizeResponse:
    type: object
    required:
      - clusterLocalDirectory
    properties:
      clusterLocalDirectory:
        type: string
        description: >
          The directory on the notebook cluster file system where the requested
          files were localized. This is the "API" directory in Jupyter terms,
          which means it is a relative path in the Jupyter user-facing file
          system, e.g. "foo/bar.ipynb".

  UsernameTakenResponse:
    type: object
    required:
      - isTaken
    properties:
      isTaken:
        description: Boolean response to whether username is already taken.
        type: boolean
        default: false
    example:
      isTaken: false

  WorkspaceResponse:
    type: object
    required:
      - workspace
      - accessLevel
    properties:
      workspace:
        $ref: '#/definitions/Workspace'
      accessLevel:
        $ref: '#/definitions/WorkspaceAccessLevel'

  UserListResponse:
    type: object
    required:
      - profileList
    properties:
      profileList:
        type: "array"
        items:
          $ref: "#/definitions/Profile"

  UpdateUserDisabledRequest:
    type: object
    required:
      - email
    properties:
      email:
        type: string
      disabled:
        description: Set to true to disable user in auth domain, false otherwise
        type: boolean
        default: false

  AuditBigQueryResponse:
    type: object
    properties:
      numQueryIssues:
        type: integer
        format: int32
        description: >
          Number of queries issues against the Curated data repository which are
          flagged as possible audit issues. See logs/alerts for details.

  CheckClustersResponse:
    type: object
    properties:
      clusterDeletionCount:
        type: integer
        format: int32
        description: >
          Number of clusters deleted during the check.

  User:
    type: object
    properties:
      email:
        description: researchallofus email address (deprecated in favor of userName)
        type: string
      userName:
        description: Unique researchallofus username (a Google account email)
        type: string
      givenName:
        description: the user's given name (e.g. Alice)
        type: string
      familyName:
        description: the user's family  name (e.g. Jones)
        type: string

  UserResponse:
    type: object
    properties:
      users:
        description: A list of users matching the provided search query.
        type: array
        items:
          $ref: "#/definitions/User"
      nextPageToken:
        description: >
          Pagination token that can be used in a subsequent calls to retrieve more results.
          If not set, there are no more results to retrieve.
        type: string

  RecentResourceResponse:
    type: array
    items:
      $ref: "#/definitions/RecentResource"

  RecentResource:
    type: object
    properties:
      workspaceId:
        type: integer
        format: int64
      workspaceNamespace:
        type: string
      workspaceFirecloudName:
        type: string
      workspaceBillingStatus:
        $ref: '#/definitions/BillingStatus'
      permission:
        type: string
      cohort:
        $ref: "#/definitions/Cohort"
      cohortReview:
        $ref: "#/definitions/CohortReview"
      notebook:
        $ref: '#/definitions/FileDetail'
      conceptSet:
        $ref: '#/definitions/ConceptSet'
      dataSet:
        $ref: '#/definitions/DataSet'
      modifiedTime:
        type: string

  RecentResourceRequest:
    type: object
    properties:
      notebookName:
        type: string

  RecentWorkspace:
    type: object
    properties:
      workspace:
        $ref: '#/definitions/Workspace'
      accessLevel:
        $ref: '#/definitions/WorkspaceAccessLevel'
      accessedTime:
        type: string
        description: The date and time that the workspace was last accessed, in ISO-8601 format

  RecentWorkspaceResponse:
    type: array
    items:
      $ref: "#/definitions/RecentWorkspace"

  NotebookLockingMetadataResponse:
    type: object
    properties:
      lastLockedBy:
        type: string
      lockExpirationTime:
        description: The time when the lock will expire, in ms from the Unix epoch
        type: integer
        format: int64

  BillingStatus:
    type: string
    description: >
      Is the billing account associated with this workspace available to incur costs?  For a free
      tier project, this indicates whether a user has an available balance in their quota.  For a
      user-provided billing account, this corresponds to whether payment is valid and up to date.
    enum: [ ACTIVE, INACTIVE ]

  BillingAccountType:
    type: string
    description: >
      Whether a billing project is provided by the Researcher Workbench as a Free Tier project
      subject to quota checks, or the project has a billing account provided by the user
    enum: [ FREE_TIER, USER_PROVIDED ]

  BillingProjectBufferStatus:
    type: object
    properties:
      bufferSize:
        description: >
          Current size of the billing buffer, i.e. the number of projects ready to be claimed.
        type: integer
        format: int64

  StatusAlert:
    type: object
    properties:
      statusAlertId:
        description: The primary key of the status alert in the database
        type: integer
        format: int64
      title:
        description: >
          Title of the status alert, e.g. 'Service Incident: December 6, 2019'
        type: string
      message:
        description: >
          The actual message of the status alert, e.g. 'AoU RW is down because GCP is down'
        type: string
      link:
        description: >
          A URL linking to an incident report where users can read more
        type: string

  EgressEventRequest:
    type: object
    properties:
      eventsJsonArray:
        type: string
        description: >
          A JSON string containing an array of JSON-encoded egress events. See the EgressEvent
          definition for the expected schema of each event.

  EgressEvent:
    type: object
    properties:
      environment:
        description: The AoU environment in which the high-egress event occurred.
        type: string
        enum:
          - test
          - perf
          - staging
          - stable
          - preprod
          - prod
      time_window_duration:
        description: >
          The duration of the time window during which the high-egress event occurred, in seconds.
        type: integer
        format: int64
      time_window_start:
        description: Beginning of the time window, in milliseconds since Epoch.
        type: integer
        format: int64
      egress_mib:
        description: The amount of egress detected during the window, in mebibytes (MiB).
        type: number
        format: double
      egress_mib_threshold:
        description: The threshold value for which this egress triggered an alert, in mebibytes (MiB).
        type: number
        format: double
      project_name:
        description: >
          The Google Cloud project name associated with the workspace, e.g. aou-rw-6b66533d. Always present.
        type: string
      vm_name:
        description: The name of the Jupyter VM which generated egress, e.g. all-of-us-260-m.
        type: string

  ArrayOfLong:
    type: array
    items:
      type: integer
      format: int64

  OrganizationType:
    type: string
    description: A categorization of institutions derived from CAPS requirements
    enum: [ACADEMIC_RESEARCH_INSTITUTION, INDUSTRY, EDUCATIONAL_INSTITUTION, HEALTH_CENTER_NON_PROFIT, OTHER]

  Institution:
    type: object
    description: Represents an institution which has been approved to validate researchers who wish to use the system
    required:
      - shortName
      - displayName
      - organizationTypeEnum
    properties:
      shortName:
        type: string
      displayName:
        type: string
      organizationTypeEnum:
        $ref: '#/definitions/OrganizationType'
        description: >
          The Organization Type of this institution if it is one of the enumerated
          OrganizationTypes, or OrganizationType.OTHER if it is not
      organizationTypeOtherText:
        type: string
        description: >
          The detailed Organization Type of this institution, as text,
          if its enumerated type is OTHER
      emailAddresses:
        type: array
        description: A list of email addresses which can be validated as members of this Institution
        items:
          type: string
      emailDomains:
        type: array
        description: A list of email domains which can be validated as members of this Institution
        items:
          type: string

  GetInstitutionsResponse:
    type: object
    required:
      - institutions
    properties:
      institutions:
        type: "array"
        items:
          $ref: "#/definitions/Institution"
