# This file is for endpoints we do NOT intend to generate client libraries for
# and advertise to notebook developers. Endpoints we DO want notebook developers to use should
# go in client_api.yaml.

# This file references parameters, paths, and definitions specified in
# client_api.yaml; the two files get merged together into a merged.yaml file at build time.

# If validation fails, gradle:generateApi fails claiming this file does not exist.
# For separate validation (with some false positives), do:
#     ./project.rb validate-swagger
swagger: '2.0'
info:
  version: "0.1.0"
  title: "AllOfUs Workbench API"
  description: "The API for the AllOfUs workbench."
  termsOfService: "http://www.pmi-ops.org/terms_of_service.html"
  contact:
    name: "developer_help@pmi-ops.org"
  license:
    name: "MIT"
host: "api.pmi-ops.org"
securityDefinitions:
  # Establish the fact that *some endpoints* are OAuth protected
  # by defining an `aou_oauth` security mode, which we'll assing
  # to any protected endpoints below.
  aou_oauth:
    # TODO: Vet/fix this token and/or authorization URL to work in practice.
    # These are currently included simply to satisfy the Swagger specification,
    # as this is not directly used to dictate oauth details (just used to
    # annotate which methods require oauth).
    authorizationUrl: ""
    tokenUrl: ""
    type: oauth2
    flow: accessCode
schemes:
  - "https"
produces:
  - "application/json"
# Establish the fact that all endpoints are protected: this annotation
# ensures that client libraries know to send bearer tokens when calling
security:
  - aou_oauth: []

# Throughout, we use integer/int64 in preference to string/date-time because Swagger's
# date formatting is inconsistent between server and client. Time values are stored as
# milliseconds since the UNIX epoch.

##########################################################################################
## PATHS
##########################################################################################

## Common Path Parameters
parameters:
  userId:
    in: path
    name: userId
    type: integer
    format: int64
    required: true

paths:

  /v1/status:
    get:
      tags:
        - status
      description: Returns the status of the various services and integrations
      operationId: getStatus
      security: []
      responses:
        200:
          description: A map of system name to status.
          schema:
            $ref: "#/definitions/StatusResponse"


  /v1/config:
    get:
      tags:
        - config
      description: Returns some server configuration data.
      operationId: getConfig
      security: []
      responses:
        200:
          description: Configuration data
          schema:
            $ref: "#/definitions/ConfigResponse"


   # User methods ########################################################################

  /v1/me:
    get:
      tags:
        - profile
      description: Returns the user's profile information
      operationId: getMe
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"

  /v1/sendBugReport:
    post:
      tags:
        - bugReport
      description: Sends an email to developers about a user reported bug
      operationId: sendBugReport
      # TODO(dmohs): security: []
      parameters:
        - in: body
          name: bugReport
          description: user reported bug
          required: true
          schema:
            $ref: "#/definitions/BugReport"
      responses:
        200:
          description: Success message
          schema:
            $ref: "#/definitions/BugReport"

  # TODO(dmohs): If the username is not present in the query string, this responds with 500 Server
  # Error. It should respond with 400 Bad Request.
  /v1/is-username-taken:
    get:
      tags:
        - profile
      description: Checks to see if the given username is not available.
      operationId: isUsernameTaken
      security: []
      parameters:
        - in: query
          name: username
          type: string
          required: true
      responses:
        200:
          description: The answer.
          schema:
            $ref: "#/definitions/UsernameTakenResponse"

  /v1/is-contact-email-taken:
    get:
      tags:
        - profile
      description: Checks to see if the given contact email is not available.
      operationId: isContactEmailTaken
      security: []
      parameters:
        - in: query
          name: contactEmail
          type: string
          required: true
      responses:
        200:
          description: The answer.
          schema:
            $ref: "#/definitions/ContactEmailTakenResponse"

  /v1/invitation-key-verification:
    post:
      tags:
        - profile
      description: Verifies invitation key.
      operationId: invitationKeyVerification
      security: []
      parameters:
        - in: body
          name: invitationVerificationRequest
          schema:
            $ref: "#/definitions/InvitationVerificationRequest"
      responses:
        200:
          description: Invitation Key verified.
        400:
          description: Error occurred while verifying Invitation Key.
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/request-invitation-key:
    post:
      tags:
        - profile
      description: Sends support a request for the invitation key.
      operationId: requestInvitationKey
      security: []
      parameters:
        - in: query
          name: contactEmail
          type: string
      responses:
        200:
          description: Request received

  /v1/google-account:
    post:
      tags:
        - profile
      description: Creates an account in the researchallofus.org domain.
      operationId: createAccount
      security: []
      parameters:
        - in: body
          name: createAccountRequest
          schema:
            $ref: "#/definitions/CreateAccountRequest"
      responses:
        201:
          description: Account created successfully.
          schema:
            $ref: "#/definitions/Profile"
        400:
          description: Error occurred while creating account.
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/id-verification:
    post:
      tags:
        - profile
      description: Request identity verification.
      operationId: submitIdVerification
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"

  /v1/update-profile:
    post:
      tags:
        - profile
      description: Updates a users profile
      operationId: updateProfile
      parameters:
        - in: body
          name: updatedProfile
          description: the new profile to use
          schema:
            $ref: "#/definitions/Profile"
      responses:
        204:
          description: Request received.
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"

  # TODO: add signature / other state?
  /v1/account/accept-terms-of-service:
    post:
      tags:
        - profile
      description: Submits consent to the terms of service for researchers.
      operationId: submitTermsOfService
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"

  # TODO: add other state pertaining to ethics training?
  /v1/account/complete-ethics-training:
    post:
      tags:
        - profile
      description: Completes ethics training.
      operationId: completeEthicsTraining
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"

  # TODO: add demographic survey response data
  /v1/account/submit-demographic-survey:
    post:
      tags:
        - profile
      description: Submits demographic survey responses.
      operationId: submitDemographicsSurvey
      responses:
        200:
          description: The user's profile.
          schema:
            $ref: "#/definitions/Profile"

  /v1/auth-domain/{groupName}:
    post:
      tags:
        - authDomain
      description: This endpoint will create the registered auth domain.
      operationId: "createAuthDomain"
      parameters:
        - in: path
          name: groupName
          description: groupName
          required: true
          type: string
      responses:
        200:
          description: Successfully created group
          schema:
            $ref: "#/definitions/EmptyResponse"

  /v1/auth-domain/{groupName}/users:
    post:
      tags:
        - authDomain
      responses:
        204:
          description: Successfully Added User To Group
        403:
          description: You must be an admin of this group in order to remove members
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - in: path
          name: groupName
          required: true
          type: string
        - in: body
          name: request
          description: request carrying user email to add
          schema:
            $ref: "#/definitions/AuthDomainRequest"
      summary: add a user to an auth domain if you have manage groups permission
      operationId: addUserToAuthDomain
    delete:
      responses:
        204:
          description: Successfully Removed User From Group
        403:
          description: You must be an admin of this group in order to remove members
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - in: path
          name: groupName
          required: true
          type: string
        - in: body
          name: request
          description: request carrying user email to add
          schema:
            $ref: "#/definitions/AuthDomainRequest"
      tags:
        - authDomain
      summary: remove a user from an auth domain if you have manage groups permission
      operationId: removeUserFromAuthDomain

  # Notebook clusters ####################################################################

  /v1/clusters:
    get:
      summary: List available notebook clusters
      description: >
        Returns the clusters available to the current user. Currently there is a
        single default cluster supported per researcher and this cluster should
        always either exist or be in the process of being initialized. In a
        future where researchers have more control over cluster creation, this
        endpoint would be extended to return all clusters.
      operationId: listClusters
      tags:
        - cluster
      responses:
        200:
          description: Available clusters
          schema:
            $ref: '#/definitions/ClusterListResponse'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/clusters/{clusterNamespace}/{clusterName}/localize:
    post:
      summary: >
        Localize files from a workspace to notebook cluster. As a side-effect,
        JSON workspace environment files will also be localized to the cluster.
      description: Localize notebook files to the corresponding notebook cluster.
      operationId: localize
      tags:
        - cluster
      parameters:
      - in: path
        name: clusterNamespace
        description: clusterNamespace
        required: true
        type: string
      - in: path
        name: clusterName
        description: clusterName
        required: true
        type: string
      - in: body
        name: body
        description: Localization request.
        schema:
          $ref: '#/definitions/ClusterLocalizeRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ClusterLocalizeResponse'
        404:
          description: Cluster or Workspace not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  # Billing projects #####################################################################

  /v1/billingProjects:
    get:
      tags:
        - Profile
      operationId: getBillingProjects
      summary: List billing projects for a user
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillingProjectMembership'
        404:
          description: User Not Found
        500:
          description: Internal Server Error

  # Workspaces ###########################################################################

  /v1/workspaces:
    get:
      tags:
        - workspaces
      description: Returns all workspaces that a user has access to
      operationId: getWorkspaces
      responses:
        200:
          description: A list of workspace definitions.
          schema:
            $ref: "#/definitions/WorkspaceResponseListResponse"
    post:
      tags:
        - workspaces
      description: Creates a workspace
      operationId: createWorkspace
      parameters:
        - in: body
          name: workspace
          description: workspace definition
          schema:
            $ref: "#/definitions/Workspace"
      responses:
        200:
          description: The workspace that was created.
          schema:
            $ref: "#/definitions/Workspace"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    get:
      tags:
        - workspaces
      description: Returns the workspace definition with the specified ID and namespace
      operationId: getWorkspace
      responses:
        200:
          description: A workspace response containing workspace and access level
          schema:
            $ref: "#/definitions/WorkspaceResponse"
    patch:
      tags:
        - workspaces
      description: >
        Modifies the workspace definition with the specified ID and namespace;
        fields that are omitted will not be modified
      operationId: updateWorkspace
      parameters:
        - in: body
          name: workspace
          description: workspace definition
          schema:
            $ref: "#/definitions/UpdateWorkspaceRequest"
      responses:
        200:
          description: The updated workspace definition
          schema:
            $ref: "#/definitions/Workspace"
    delete:
      tags:
        - workspaces
      description: Deletes the workspace definition with the specified ID and namespace
      operationId: deleteWorkspace
      responses:
        202:
          description: Workspace deletion request accepted
          schema:

            $ref: '#/definitions/EmptyResponse'

  /v1/admin/workspaces/review:
    get:
      tags:
        - workspaces
      description: >
          Returns workspaces that need research purpose review. Requires
          REVIEW_RESEARCH_PURPOSE authority.
      operationId: getWorkspacesForReview
      responses:
        200:
          description: A list of workspaces
          schema:
            $ref: "#/definitions/WorkspaceListResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/notebook-list:
    get:
      summary: Get details of Python files from google Bucket directory notebook
      description: >
        Returns list of name and path of python files from google bucket,
        directory notebook.
      operationId: getNoteBookList
      tags:
        - workspaces
      parameters:
        - in: path
          name: workspaceNamespace
          description: workspaceNamespace
          required: true
          type: string
        - in: path
          name: workspaceId
          description: workspaceId
          required: true
          type: string
      responses:
        200:
          description: List of files
          schema:
            type: array
            items:
              $ref: '#/definitions/FileDetail'
        404:
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/admin/users/id-verification/list:
    get:
      tags:
        - profile
      description: >
          Returns a list of profiles for users to be reviewed. Requires
          REVIEW_ID_VERIFICATION authority.
      operationId: getIdVerificationsForReview
      responses:
        200:
          description: A list of users to be id verified
          schema:
            $ref: "#/definitions/IdVerificationListResponse"
        403:
          description: User doesn't have the REVIEW_ID_VERIFICATION authority
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/admin/users/id-verification/{userId}/review:
    parameters:
      - $ref: '#/parameters/userId'
    post:
      tags:
        - profile
      description: >
          Manually sets the ID verfication status for a user. Requires
          REVIEW_ID_VERIFICATION authority.
      operationId: reviewIdVerification
      parameters:
        - in: body
          name: review
          schema:
            $ref: "#/definitions/IdVerificationReviewRequest"
      responses:
        200:
          description: return updated list of profiles
          schema:
            $ref: "#/definitions/IdVerificationListResponse"

  /v1/admin/workspaces/{workspaceNamespace}/{workspaceId}/review:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - workspaces
      description: Sets a research purpose review result.
      operationId: reviewWorkspace
      parameters:
        - in: body
          name: review
          description: result of the research purpose review
          schema:
            $ref: "#/definitions/ResearchPurposeReviewRequest"
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/EmptyResponse"

  # Note: all requests tagged as "cron" must have the header X-Appengine-Cron:
  # true, which app engine itself only sets when invoking as a cronjob.
  # See https://cloud.google.com/appengine/docs/standard/java/config/cron#securing_urls_for_cron

  /v1/cron/auditBigQuery:
    get:
      security: []
      tags:
        - audit
        - cron
      description: >
        Endpoint meant to be called offline to trigger BigQuery auditing; may be
        slow to execute. Only executable via App Engine cronjob.
      operationId: auditBigQuery
      responses:
        200:
          description: Audit was successful.
          schema:
            $ref: "#/definitions/AuditBigQueryResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/share:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - workspaces
      description: Shares a workspace with users
      operationId: shareWorkspace
      parameters:
          - in: body
            name: body
            description: users to share the workspace with
            schema:
              $ref: "#/definitions/ShareWorkspaceRequest"
      responses:
        200:
          description: Successful share response
          schema:
            $ref: "#/definitions/ShareWorkspaceResponse"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/clone:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    post:
      tags:
        - workspaces
      description: >
        Clone an existing workspace, with given modifications to workspace metadata. Caller will own
        the newly cloned workspace, and must have read access to the source workspace. In
        addition to workspace metadata, the following will also be cloned:
          - the associated Firecloud workspace
          - cohorts, along with reviews and annotations
          - notebooks located in the default notebook directory for this workspace
      operationId: cloneWorkspace
      parameters:
          - in: body
            name: body
            schema:
              $ref: "#/definitions/CloneWorkspaceRequest"
      responses:
        200:
          description: Successful clone response
          schema:
            $ref: "#/definitions/CloneWorkspaceResponse"

  # Cohorts ##############################################################################

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/cohorts:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
    get:
      tags:
        - cohorts
      description: Returns all cohort definitions in a workspace
      operationId: "getCohortsInWorkspace"
      responses:
        200:
          description: A list of cohort definitions.
          schema:
            $ref: "#/definitions/CohortListResponse"
    post:
      tags:
        - cohorts
      description: Creates a cohort definition in a workspace.
      operationId: "createCohort"
      parameters:
        - in: body
          name: cohort
          description: cohort definition
          schema:
            $ref: "#/definitions/Cohort"
      responses:
        200:
          description: The cohort definition that was created.
          schema:
            $ref: "#/definitions/Cohort"

  /v1/workspaces/{workspaceNamespace}/{workspaceId}/cohorts/{cohortId}:
    parameters:
      - $ref: '#/parameters/workspaceNamespace'
      - $ref: '#/parameters/workspaceId'
      - $ref: '#/parameters/cohortId'
    get:
      tags:
        - cohorts
      description: Returns the cohort definition with the specified ID
      operationId: "getCohort"
      responses:
        200:
          description: A cohort definition
          schema:
            $ref: "#/definitions/Cohort"
    patch:
      tags:
        - cohorts
      description: >
        Modifies the cohort definition with the specified ID; fields that are omitted
        will not be modified
      operationId: "updateCohort"
      parameters:
        - in: body
          name: cohort
          description: cohort definition
          schema:
            $ref: "#/definitions/Cohort"
      responses:
        200:
          description: The updated cohort definition
          schema:
            $ref: "#/definitions/Cohort"
    delete:
      tags:
        - cohorts
      description: Deletes the cohort definition with the specified ID
      operationId: "deleteCohort"
      responses:
        202:
          description: ACCEPTED
          schema:
            $ref: '#/definitions/EmptyResponse'

##########################################################################################
## DEFINITIONS
##########################################################################################
definitions:

  StatusResponse:
    type: object
    required:
      - firecloudStatus
      - notebooksStatus
    properties:
      firecloudStatus:
        type: boolean
      notebooksStatus:
        type: boolean

  ConfigResponse:
    type: object
    required:
      - gsuiteDomain
    properties:
      # This should be gSuiteDomain, but the Swagger-Codegen-generated server code causes the JSON
      # response to have the keys "gsuiteDomain" and "gSuiteDomain". This weirdness is a workaround.
      gsuiteDomain:
        type: string
        description: G-Suite domain containing user accounts.
      projectId:
        type: string
        description: The cloud project in which this app is running.
      publicApiKeyForErrorReports:
        type: string
        description: |
          Stackdriver API key for error reporting, scoped to a particular
          domain. If unset, Stackdriver error reporting should be disabled.

  # Mirrors BillingProjectMembership from fireCloud.yaml
  BillingProjectMembership:
    description: ''
    required:
      - projectName
      - role
      - status
    type: object
    properties:
      projectName:
        type: string
        description: the name of the project
      role:
        type: string
        description: the role of the current user in the project
      status:
        $ref: "#/definitions/BillingProjectStatus"

  BillingProjectStatus:
    type: string
    description: >
      Initialization status of a Firecloud billing project for use with Workbench.
    enum: &BILLING_PROJECT_STATUS [none, pending, ready, error]

  DataAccessLevel:
    type: string
    description: levels of access to data in the curated data repository
    enum: &DATA_ACCESS_LEVEL [unregistered, registered, protected, revoked]

  EmailVerificationStatus:
    type: string
    description: stage of email verification
    enum: &EMAIL_VERIFICATION_STATUS [unverified, pending, subscribed]

  EmptyResponse:
    type: object
    properties:
      additionalInfo:
        type: string

  VerifyEmailRequest:
    type: object
    properties:
      emailToVerify:
        type: string
      username:
        type: string

  Authority:
    type: string
    description: actions a user can have authority/permission to perform
    enum: [
        # Note: Swagger trims any common prefix from enum values' corresponding
        # Java fields by default; this has no side-effect currently as there is
        # no common prefix. https://github.com/swagger-api/swagger-codegen/issues/4261
        REVIEW_RESEARCH_PURPOSE,
        MANAGE_GROUP,
        REVIEW_ID_VERIFICATION
    ]

  WorkspaceListResponse:
    type: object
    required:
     - items
    properties:
      items:
        type: "array"
        items:
           $ref: "#/definitions/Workspace"

  WorkspaceResponseListResponse:
    type: object
    required:
     - items
    properties:
      items:
        type: "array"
        items:
           $ref: "#/definitions/WorkspaceResponse"

  Workspace:
    type: object
    required:
     - name
    properties:
      id:
        type: string
      etag:
        type: string
        description: >
          Entity tag for optimistic concurrency control. To be set during a
          read-modify-write to ensure that the client has not attempted to
          modify a changed resource.
      name:
        type: string
      namespace:
        type: string
      description:
        type: string
      cdrVersionId:
        type: string
      creator:
        type: string
      googleBucketName:
        type: string
      dataAccessLevel:
        $ref: "#/definitions/DataAccessLevel"
      researchPurpose:
        $ref: "#/definitions/ResearchPurpose"
      creationTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      userRoles:
        type: "array"
        items:
           $ref: "#/definitions/UserRole"

  UserRole:
    type: object
    required:
      - email
      - role
    properties:
      email:
        type: string
      role:
        $ref: "#/definitions/WorkspaceAccessLevel"

  ShareWorkspaceRequest:
    type: object
    required:
     - items
    properties:
      workspaceEtag:
        type: string
        description: >
          Associated workspace etag retrieved via reading the workspaces API. If provided,
          validates that the workspace (and its user roles) has not been modified since this
          etag was retrieved.
      items:
        type: "array"
        items:
           $ref: "#/definitions/UserRole"

  ShareWorkspaceResponse:
    type: object
    properties:
      workspaceEtag:
        type: string
        description: >
          Updated workspace etag after the share request has been applied.

  CloneWorkspaceRequest:
    type: object
    required:
     - workspace
    properties:
      workspace:
        $ref: "#/definitions/Workspace"
        description: >
          Workspace metadata to be applied to the cloned workspace upon creation. The following
          workspace fields are accepted:
            - name (required)
            - namespace (required)
            - researchPurpose (required)
            - description: defaults to the cloned workspace description

          All other fields will be ignored and are generated server-side or are copied from the
          cloned workspace.

  CloneWorkspaceResponse:
    type: object
    properties:
      workspace:
        $ref: "#/definitions/Workspace"
        description: The newly created workspace clone.

  UpdateWorkspaceRequest:
    type: object
    required:
     - workspace
    properties:
      workspace:
        $ref: "#/definitions/Workspace"

  WorkspaceAccessLevel:
    type: string
    description: levels of access to workspace, NO ACCESS is akin to removing a user from a workspace ACL
    enum: [NO ACCESS, READER, WRITER, OWNER]

  ResearchPurpose:
    type: object
    required:
     - diseaseFocusedResearch
     - methodsDevelopment
     - controlSet
     - aggregateAnalysis
     - ancestry
     - commercialPurpose
     - population
     - reviewRequested
     - underservedPopulation
    properties:
      diseaseFocusedResearch:
        type: boolean
        default: false
      diseaseOfFocus:
        type: string
      methodsDevelopment:
        type: boolean
        default: false
      controlSet:
        type: boolean
        default: false
      aggregateAnalysis:
        type: boolean
        default: false
      ancestry:
        type: boolean
        default: false
      commercialPurpose:
        type: boolean
        default: false
      population:
        type: boolean
        default: false
      populationOfFocus:
        type: string
      reviewRequested:
        type: boolean
        default: false
      containsUnderservedPopulation:
        type: boolean
        default: false
      underservedPopulationDetails:
        type: array
        items:
          $ref: "#/definitions/underservedPopulationEnum"
      timeRequested:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      approved:
        type: boolean
      timeReviewed:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      additionalNotes:
        type: string

  underservedPopulationEnum:
    type: string
    description: Short parsable descriptions of underserved populations
    enum: [
      RACE_AMERICAN_INDIAN_OR_ALASKA_NATIVE,
      RACE_ASIAN,
      RACE_BLACK_AFRICAN_OR_AFRICAN_AMERICAN,
      RACE_HISPANIC_OR_LATINO,
      RACE_MIDDLE_EASTERN_OR_NORTH_AFRICAN,
      RACE_NATIVE_HAWAIIAN_OR_PACIFIC_ISLANDER,
      RACE_MORE_THAN_ONE_RACE,
      AGE_CHILDREN,
      AGE_ADOLESCENTS,
      AGE_OLDER_ADULTS,
      AGE_ELDERLY,
      SEX_FEMALE,
      SEX_INTERSEX,
      SEXUAL_ORIENTATION_GAY,
      SEXUAL_ORIENTATION_LESBIAN,
      SEXUAL_ORIENTATION_BISEXUAL,
      SEXUAL_ORIENTATION_POLYSEXUAL_OMNISEXUAL_SAPIOSEXUAL_OR_PANSEXUAL,
      SEXUAL_ORIENTATION_ASEXUAL,
      SEXUAL_ORIENTATION_TWO_SPIRIT,
      SEXUAL_ORIENTATION_FIGURING_OUT_SEXUALITY,
      SEXUAL_ORIENTATION_MOSTLY_STRAIGHT,
      SEXUAL_ORIENTATION_DOES_NOT_THINK_OF_HAVING_SEXUALITY,
      SEXUAL_ORIENTATION_DOES_NOT_USE_LABELS,
      SEXUAL_ORIENTATION_DOES_NOT_KNOW_ANSWER,
      GENDER_IDENTITY_WOMAN,
      GENDER_IDENTITY_NON_BINARY,
      GENDER_IDENTITY_TRANSMAN,
      GENDER_IDENTITY_TRANSWOMAN,
      GENDER_IDENTITY_GENDERQUEER,
      GENDER_IDENTITY_GENDERFLUID,
      GENDER_IDENTITY_GENDER_VARIANT,
      GENDER_IDENTITY_QUESTIONING,
      GEOGRAPHY_URBAN_CLUSTERS,
      GEOGRAPHY_RURAL,
      DISABILITY_PHYSICAL,
      DISABILITY_MENTAL,
      ACCESS_TO_CARE_NOT_PAST_TWELVE_MONTHS,
      ACCESS_TO_CARE_CANNOT_OBTAIN_OR_PAY_FOR,
      EDUCATION_INCOME_LESS_THAN_HIGH_SCHOOL_GRADUATE,
      EDUCATION_INCOME_LESS_THAN_TWENTY_FIVE_THOUSAND_FOR_FOUR_PEOPLE
    ]

  ResearchPurposeReviewRequest:
    description: Approve or reject a workspace's research purpose.
    type: object
    required:
      - approved
    properties:
      approved:
        type: boolean

  IdVerificationReviewRequest:
    type: object
    required:
      - newStatus
    properties:
      newStatus:
        $ref: "#/definitions/BlockscoreIdVerificationStatus"

  CohortListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: "array"
        items:
           $ref: "#/definitions/Cohort"

  Cohort:
    type: object
    required:
      - name
      - criteria
      - type
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: string
        description: >
          Entity tag for optimistic concurrency control. To be set during a
          read-modify-write to ensure that the client has not attempted to
          modify a changed resource.
      name:
        type: string
      criteria:
        description: >
          Internal representation of the cohort definition. Clients should not depend directly
          on this, but instead call client functions to issue a SQL query for the cohort.
        type: string
      type:
        type: string
      description:
        type: string
      creator:
        type: string
      creationTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.

  CreateAccountRequest:
    type: object
    required:
      - password
    properties:
      profile:
        $ref: '#/definitions/Profile'
      password:
        type: string
      invitationKey:
        type: string

  InvitationVerificationRequest:
    type: object
    required:
      - invitationKey
    properties:
      invitationKey:
        type: string
        description: Invitation key for verification

  BugReport:
    type: object
    required:
      - shortDescription
      - reproSteps
      - contactEmail
    properties:
      shortDescription:
        description: A short description of the bug
        type: string
      reproSteps:
        description: Steps to reproduce the bug
        type: string
      contactEmail:
        description: The email with which to contact the bug reporter.
        type: string

  Profile:
    type: object
    required:
      - username
      - enabledInFireCloud
      - dataAccessLevel
    properties:
      userId:
        description: researchallofus userId
        type: integer
        format: int64
      username:
        description: researchallofus username
        type: string
      contactEmail:
        description: email address that can be used to contact the user
        type: string
      firstSignInTime:
        type: integer
        format: int64
      enabledInFireCloud:
        description: true if the user is enabled in FireCloud, false if they are not
        type: boolean
      freeTierBillingProjectName:
        description: name of the AllOfUs free tier billing project created for this user
        type: string
      freeTierBillingProjectStatus:
        description: >
          the initialization status of the free tier billing project, some
          workbench functionality may not work fully with this project until it
          is fully initialized
        $ref: "#/definitions/BillingProjectStatus"
      dataAccessLevel:
        description: what level of data access the user has
        $ref: "#/definitions/DataAccessLevel"
      givenName:
        description: the user's given name (e.g. Alice)
        type: string
      familyName:
        description: the user's family  name (e.g. Jones)
        type: string
      phoneNumber:
        description: the user's phone number
        type: string
      authorities:
        description: authorities granted to this user
        type: "array"
        items:
          $ref: "#/definitions/Authority"
      blockscoreIdVerificationStatus:
        $ref: "#/definitions/BlockscoreIdVerificationStatus"
        description: Status of ID verification
      termsOfServiceCompletionTime:
        type: integer
        format: int64
        description: Timestamp when the user consented to terms of service in milliseconds since the UNIX epoch.
      ethicsTrainingCompletionTime:
        type: integer
        format: int64
        description: Timestamp when the user completed ethics training in milliseconds since the UNIX epoch.
      demographicSurveyCompletionTime:
        type: integer
        format: int64
        description: Timestamp when the user completed a demographic survey in milliseconds since the UNIX epoch.
      disabled:
        type: boolean
      emailVerificationStatus:
        $ref: "#/definitions/EmailVerificationStatus"
      aboutYou:
        type: string
      areaOfResearch:
        type: string
      institutionalAffiliations:
        type: "array"
        items:
          $ref: "#/definitions/InstitutionalAffiliation"
      requestedIdVerification:
        type: boolean

  InstitutionalAffiliation:
    type: object
    required:
      - institution
      - role
    properties:
      institution:
        type: string
      role:
        type: string

  ErrorCode:
    type: string
    description: Short parsable error descriptions
    enum: [
      PARSE_ERROR,
      USER_DISABLED
    ]

  ErrorResponse:
    type: object
    properties:
      message:
        description: General error message for the response.
        type: string
      statusCode:
        type: integer
        description: HTTP status code
      errorClassName:
        type: string
      errorCode:
        description: Short description of the type of error
        $ref: "#/definitions/ErrorCode"
      # TODO: add list of field-level error messages with field names.

  IdVerificationRequest:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      streetLine1:
        type: string
      streetLine2:
        type: string
      city:
        type: string
      state:
        type: string
      zip:
        type: string
      dob:
        type: string
      documentType:
        description: https://docs.blockscore.com/v4/curl/#documents
        type: string
      documentNumber:
        description: https://docs.blockscore.com/v4/curl/#documents
        type: string
    required:
      - firstName
      - lastName
      - addressLine1
      - city
      - state
      - zip
      - dob
      - documentType
      - documentNumber

  BlockscoreIdVerificationStatus:
    type: string
    description: possible values indicating whether the user's ID has been verified
    enum: [UNVERIFIED, VERIFIED, REJECTED]

  StackTraceElement:
    description: ''
    required:
      - className
      - methodName
      - fileName
      - lineNumber
    properties:
      className:
        type: string
        description: class name
      methodName:
        type: string
        description: method name
      fileName:
        type: string
        description: source file name
      lineNumber:
        type: integer
        description: line number

  ClusterStatus:
    type: string
    description: The status for a Firecloud notebook cluster.
    enum: [CREATING, RUNNING, ERROR]

  Cluster:
    description: A Firecloud notebook cluster.
    required:
      - clusterName
      - clusterNamespace
      - status
    properties:
      clusterName:
        type: string
        description: The user-supplied name for the cluster
      clusterNamespace:
        type: string
        description: The Google Project used to create the cluster
      status:
        $ref: "#/definitions/ClusterStatus"
      createdDate:
        type: string
        description: The date and time the cluster was created, in ISO-8601 format

  FileDetail:
    type: object
    required:
      - name
      - path
    properties:
      name:
        type: string
        description: File Name
      path:
        type: string
        description: The path is in format of gs://bucket-name/name

  ClusterListResponse:
    type: object
    required:
      - defaultCluster
    properties:
      defaultCluster:
        $ref: "#/definitions/Cluster"

  ClusterLocalizeRequest:
    type: object
    required:
      - workspaceNamespace
      - workspaceId
      - notebookNames
    properties:
      workspaceNamespace:
        type: string
        description: Workspace namespace from which to source notebooks
      workspaceId:
        type: string
        description: Workspace from which to source notebooks
      notebookNames:
        type: array
        description: >
          Names of notebooks to localize. This is just the basename (no gs://
          needed). This is interpreted as relative to the /notebooks directory
          within the provided workspace's Google Cloud Storage bucket.
        items:
          type: string

  ClusterLocalizeResponse:
    type: object
    required:
      - clusterLocalDirectory
    properties:
      clusterLocalDirectory:
        type: string
        description: >
          The directory on the notebook cluster file system where the requested
          files were localized. This is the "API" directory in Jupyter terms,
          which means it is a relative path in the Jupyter user-facing file
          system, e.g. "foo/bar.ipynb".

  UsernameTakenResponse:
    type: object
    required:
      - isTaken
    properties:
      isTaken:
        description: Boolean response to whether username is already taken.
        type: boolean
    example:
      isTaken: false

  ContactEmailTakenResponse:
    type: object
    required:
      - isTaken
    properties:
      isTaken:
        description: Boolean response to whether contact email is already taken.
        type: boolean
    example:
      isTaken: false

  WorkspaceResponse:
    type: object
    required:
      - workspace
      - accessLevel
    properties:
      workspace:
        $ref: '#/definitions/Workspace'
      accessLevel:
        $ref: '#/definitions/WorkspaceAccessLevel'

  IdVerificationListResponse:
    type: object
    required:
      - profileList
    properties:
      profileList:
        type: "array"
        items:
          $ref: "#/definitions/Profile"

  AuthDomainRequest:
    type: object
    required:
      - email
    properties:
      email:
        type: string

  AuditBigQueryResponse:
    type: object
    properties:
      numQueryIssues:
        type: integer
        format: int32
        description: >
          Number of queries issues against the Curated data repository which are
          flagged as possible audit issues. See logs/alerts for details.
