define([
  'base/js/namespace',
  'nbextensions/snippets_menu/main'
], (Jupyter, snippets_menu) => {
  // Jupyter UI extension to customize the "Snippets Menu" extension with AoU
  // specific code snippets. See
  // https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/snippets_menu/readme.html
  const load = () => {
    const pyMenu = {{PY_MENU_JSON}};
    const rMenu = {{R_MENU_JSON}};

    const kernelName = Jupyter.notebook.session.kernel_model.name;

    // Show the menu which is relevant to the current kernel. Show both as a fallback.
    let customMenus = [pyMenu, rMenu];
    if (kernelName.startsWith("python")) {
      customMenus = [pyMenu];
    } else if (kernelName === "ir") {
      customMenus = [rMenu];
    }
    snippets_menu.options['menus'] = snippets_menu.default_menus;
    snippets_menu.options['menus'][0]['sub-menu'].splice(0, 0, ...customMenus);

    // Include custom menu content from the nbconfigurator UI extension, if any.
    // We primarily expect this to be used for manual testing of
    // workbench-snippets code, so prefix it to differentiate from the menus
    // installed by this extension.
    const snippetsConfig = Jupyter.notebook.config.data.snippets || {};
    if (snippetsConfig.include_custom_menu) {
      const customExtMenu = JSON.parse(snippetsConfig.custom_menu_content);
      customExtMenu['name'] = '[Custom] ' + customExtMenu['name'];
      snippets_menu.options['menus'][0]['sub-menu'].splice(0, 0, customExtMenu);
    }

    console.log('loaded custom AoU snippet-menus');
  };

  return {
    'load_ipython_extension': load
  };
});
