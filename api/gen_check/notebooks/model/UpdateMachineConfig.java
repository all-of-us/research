/*
 * Leonardo
 * Workbench notebooks service. 
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.pmiops.workbench.notebooks.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * The configuration for a single Dataproc cluster
 */
@ApiModel(description = "The configuration for a single Dataproc cluster")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-05T14:05:00.794-05:00")
public class UpdateMachineConfig implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("numberOfWorkers")
  private Integer numberOfWorkers = null;

  @SerializedName("numberOfPreemptibleWorkers")
  private Integer numberOfPreemptibleWorkers = null;

  @SerializedName("masterMachineType")
  private String masterMachineType = null;

  @SerializedName("masterDiskSize")
  private Integer masterDiskSize = null;

  public UpdateMachineConfig numberOfWorkers(Integer numberOfWorkers) {
    this.numberOfWorkers = numberOfWorkers;
    return this;
  }

   /**
   * Optional, number of workers in the cluster. Can be 0 (default), 2 or more. Google Dataproc does not allow 1 worker. 
   * @return numberOfWorkers
  **/
  @ApiModelProperty(value = "Optional, number of workers in the cluster. Can be 0 (default), 2 or more. Google Dataproc does not allow 1 worker. ")
  public Integer getNumberOfWorkers() {
    return numberOfWorkers;
  }

  public void setNumberOfWorkers(Integer numberOfWorkers) {
    this.numberOfWorkers = numberOfWorkers;
  }

  public UpdateMachineConfig numberOfPreemptibleWorkers(Integer numberOfPreemptibleWorkers) {
    this.numberOfPreemptibleWorkers = numberOfPreemptibleWorkers;
    return this;
  }

   /**
   * Optional, the number of preemptible workers. If unspecified, the default number is 0. Ignored if numberOfWorkers is 0. For more information, see https://cloud.google.com/compute/docs/instances/preemptible 
   * @return numberOfPreemptibleWorkers
  **/
  @ApiModelProperty(value = "Optional, the number of preemptible workers. If unspecified, the default number is 0. Ignored if numberOfWorkers is 0. For more information, see https://cloud.google.com/compute/docs/instances/preemptible ")
  public Integer getNumberOfPreemptibleWorkers() {
    return numberOfPreemptibleWorkers;
  }

  public void setNumberOfPreemptibleWorkers(Integer numberOfPreemptibleWorkers) {
    this.numberOfPreemptibleWorkers = numberOfPreemptibleWorkers;
  }

  public UpdateMachineConfig masterMachineType(String masterMachineType) {
    this.masterMachineType = masterMachineType;
    return this;
  }

   /**
   * Optional, the machine type determines the number of CPUs and memory for the master node. For example \&quot;n1-standard-16\&quot; or \&quot;n1-highmem-64\&quot;. To decide which is right for you, see https://cloud.google.com/compute/docs/machine-types 
   * @return masterMachineType
  **/
  @ApiModelProperty(value = "Optional, the machine type determines the number of CPUs and memory for the master node. For example \"n1-standard-16\" or \"n1-highmem-64\". To decide which is right for you, see https://cloud.google.com/compute/docs/machine-types ")
  public String getMasterMachineType() {
    return masterMachineType;
  }

  public void setMasterMachineType(String masterMachineType) {
    this.masterMachineType = masterMachineType;
  }

  public UpdateMachineConfig masterDiskSize(Integer masterDiskSize) {
    this.masterDiskSize = masterDiskSize;
    return this;
  }

   /**
   * Optional, the size in gigabytes of the disk on the master node. Minimum size is 10GB. Note: disk size cannot be decreased in an update request, only increased. 
   * @return masterDiskSize
  **/
  @ApiModelProperty(value = "Optional, the size in gigabytes of the disk on the master node. Minimum size is 10GB. Note: disk size cannot be decreased in an update request, only increased. ")
  public Integer getMasterDiskSize() {
    return masterDiskSize;
  }

  public void setMasterDiskSize(Integer masterDiskSize) {
    this.masterDiskSize = masterDiskSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateMachineConfig updateMachineConfig = (UpdateMachineConfig) o;
    return Objects.equals(this.numberOfWorkers, updateMachineConfig.numberOfWorkers) &&
        Objects.equals(this.numberOfPreemptibleWorkers, updateMachineConfig.numberOfPreemptibleWorkers) &&
        Objects.equals(this.masterMachineType, updateMachineConfig.masterMachineType) &&
        Objects.equals(this.masterDiskSize, updateMachineConfig.masterDiskSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numberOfWorkers, numberOfPreemptibleWorkers, masterMachineType, masterDiskSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateMachineConfig {\n");
    
    sb.append("    numberOfWorkers: ").append(toIndentedString(numberOfWorkers)).append("\n");
    sb.append("    numberOfPreemptibleWorkers: ").append(toIndentedString(numberOfPreemptibleWorkers)).append("\n");
    sb.append("    masterMachineType: ").append(toIndentedString(masterMachineType)).append("\n");
    sb.append("    masterDiskSize: ").append(toIndentedString(masterDiskSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

