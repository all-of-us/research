/*
 * Jira
 * Service for Jira Interactions. 
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.pmiops.workbench.jira.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.pmiops.workbench.jira.model.IssueType;
import org.pmiops.workbench.jira.model.ProjectDetails;
import java.io.Serializable;

/**
 * Fields information like project id, issue type etc
 */
@ApiModel(description = "Fields information like project id, issue type etc")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-05T12:07:34.682-05:00")
public class FieldsDetails implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("project")
  private ProjectDetails project = null;

  @SerializedName("summary")
  private String summary = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("issuetype")
  private IssueType issuetype = null;

  public FieldsDetails project(ProjectDetails project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(required = true, value = "")
  public ProjectDetails getProject() {
    return project;
  }

  public void setProject(ProjectDetails project) {
    this.project = project;
  }

  public FieldsDetails summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @ApiModelProperty(value = "")
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }

  public FieldsDetails description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FieldsDetails issuetype(IssueType issuetype) {
    this.issuetype = issuetype;
    return this;
  }

   /**
   * Get issuetype
   * @return issuetype
  **/
  @ApiModelProperty(value = "")
  public IssueType getIssuetype() {
    return issuetype;
  }

  public void setIssuetype(IssueType issuetype) {
    this.issuetype = issuetype;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldsDetails fieldsDetails = (FieldsDetails) o;
    return Objects.equals(this.project, fieldsDetails.project) &&
        Objects.equals(this.summary, fieldsDetails.summary) &&
        Objects.equals(this.description, fieldsDetails.description) &&
        Objects.equals(this.issuetype, fieldsDetails.issuetype);
  }

  @Override
  public int hashCode() {
    return Objects.hash(project, summary, description, issuetype);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldsDetails {\n");
    
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    issuetype: ").append(toIndentedString(issuetype)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

