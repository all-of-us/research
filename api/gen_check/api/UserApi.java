/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.pmiops.workbench.api;

import org.pmiops.workbench.model.UserResponse;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-01-05T14:10:50.813-05:00")

@Api(value = "User", description = "the User API")
public interface UserApi {

    @ApiOperation(value = "", notes = "Returns user information matching search terms", response = UserResponse.class, authorizations = {
        @Authorization(value = "aou_oauth", scopes = {
            
            })
    }, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The user information matching supplied search terms", response = UserResponse.class) })
    
    @RequestMapping(value = "/v1/user/{term}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<UserResponse> user(@ApiParam(value = "String to find in user's name or email address. Search is a case-insensitive substring match.",required=true ) @PathVariable("term") String term,@ApiParam(value = "Pagination token retrieved from a previous call to user; used for retrieving additional pages of results. ") @RequestParam(value = "pageToken", required = false) String pageToken,@ApiParam(value = "Maximum number of results to return in a response. Defaults to 10. ") @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "Sort order, either 'asc' or 'desc'. Defaults to 'asc' on the user's email.") @RequestParam(value = "sortOrder", required = false) String sortOrder);

}
