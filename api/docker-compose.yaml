version: "3"
services:
  scripts:
    build:
      context: ./src/dev/server
    image: allofustest/workbench-dev-api:local
    user: ${UID}
    working_dir: /w/api
    volumes:
      - src-sync:/w:nocopy
      - gradle-cache:/.gradle
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached
  db:
    image: mysql:5.7.27
    env_file:
      - db/vars.env
    volumes:
      - db:/var/lib/mysql
    ports:
      - 127.0.0.1:3306:3306
  api:
    depends_on:
      - db
    build:
      context: ./src/dev/server
    image: allofustest/workbench-dev-api:local
    user: ${UID}
    working_dir: /w/api
    volumes:
      - src-sync:/w:nocopy
      - gradle-cache:/.gradle
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached
    command: ./project.rb start-api-and-incremental-build
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json
    env_file:
      - db/vars.env
    ports:
      - 127.0.0.1:8081:8081
      - 127.0.0.1:8001:8001
  es-scripts:
    build:
      context: ./src/dev/server
    image: allofustest/workbench-dev-api:local
    user: ${UID}
    working_dir: /w/api
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json
    volumes:
      - src-sync:/w:nocopy
      - gradle-cache:/.gradle
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached
  db-scripts:
    depends_on:
      - db
    build:
      context: ./src/dev/server
    image: allofustest/workbench-dev-api:local
    user: ${UID}
    working_dir: /w/api/db
    volumes:
      - src-sync:/w:nocopy
      - gradle-cache:/.gradle
    entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]
    env_file:
      - db/vars.env

  api-scripts:
    depends_on:
      - db
    build:
      context: ./src/dev/server
    image: allofustest/workbench-dev-api:local
    user: ${UID}
    working_dir: /w/api
    volumes:
      - src-sync:/w:nocopy
      - gradle-cache:/.gradle
    entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]
    env_file:
      - db/vars.env

  cdr-scripts:
    depends_on:
      - db
    build:
      context: ./src/dev/server
    image: allofustest/workbench-dev-api:local
    user: ${UID}
    working_dir: /w/api/db-cdr
    volumes:
      - src-sync:/w:nocopy
      - gradle-cache:/.gradle
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached
    entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]
    env_file:
      - db-cdr/vars.env

  db-make-bq-tables:
    depends_on:
      - db
    build:
      context: ./src/dev/server
    image: allofustest/workbench-dev-api:local
    user: ${UID}
    working_dir: /w/db-cdr
    volumes:
      - gradle-cache:/.gradle
      - .:/w:cached
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached

    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json
    env_file:
      - db-cdr/vars.env

  db-cloudsql-import:
    build:
      context: ./src/dev/server
    image: allofustest/workbench-dev-api:local
    user: ${UID}
    working_dir: /w/db-cdr
    volumes:
      - gradle-cache:/.gradle
      - .:/w:cached
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached

    entrypoint: ["./generate-cdr/cloudsql-import.sh"]
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json
    env_file:
      - db/vars.env

  db-local-mysql-import:
    build:
      context: ./src/dev/server
    image: allofustest/workbench-dev-api:local
    user: ${UID}
    working_dir: /w/db-cdr
    volumes:
      - gradle-cache:/.gradle
      - .:/w:cached
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached

    entrypoint: ["./generate-cdr/local-mysql-import.sh"]
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json
    env_file:
      - db/vars.env

  cloud-sql-proxy:
    build:
      context: ./src/dev/server
    image: allofustest/workbench-dev-api:local
    user: ${UID}
    working_dir: /w
    volumes:
      - .:/w:cached
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached
    command: |
      cloud_sql_proxy
        -instances all-of-us-workbench-test:us-central1:workbenchmaindb=tcp:0.0.0.0:3307
        -credential_file=/w/sa-key.json

  mysql-cloud:
    depends_on:
      - cloud-sql-proxy
    image: mysql:5.7.27
    user: ${UID}
    working_dir: /w
    volumes:
      - .:/w:cached
    entrypoint: mysql --host=cloud-sql-proxy --port=3307

volumes:
  db:
  esdata:
  gradle-cache:
  src-sync:
    external: true

