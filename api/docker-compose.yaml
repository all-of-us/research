version: "3"
services:
  scripts:
    build:
      context: ./src/dev/server
    user: ${UID}
    working_dir: /w/api
    volumes:
      - ..:/w:cached
      - gradle-cache:/.gradle
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached
  db:
    image: mysql:5.7.27
    env_file:
      - db/vars.env
    volumes:
      - db:/var/lib/mysql
    ports:
      - 3306:3306
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.6.0
    ports:
      - 127.0.0.1:9200:9200
    environment:
      # Disable bootstrap checks so users don't have to fiddle with
      # vm.max_map_count. Note that this file is not used in production
      # deployments; bootstrap checks are still enabled for production
      # deployments.
      - "transport.host=localhost"
    volumes:
      - esdata:/usr/share/elasticsearch/data
  api:
    depends_on:
      - db
      - elastic
    build:
      context: ./src/dev/server
    user: ${UID}
    working_dir: /w/api
    volumes:
      - ..:/w:cached
      - gradle-cache:/.gradle
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached
    command: ./project.rb start-api-and-incremental-build
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json
    env_file:
      - db/vars.env
    ports:
      - 8081:8081
      - 8001:8001
  es-scripts:
    depends_on:
      - elastic
    build:
      context: ./src/dev/server
    user: ${UID}
    working_dir: /w/api
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json
    volumes:
      - ..:/w:cached
      - gradle-cache:/.gradle
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached
  db-scripts:
    depends_on:
      - db
    build:
      context: ./src/dev/server
    user: ${UID}
    working_dir: /w/api/db
    volumes:
      - ..:/w:cached
      - gradle-cache:/.gradle
    entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', --]
    env_file:
      - db/vars.env
  cdr-scripts:
    depends_on:
      - db
    build:
      context: ./src/dev/server
    user: ${UID}
    working_dir: /w/api/db-cdr
    volumes:
      - ..:/w:cached
      - gradle-cache:/.gradle
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached
    entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', --]
    env_file:
      - db-cdr/vars.env

  db-make-bq-tables:
      depends_on:
        - db
      build:
        context: ./src/dev/server
      user: ${UID}
      working_dir: /w/db-cdr
      volumes:
        - gradle-cache:/.gradle
        - .:/w:cached
        - ~/.config:/.config:cached
        - ~/.gsutil:/.gsutil:cached

      environment:
        - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json
      env_file:
        - db-cdr/vars.env

  db-cloudsql-import:
    build:
      context: ./src/dev/server
    user: ${UID}
    working_dir: /w/db-cdr
    volumes:
      - gradle-cache:/.gradle
      - .:/w:cached
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached

    entrypoint: ["./generate-cdr/cloudsql-import.sh"]
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json
    env_file:
      - db/vars.env

  db-local-mysql-import:
    build:
      context: ./src/dev/server
    user: ${UID}
    working_dir: /w/db-cdr
    volumes:
      - gradle-cache:/.gradle
      - .:/w:cached
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached

    entrypoint: ["./generate-cdr/local-mysql-import.sh"]
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json
    env_file:
      - db/vars.env

  cloud-sql-proxy:
    build:
      context: ./src/dev/server
    user: ${UID}
    working_dir: /w
    volumes:
      - .:/w:cached
      - ~/.config:/.config:cached
      - ~/.gsutil:/.gsutil:cached
    command: |
      cloud_sql_proxy
        -instances all-of-us-workbench-test:us-central1:workbenchmaindb=tcp:0.0.0.0:3307
        -credential_file=/w/sa-key.json

  mysql-cloud:
    depends_on:
      - cloud-sql-proxy
    image: mysql:5.7.27
    user: ${UID}
    working_dir: /w
    volumes:
      - .:/w:cached
    entrypoint: mysql --host=cloud-sql-proxy --port=3307

  update-config:
    depends_on:
      - db
    build:
     context: ./src/dev/server
    user: ${UID}
    working_dir: /w/api
    volumes:
      - ..:/w:cached
      - gradle-cache:/.gradle
    entrypoint: wait-for-it db:3306 -- ./gradlew :loadConfig
    env_file:
      - db/vars.env

  update-cdr-versions:
      depends_on:
        - db
      build:
       context: ./src/dev/server
      user: ${UID}
      working_dir: /w/api
      volumes:
        - ..:/w:cached
        - gradle-cache:/.gradle
      entrypoint: wait-for-it db:3306 -- ./gradlew :updateCdrVersions
      env_file:
        - db/vars.env
volumes:
  db:
  esdata:
  gradle-cache:
