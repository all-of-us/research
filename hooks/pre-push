#!/usr/bin/env bash
set -euo pipefail

# Checks to run before pushing to a remote git repo for review/merging.

# Only lint modified files, see https://coderwall.com/p/l5ddcq/lint-code-before-git-pushing
remote="$1"
url="$2"
z40=0000000000000000000000000000000000000000

while read local_ref local_sha remote_ref remote_sha
do
  if [ "${local_sha}" = $z40 ]; then
    # branch deleted
    exit 0
  fi

  baseline="${remote_sha}"
  if [ "${remote_sha}" = $z40 ]; then
    # New remote branch. We can't tell for sure whether there are Typescript
    # changes logically included here, but as a heuristic check against the
    # local master. If there's no Typescript changes, this allows us to skip
    # linting for the common case of "pull master, branch, commit, push remote".
    baseline="master"
  fi

  files=$(git diff --name-only "${baseline}..${local_sha}")

  for dir in "ui"; do
    pushd "${dir}" > /dev/null
    if [ -n "`echo ${files} | grep -w "${dir}\/.*\.tsx\?"`" ]; then
      echo "Linting ${dir}..."
      if [ -x "$(command -v yarn)" ]; then
        yarn run lint --files "$(echo '${files}' | tr '\n' ' ')"
      else
        ./project.rb lint
      fi
    else
      echo "No ${dir} files changed to lint."
    fi
    popd > /dev/null
  done

  pushd "api" > /dev/null
  if [ -n "`echo ${files} | grep -w "api\/.*\.java"`" ]; then
    echo "Linting Java (via Gradle)"
    ./gradlew spotlessCheck
  else
    echo "No Java files changed to lint."
  fi
  popd > /dev/null
done
