- decided to hard code nav bar tab into the route data instead of deriving from the URL even though it is possible.

- there is currently a new getRuntime call being made on every navigation link since the help sidebar is being rerendered as well as the withRuntimeStore() hook. Not the end of the world? This should go away once we stop rerendering the entire app on every navigation.

      insanely hard bug to track down. ultimately it was because the help sidebar automatically loads a runtime
      due to import the withRuntimeStore(). Loading a runtime will call this function with the namespace stored in
      runtime store.
      the namespace in runtime store is set by a subscription in the workspace-wrapper that listens to URL route changes
      previously, the help sidebar would render AFTER the workspace-wrapper has finished loading and already set the
      namespace in the runtime store.
      now, the help sidebar and workspace wrapper load at the same time so the initial call to useRuntime may come
      before the workspace namespace has been set by teh workspace wrapper's URL subscription
      no problem, once the URL subscription loads the namespace into the runtime store we should be able to
      load the initial runtime
      WRONG, the first call to getRuntime is called with a null namespace and causes it to error out. After,
      the async error handler will null out the workspaceNamespace.
      Effectively, all future calls to useRuntime will no longer know what the namespace is since it was nulled out
      Effectively effectively, this means if the initial call to getRuntime fails for any reason other than a 404,
      all future calls are doomed.

- the fact that help-sidebar is being rendered on every page load influences some tech designs such as not being able to have it subscribe to router changes.
-  this also makes the transitioning animations pretty wonky since it's unmounting and being recreated on every new page load 
